#-----------------------------------------------------------
# Vivado v2021.2 (64-bit)
# SW Build 3367213 on Tue Oct 19 02:47:39 MDT 2021
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
# Start of session at: Wed Mar 27 10:47:36 2024
# Process ID: 1277357
# Current directory: /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190
# Command line: vivado -mode batch -source system_project.tcl
# Log file: /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/vivado.log
# Journal file: /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/vivado.jou
# Running On: epics-X9DAi, OS: Linux, CPU Frequency: 1407.752 MHz, CPU Physical cores: 16, Host memory: 135124 MB
#-----------------------------------------------------------
source system_project.tcl
# source ../../../scripts/adi_env.tcl
## set ad_hdl_dir [file normalize [file join [file dirname [info script]] "../"]]
## if [info exists ::env(ADI_HDL_DIR)] {
##   set ad_hdl_dir [file normalize $::env(ADI_HDL_DIR)]
## }
## if [info exists ::env(ADI_GHDL_DIR)] {
##   set ad_ghdl_dir [file normalize $::env(ADI_GHDL_DIR)]
## }
## set required_vivado_version "2022.2"
## if {[info exists ::env(REQUIRED_VIVADO_VERSION)]} {
##   set required_vivado_version $::env(REQUIRED_VIVADO_VERSION)
## } elseif {[info exists REQUIRED_VIVADO_VERSION]} {
##   set required_vivado_version $REQUIRED_VIVADO_VERSION
## }
## if {[info exists ::env(ADI_IGNORE_VERSION_CHECK)]} {
##   set IGNORE_VERSION_CHECK 1
## } elseif {![info exists IGNORE_VERSION_CHECK]} {
##   set IGNORE_VERSION_CHECK 0
## }
## if {![info exists REQUIRED_QUARTUS_VERSION]} {
##   set REQUIRED_QUARTUS_VERSION "22.4.0"
## }
## proc get_env_param {name default_value} {
##   if [info exists ::env($name)] {
##     puts "Getting from environment the parameter: $name=$::env($name) "
##     return $::env($name)
##   } else {
##     return $default_value
##   }
## }
# source $ad_hdl_dir/projects/scripts/adi_project_xilinx.tcl
## if {[info exists ::env(ADI_USE_OOC_SYNTHESIS)]} {
##   if {[string equal $::env(ADI_USE_OOC_SYNTHESIS) n]} {
##      set ADI_USE_OOC_SYNTHESIS 0
##   } else {
##      set ADI_USE_OOC_SYNTHESIS 1
##   }
## } elseif {![info exists ADI_USE_OOC_SYNTHESIS]} {
##    set ADI_USE_OOC_SYNTHESIS 1
## }
## if {![info exists ::env(ADI_MAX_OOC_JOBS)]} {
##   set ADI_MAX_OOC_JOBS 4
## } else {
##   set ADI_MAX_OOC_JOBS $::env(ADI_MAX_OOC_JOBS)
## }
## set ADI_USE_INCR_COMP 1
## set ADI_POWER_OPTIMIZATION 0
## set p_board "not-applicable"
## set p_device "none"
## set sys_zynq 1
## set p_prcfg_init ""
## set p_prcfg_list ""
## set p_prcfg_status ""
## proc adi_project {project_name {mode 0} {parameter_list {}} } {
## 
##   set device ""
##   set board ""
## 
##   # Determine the device based on the board name
##   if [regexp "_ac701" $project_name] {
##     set device "xc7a200tfbg676-2"
##     set board [lindex [lsearch -all -inline [get_board_parts] *ac701*] end]
##   }
##   if [regexp "_kc705" $project_name] {
##     set device "xc7k325tffg900-2"
##     set board [lindex [lsearch -all -inline [get_board_parts] *kc705*] end]
##   }
##   if [regexp "_vc707" $project_name] {
##     set device "xc7vx485tffg1761-2"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vc707*] end]
##   }
##   if [regexp "_vcu118" $project_name] {
##     set device "xcvu9p-flga2104-2L-e"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vcu118*] end]
##   }
##   if [regexp "_vcu128" $project_name] {
##     set device "xcvu37p-fsvh2892-2L-e"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vcu128:part0*] end]
##   }
##   if [regexp "_kcu105" $project_name] {
##     set device "xcku040-ffva1156-2-e"
##     set board [lindex [lsearch -all -inline [get_board_parts] *kcu105*] end]
##   }
##   if [regexp "_zed" $project_name] {
##     set device "xc7z020clg484-1"
##     set board [lindex [lsearch -all -inline [get_board_parts] *zed*] end]
##   }
##   if [regexp "_coraz7s" $project_name] {
##     set device "xc7z007sclg400-1"
##     set board "not-applicable"
##   }
##   if [regexp "_microzed" $project_name] {
##     set device "xc7z010clg400-1"
##     set board "not-applicable"
##   }
##   if [regexp "_zc702" $project_name] {
##     set device "xc7z020clg484-1"
##     set board [lindex [lsearch -all -inline [get_board_parts] *zc702*] end]
##   }
##   if [regexp "_zc706" $project_name] {
##     set device "xc7z045ffg900-2"
##     set board [lindex [lsearch -all -inline [get_board_parts] *zc706*] end]
##   }
##   if [regexp "_mitx045" $project_name] {
##     set device "xc7z045ffg900-2"
##     set board "not-applicable"
##   }
##   if [regexp "_zcu102" $project_name] {
##     set device "xczu9eg-ffvb1156-2-e"
##     set board [lindex [lsearch -all -inline [get_board_parts] *zcu102*] end]
##   }
##   if [regexp "_vmk180_es1" $project_name] {
##     enable_beta_device xcvm*
##     xhub::refresh_catalog [xhub::get_xstores xilinx_board_store]
##     xhub::install [xhub::get_xitems xilinx.com:xilinx_board_store:vmk180_es:*] -quiet
##     set_param board.repoPaths [get_property LOCAL_ROOT_DIR [xhub::get_xstores xilinx_board_store]]
##     set device "xcvm1802-vsva2197-2MP-e-S-es1"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vmk180_es*] end]
##   }
##   if [regexp "_vmk180" $project_name] {
##     set device "xcvm1802-vsva2197-2MP-e-S"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vmk180*] end]
##   }
##   if [regexp "_vck190" $project_name] {
##     set device "xcvc1902-vsva2197-2MP-e-S"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vck190*] end]
##   }
##   if [regexp "_vc709" $project_name] {
##     set device "xc7vx690tffg1761-2"
##     set board [lindex [lsearch -all -inline [get_board_parts] *vc709*] end]
##   }
##   if [regexp "_kv260" $project_name] {
##     set device "xck26-sfvc784-2LV-c"
##     set board [lindex [lsearch -all -inline [get_board_parts] *kv260*] end]
##   }
## 
##   adi_project_create $project_name $mode $parameter_list $device $board
## }
## proc adi_project_create {project_name mode parameter_list device {board "not-applicable"}}  {
## 
##   global ad_hdl_dir
##   global ad_ghdl_dir
##   global ad_project_dir
##   global p_board
##   global p_device
##   global sys_zynq
##   global required_vivado_version
##   global IGNORE_VERSION_CHECK
##   global ADI_USE_OOC_SYNTHESIS
##   global ADI_USE_INCR_COMP
## 
##   if {![info exists ::env(ADI_PROJECT_DIR)]} {
##     set actual_project_name $project_name
##   } else {
##     set actual_project_name "$::env(ADI_PROJECT_DIR)${project_name}"
##   }
## 
##   ## update the value of $p_device only if it was not already updated elsewhere
##   if {$p_device eq "none"} {
##     set p_device $device
##   }
##   set p_board $board
## 
##   if [regexp "^xc7z" $p_device] {
##     set sys_zynq 1
##   } elseif [regexp "^xck26" $p_device] {
##     set sys_zynq 2
##   } elseif [regexp "^xczu" $p_device]  {
##     set sys_zynq 2
##   } elseif [regexp "^xcv\[ecmph\]" $p_device]  {
##     set sys_zynq 3
##   } else {
##     set sys_zynq 0
##   }
## 
##   set VIVADO_VERSION [version -short]
##   if {$IGNORE_VERSION_CHECK} {
##     if {[string compare $VIVADO_VERSION $required_vivado_version] != 0} {
##       puts -nonewline "CRITICAL WARNING: vivado version mismatch; "
##       puts -nonewline "expected $required_vivado_version, "
##       puts -nonewline "got $VIVADO_VERSION.\n"
##     }
##   } else {
##     if {[string compare $VIVADO_VERSION $required_vivado_version] != 0} {
##       puts -nonewline "ERROR: vivado version mismatch; "
##       puts -nonewline "expected $required_vivado_version, "
##       puts -nonewline "got $VIVADO_VERSION.\n"
##       puts -nonewline "This ERROR message can be down-graded to CRITICAL WARNING by setting ADI_IGNORE_VERSION_CHECK environment variable to 1. Be aware that ADI will not support you, if you are using a different tool version.\n"
##       exit 2
##     }
##   }
## 
##    if {[info exists ::env(ADI_MATLAB)]} {
##     set ADI_MATLAB 1
##     set actual_project_name "$ad_hdl_dir/vivado_prj"
##     if {$mode != 0} {
##         puts -nonewline "MATLAB builds do not support mode 2"
##         exit 2
##     }
##   } else {
##     set ADI_MATLAB 0
##   }
## 
##   if {$mode == 0} {
##      set project_system_dir "${actual_project_name}.srcs/sources_1/bd/system"
##      if {$ADI_MATLAB == 0} {
##        create_project ${actual_project_name} . -part $p_device -force
##      }
##   } else {
##     set project_system_dir "${actual_project_name}.srcs/sources_1/bd/system"
##     create_project -in_memory -part $p_device
##   }
## 
##   if {$mode == 1} {
##     file mkdir ${actual_project_name}.data
##   }
## 
##   if {$p_board ne "not-applicable"} {
##     set_property board_part $p_board [current_project]
##   }
## 
##   if {$ADI_MATLAB == 0} {
##     set lib_dirs $ad_hdl_dir/library
##   } else {
##     set lib_dirs [get_property ip_repo_paths [current_fileset]]
##      lappend lib_dirs $ad_hdl_dir/library
##   }
##   if {[info exists ::env(ADI_GHDL_DIR)]} {
##     if {$ad_hdl_dir ne $ad_ghdl_dir} {
##       lappend lib_dirs $ad_ghdl_dir/library
##     }
##   }
## 
##   # Set a common IP cache for all projects
##   if {$ADI_USE_OOC_SYNTHESIS == 1} {
##     if {[file exists $ad_hdl_dir/ipcache] == 0} {
##       file mkdir $ad_hdl_dir/ipcache
##     }
##     config_ip_cache -import_from_project -use_cache_location $ad_hdl_dir/ipcache
##   }
## 
##   set_property ip_repo_paths $lib_dirs [current_fileset]
##   update_ip_catalog
## 
##   ## Load custom message severity definitions
## 
##   if {![info exists ::env(ADI_DISABLE_MESSAGE_SUPPRESION)]} {
##     source $ad_hdl_dir/projects/scripts/adi_xilinx_msg.tcl
##   }
## 
##   ## In Vivado there is a limit for the number of warnings and errors which are
##   ## displayed by the tool for a particular error or warning; the default value
##   ## of this limit is 100.
##   ## Overrides the default limit to 2000.
##   set_param messaging.defaultLimit 2000
## 
##   # Set parameters of the top level file
##   # Make the same parameters available to system_bd.tcl
##   set proj_params [get_property generic [current_fileset]]
##   foreach {param value} $parameter_list {
##     lappend proj_params $param=$value
##     set ad_project_params($param) $value
##   }
##   set_property generic $proj_params [current_fileset]
## 
##   create_bd_design "system"
##   source system_bd.tcl
## 
##   save_bd_design
##   validate_bd_design
## 
##   if {$ADI_USE_OOC_SYNTHESIS == 1} {
##     set_property synth_checkpoint_mode Hierarchical [get_files  $project_system_dir/system.bd]
##   } else {
##     set_property synth_checkpoint_mode None [get_files  $project_system_dir/system.bd]
##   }
##   generate_target {synthesis implementation} [get_files  $project_system_dir/system.bd]
##   if {$ADI_USE_OOC_SYNTHESIS == 1} {
##     export_ip_user_files -of_objects [get_files  $project_system_dir/system.bd] -no_script -sync -force -quiet
##     create_ip_run [get_files  $project_system_dir/system.bd]
##   }
##   make_wrapper -files [get_files $project_system_dir/system.bd] -top
## 
##   if {$mode == 0} {
##     import_files -force -norecurse -fileset sources_1 $project_system_dir/hdl/system_wrapper.v
##   } else {
##     write_hwdef -file "${actual_project_name}.data/$project_name.hwdef"
##   }
## 
##   if {$ADI_USE_INCR_COMP == 1} {
##     if {[file exists ./reference.dcp]} {
##       set_property incremental_checkpoint ./reference.dcp [get_runs impl_1]
##     }
##   }
## 
## }
## proc adi_project_files {project_name project_files} {
## 
##   foreach pfile $project_files {
##     if {[string range $pfile [expr 1 + [string last . $pfile]] end] == "xdc"} {
##       add_files -norecurse -fileset constrs_1 $pfile
##     } elseif [regexp "_constr.tcl" $pfile] {
##       add_files -norecurse -fileset sources_1 $pfile
##     } else {
##       add_files -norecurse -fileset sources_1 $pfile
##     }
##   }
## 
##   # NOTE: top file name is always system_top
##   set_property top system_top [current_fileset]
## }
## proc adi_project_run {project_name} {
## 
##   global ad_project_dir
##   global ADI_POWER_OPTIMIZATION
##   global ADI_USE_OOC_SYNTHESIS
##   global ADI_MAX_OOC_JOBS
## 
##   if {![info exists ::env(ADI_PROJECT_DIR)]} {
##     set actual_project_name $project_name
##     set ad_project_dir ""
##   } else {
##     set actual_project_name "$::env(ADI_PROJECT_DIR)${project_name}"
##     set ad_project_dir "$::env(ADI_PROJECT_DIR)"
##   }
##   if {[info exists ::env(ADI_SKIP_SYNTHESIS)]} {
##     puts "Skipping synthesis"
##     return
##   }
## 
##   if {$ADI_USE_OOC_SYNTHESIS == 1} {
##     launch_runs -jobs $ADI_MAX_OOC_JOBS system_*_synth_1 synth_1
##   } else {
##     launch_runs synth_1
##   }
##   wait_on_run synth_1
##   open_run synth_1
##   report_timing_summary -file ${ad_project_dir}timing_synth.log
## 
##   if {![info exists ::env(ADI_NO_BITSTREAM_COMPRESSION)] && ![info exists ADI_NO_BITSTREAM_COMPRESSION]} {
##     set_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]
##   }
## 
##   if {$ADI_POWER_OPTIMIZATION == 1} {
##   set_property STEPS.POWER_OPT_DESIGN.IS_ENABLED true [get_runs impl_1]
##   set_property STEPS.POST_PLACE_POWER_OPT_DESIGN.IS_ENABLED true [get_runs impl_1]
##   }
## 
##   set_param board.repoPaths [get_property LOCAL_ROOT_DIR [xhub::get_xstores xilinx_board_store]]
## 
##   launch_runs impl_1 -to_step write_bitstream
##   wait_on_run impl_1
##   open_run impl_1
##   report_timing_summary -warn_on_violation -file ${ad_project_dir}timing_impl.log
## 
##   if {[info exists ::env(ADI_GENERATE_UTILIZATION)]} {
##     set csv_file ${ad_project_dir}resource_utilization.csv
##     if {[ catch {
##       xilinx::designutils::report_failfast -csv -file $csv_file -transpose -no_header -ignore_pr -quiet
##       set MMCM [llength [get_cells -hierarchical -filter { PRIMITIVE_TYPE =~ *MMCM* }]]
##       set PLL [llength [get_cells -hierarchical -filter { PRIMITIVE_TYPE =~ *PLL* }]]
##       set worst_slack_setup [get_property SLACK [get_timing_paths -setup]]
##       set worst_slack_hold [get_property SLACK [get_timing_paths -hold]]
## 
##       set fileRead [open $csv_file r]
##       set lines [split [read $fileRead] "\n"]
##       set names_line [lindex $lines end-3]
##       set values_line [lindex $lines end-2]
##       close $fileRead
## 
##       set fileWrite [open $csv_file w]
##       puts $fileWrite "$names_line,MMCM*,PLL*,Worst_Setup_Slack,Worst_Hold_Slack"
##       puts $fileWrite "$values_line,$MMCM,$PLL,$worst_slack_setup,$worst_slack_hold"
##       close $fileWrite
##       } issue ] != 0 } {
##         puts "GENERATE_REPORTS: tclapp::xilinx::designutils not installed"
##       }
## 
##       # Define a list of IPs for which to generate report utilization
##       set IP_list {
##         ad_ip_jesd_204_tpl_adc
##         ad_ip_jesd_204_tpl_dac
##         axi_jesd204_rx
##         axi_jesd204_tx
##         jesd204_rx
##         jesd204_tx
##         axi_adxcvr
##         util_adxcvr
##         axi_dmac
##         util_cpack2
##         util_upack2
##       }
## 
##       foreach IP_name $IP_list {
## 	set output_file ${ad_project_dir}${IP_name}_resource_utilization.log
##         file delete $output_file
##         foreach IP_instance [ get_cells -quiet -hierarchical -filter " ORIG_REF_NAME =~ $IP_name || REF_NAME =~ $IP_name " ] {
##           report_utilization -hierarchical -hierarchical_depth 1 -cells $IP_instance -file $output_file -append -quiet
##           report_property $IP_instance -file $output_file -append -quiet
##           set report_file [ open $output_file a ]
##           puts $report_file "\n\n\n"
##           close $report_file
##         }
##       }
##     } else {
##     puts "GENERATE_REPORTS: Resource utilization files won't be generated because ADI_GENERATE_UTILIZATION env var is not set"
##   }
## 
##   ## Extract IP ports and their properties
## 
##   if {[info exists ::env(ADI_EXTRACT_PORTS)]} {
## 
##     set p_output_file ports_properties.txt
## 
##     # Define a list of IPs for which to generate the ports properties and nets report
##     set P_IP_list {
##       util_wfifo
##       util_rfifo
##       util_cpack2
##       util_upack2
##       ad_ip_jesd204_tpl_adc
##       ad_ip_jesd204_tpl_dac
##       rx_fir_decimator
##       tx_fir_interpolator
##       axi_ad9361
##       axi_adrv9009
##     }
## 
##     set fileWrite [open $p_output_file w]
## 
##     foreach P_IP_name $P_IP_list {
##       foreach P_IP_instance [ get_cells -quiet -hierarchical -filter " ORIG_REF_NAME =~ $P_IP_name || REF_NAME =~ $P_IP_name " ] {
##         set P_IP_instance_name [regsub -all {i_system_wrapper\/system_i\/} $P_IP_instance {}]
## 	if { [regexp {adc_tpl_core} $P_IP_instance_name] } {
##             set P_IP_INST  [regsub -all {\/adc_tpl_core/inst} $P_IP_instance_name {}]
##             puts "$P_IP_INST\n"
##         } elseif { [regexp {dac_tpl_core} $P_IP_instance_name] } {
##             set P_IP_INST  [regsub -all {\/dac_tpl_core/inst} $P_IP_instance_name {}]
##             puts "$P_IP_INST\n"
##         } else {
##             set P_IP_INST  [regsub -all {\/inst} $P_IP_instance_name {}]
##             puts "$P_IP_INST\n"
##         }
##         puts $fileWrite "\n$P_IP_INST properties: \n"
##         set list_of_IP_ports [ get_bd_pins -of_objects [get_bd_cells $P_IP_INST]]
##         foreach IP_port $list_of_IP_ports {
##           set pin_direction [get_property DIR [get_bd_pins $IP_port]]
##           set pin_path [get_property PATH [get_bd_pins $IP_port]]
##           set pin_path_name  [regsub {\/} $pin_path {}]
##           set left [get_property LEFT [get_bd_pins $IP_port]]
##           set right [get_property RIGHT [get_bd_pins $IP_port]]
##           puts $fileWrite "direction $pin_direction \nMSB $left \nLSB $right \nname $pin_path_name"
##           set net_info [get_bd_nets -of_objects [get_bd_pins $IP_port]]
##           set net_name  [regsub -all {\/} $net_info {}]
##           puts $fileWrite "net $net_name\n"
##         }
##       }
##     }
##     close $fileWrite
## 
##   } else {
##   puts "GENERATE_PORTS_REPORTS: IP ports properties and nets report files won't be generated because ADI_EXTRACT_PORTS env var is not set"
##   }
## 
##   if {[info exists ::env(ADI_GENERATE_XPA)]} {
##     set csv_file ${ad_project_dir}power_analysis.csv
##     set Layers "8to11"
##     set CapLoad "20"
##     set ToggleRate "15.00000"
##     set StatProb "0.500000"
## 
##     set_load $CapLoad [all_outputs]
##     set_operating_conditions -board_layers $Layers
##     set_switching_activity -default_toggle_rate $ToggleRate
##     set_switching_activity -default_static_probability $StatProb
##     set_switching_activity -type lut -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type register -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type shift_register -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type lut_ram -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type bram -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type dsp -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type gt_rxdata -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type gt_txdata -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type io_output -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type bram_enable -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type bram_wr_enable -toggle_rate $ToggleRate -static_probability $StatProb -all
##     set_switching_activity -type io_bidir_enable -toggle_rate $ToggleRate -static_probability $StatProb -all
##     report_power -file $csv_file
## 
##     set fileRead [open $csv_file r]
##     set filecontent [read $fileRead]
##     set input_list [split $filecontent "\n"]
## 
##     set TextList [lsearch -all -inline $input_list "*Total On-Chip Power (W)*"]
##     set on_chip_pwr "[lindex [lindex $TextList 0] 6] W"
##     set TextList [lsearch -all -inline $input_list "*Junction Temperature (C)*"]
##     set junction_temp "[lindex [lindex $TextList 0] 5] *C"
##     close $fileRead
## 
##     set fileWrite [open $csv_file w]
##     puts $fileWrite "On-chip_power,Junction_temp"
##     puts $fileWrite "$on_chip_pwr,$junction_temp"
##     close $fileWrite
##   } else {
##     puts "GENERATE_REPORTS: Power analysis files won't be generated because ADI_GENERATE_XPA env var is not set"
##   }
## 
##   # Look for undefined clocks which do not show up in the timing summary
##   set timing_check [check_timing -override_defaults no_clock -no_header -return_string]
##   if {[regexp { (\d+) register} $timing_check -> num_regs]} {
## 
##     if {[info exist num_regs]} {
##       if {$num_regs > 0} {
##         puts "CRITICAL WARNING: There are $num_regs registers with no clocks !!! See no_clock.log for details."
##         check_timing -override_defaults no_clock -verbose -file ${ad_project_dir}no_clock.log
##       }
##     }
## 
##   } else {
##     puts "CRITICAL WARNING: The search for undefined clocks failed !!!"
##   }
## 
##   file mkdir ${actual_project_name}.sdk
## 
##   set timing_string $[report_timing_summary -return_string]
##   if { [string match "*VIOLATED*" $timing_string] == 1 ||
##        [string match "*Timing constraints are not met*" $timing_string] == 1} {
##     write_hw_platform -fixed -force  -include_bit -file ${actual_project_name}.sdk/system_top_bad_timing.xsa
##     return -code error [format "ERROR: Timing Constraints NOT met!"]
##   } else {
##     write_hw_platform -fixed -force  -include_bit -file ${actual_project_name}.sdk/system_top.xsa
##   }
## }
## proc adi_project_synth {project_name prcfg_name hdl_files {xdc_files ""}} {
## 
##   global p_device
##   global ad_project_dir
## 
##   if {![info exists ::env(ADI_PROJECT_DIR)]} {
##     set actual_project_name $project_name
##   } else {
##     set actual_project_name "$::env(ADI_PROJECT_DIR)${project_name}"
##   }
## 
##   set p_prefix "${actual_project_name}.data/$project_name"
## 
##   if {$prcfg_name eq ""} {
## 
##     read_verilog .srcs/sources_1/bd/system/hdl/system_wrapper.v
##     read_verilog $hdl_files
##     read_xdc $xdc_files
## 
##     synth_design -mode default -top system_top -part $p_device > $p_prefix.synth.rds
##     write_checkpoint -force $p_prefix.synth.dcp
##     close_project
## 
##   } else {
## 
##     create_project -in_memory -part $p_device
##     read_verilog $hdl_files
##     synth_design -mode out_of_context -top "prcfg" -part $p_device > $p_prefix.${prcfg_name}_synth.rds
##     write_checkpoint -force $p_prefix.${prcfg_name}_synth.dcp
##     close_project
##   }
## }
## proc adi_project_impl {project_name prcfg_name {xdc_files ""}} {
## 
##   global p_device
##   global p_prcfg_init
##   global p_prcfg_list
##   global p_prcfg_status
##   global ad_project_dir
## 
##   if {![info exists ::env(ADI_PROJECT_DIR)]} {
##     set actual_project_name $project_name
##   } else {
##     set actual_project_name "$::env(ADI_PROJECT_DIR)${project_name}"
##   }
## 
##   set p_prefix "${actual_project_name}.data/$project_name"
## 
##   if {$prcfg_name eq "default"} {
##     set p_prcfg_status 0
##     set p_prcfg_list ""
##     set p_prcfg_init "$p_prefix.${prcfg_name}_impl.dcp"
##     file mkdir $project_name.sdk
##   }
## 
##   if {$prcfg_name eq "default"} {
## 
##     open_checkpoint $p_prefix.synth.dcp -part $p_device
##     read_xdc $xdc_files
##     read_checkpoint -cell i_prcfg $p_prefix.${prcfg_name}_synth.dcp
##     set_property HD.RECONFIGURABLE 1 [get_cells i_prcfg]
##     opt_design > $p_prefix.${prcfg_name}_opt.rds
##     write_debug_probes -force $p_prefix.${prcfg_name}_debug_nets.ltx
##     place_design > $p_prefix.${prcfg_name}_place.rds
##     route_design > $p_prefix.${prcfg_name}_route.rds
## 
##   } else {
## 
##     open_checkpoint $p_prefix.default_impl_bb.dcp -part $p_device
##     lock_design -level routing
##     read_checkpoint -cell i_prcfg $p_prefix.${prcfg_name}_synth.dcp
##     read_xdc $xdc_files
##     opt_design > $p_prefix.${prcfg_name}_opt.rds
##     place_design > $p_prefix.${prcfg_name}_place.rds
##     route_design > $p_prefix.${prcfg_name}_route.rds
##   }
## 
##   write_checkpoint -force $p_prefix.${prcfg_name}_impl.dcp
##   report_utilization -pblocks pb_prcfg -file $p_prefix.${prcfg_name}_utilization.rpt
##   report_timing_summary -file $p_prefix.${prcfg_name}_timing_summary.rpt
## 
##   if [expr [get_property SLACK [get_timing_paths]] < 0] {
##     set p_prcfg_status 1
##     puts "CRITICAL WARNING: Timing Constraints NOT met ($prcfg_name)!"
##   }
## 
##   write_checkpoint -force -cell i_prcfg $p_prefix.${prcfg_name}_prcfg_impl.dcp
##   update_design -cell i_prcfg -black_box
##   write_checkpoint -force $p_prefix.${prcfg_name}_impl_bb.dcp
##   open_checkpoint $p_prefix.${prcfg_name}_impl.dcp -part $p_device
##   write_bitstream -force -bin_file -file $p_prefix.${prcfg_name}.bit
##   write_sysdef -hwdef $p_prefix.hwdef -bitfile $p_prefix.${prcfg_name}.bit -file $p_prefix.${prcfg_name}.hdf
##   file copy -force $p_prefix.${prcfg_name}.hdf $project_name.sdk/system_top.${prcfg_name}.hdf
## 
##   if {$prcfg_name ne "default"} {
##     lappend p_prcfg_list "$p_prefix.${prcfg_name}_impl.dcp"
##   }
## 
##   if {$prcfg_name eq "default"} {
##     file copy -force $p_prefix.${prcfg_name}.hdf $project_name.sdk/system_top.hdf
##   }
## }
## proc adi_project_verify {project_name} {
## 
##   # checkpoint for the default design
##   global p_prcfg_init
##   # list of checkpoints with all the PRs integrated into the default design
##   global p_prcfg_list
##   global p_prcfg_status
## 
##   set p_prefix "${actual_project_name}.data/$project_name"
## 
##   pr_verify -full_check -initial $p_prcfg_init \
##     -additional $p_prcfg_list \
##     -file $p_prefix.prcfg_verify.log
## 
##   if {$p_prcfg_status == 1} {
##     return -code error [format "ERROR: Timing Constraints NOT met!"]
##   }
## }
# source $ad_hdl_dir/projects/scripts/adi_board.tcl
## package require math
## set sys_cpu_interconnect_index 0
## set sys_hpc0_interconnect_index -1
## set sys_hpc1_interconnect_index -1
## set sys_hp0_interconnect_index -1
## set sys_hp1_interconnect_index -1
## set sys_hp2_interconnect_index -1
## set sys_hp3_interconnect_index -1
## set sys_mem_interconnect_index -1
## set sys_mem_clk_index 0
## set xcvr_index -1
## set xcvr_tx_index 0
## set xcvr_rx_index 0
## set xcvr_instance NONE
## proc ad_ip_instance {i_ip i_name {i_params {}}} {
## 
##   set cell [create_bd_cell -type ip -vlnv [get_ipdefs -all -filter "VLNV =~ *:${i_ip}:* && \
##     design_tool_contexts =~ *IPI* && UPGRADE_VERSIONS == \"\""] ${i_name}]
##   if {$i_params != {}} {
##     set config {}
##     # Add CONFIG. prefix to all config options
##     foreach {k v} $i_params {
##       lappend config "CONFIG.$k" $v
##     }
##     set_property -dict $config $cell
##   }
## }
## proc ad_ip_parameter {i_name i_param i_value} {
## 
##   set_property ${i_param} ${i_value} [get_bd_cells ${i_name}]
## }
## proc ad_connect_type {p_name} {
## 
##   set m_name ""
## 
##   if {$m_name eq ""} {set m_name [get_bd_intf_pins  -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_pins       -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_intf_ports -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_ports      -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_intf_nets  -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_nets       -quiet $p_name]}
## 
##   return $m_name
## }
## proc ad_connect_int_class {p_name} {
## 
##   set m_name ""
## 
##   if {$m_name eq ""} {set m_name [get_bd_intf_pins  -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_pins       -quiet $p_name]}
##   # All ports can be handled as pins
##   # if {$m_name eq ""} {set m_name [get_bd_intf_ports -quiet $p_name]}
##   # if {$m_name eq ""} {set m_name [get_bd_ports      -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_intf_nets  -quiet $p_name]}
##   if {$m_name eq ""} {set m_name [get_bd_nets       -quiet $p_name]}
## 
##   if {!($m_name eq "")} {
##     return [get_property CLASS $m_name]
##   }
## 
##   if {$p_name eq "GND" || $p_name eq "VCC"} {
##     return "const"
##   }
## 
##   return "newnet"
## }
## proc ad_connect_int_get_const {name width} {
##   switch $name {
##     GND {
##       set value 0
##     }
##     VCC {
##       set value [expr (1 << $width) - 1]
##     }
##     default {
##       error "ERROR: ad_connect_int_get_const: Unhandled constant name $name"
##     }
##   }
## 
##   set cell_name "$name\_$width"
## 
##   set cell [get_bd_cells -quiet $cell_name]
##   if {$cell eq ""} {
##     # Create new constant source
##     ad_ip_instance xlconstant $cell_name
##     set cell [get_bd_cells -quiet $cell_name]
##     set_property CONFIG.CONST_WIDTH $width $cell
##     set_property CONFIG.CONST_VAL $value $cell
##   }
## 
##   return $cell
## }
## proc ad_connect_int_width {obj} {
##   if {$obj eq ""} {
##     error "ERROR: ad_connect_int_width: No object provided."
##   }
## 
##   set classname [get_property -quiet CLASS $obj]
##   if {$classname eq ""} {
##     error "ERROR: ad_connect_int_width: Cannot determine width of class-less object: $obj"
##   }
##   if {[string first intf $classname] != -1} {
##     error "ERROR: ad_connect_int_width: Cannot determine width of interface object: $obj ($classname)"
##   }
## 
##   if {([get_property -quiet LEFT $obj] eq "") || ([get_property -quiet RIGHT $obj] eq "")} {
##     return 1
##   }
## 
##   set left [get_property LEFT $obj]
##   set right [get_property RIGHT $obj]
## 
##   set high [::math::max $left $right]
##   set low [::math::min $left $right]
## 
##   return [expr {1 + $high - $low}]
## }
## proc ad_connect {name_a name_b} {
##   set type_a [ad_connect_int_class $name_a]
##   set type_b [ad_connect_int_class $name_b]
## 
##   set obj_a [ad_connect_type $name_a]
##   set obj_b [ad_connect_type $name_b]
## 
##   if {!([string first intf $type_a]+1) != !([string first intf $type_b]+1)} {
##     error "ERROR: ad_connect: Cannot connect non-interface to interface: $name_a ($type_a) <-/-> $name_b ($type_b)"
##   }
## 
##   switch $type_a,$type_b {
##     newnet,newnet {
##       error "ERROR: ad_connect: Cannot create connection between two new nets: $name_a <-/-> $name_b"
##     }
##     const,const {
##       error "ERROR: ad_connect: Cannot connect constant to constant: $name_a <-/-> $name_b"
##     }
##     bd_net,bd_net -
##     bd_intf_net,bd_intf_net {
##       error "ERROR: ad_connect: Cannot connect (intf) net to (intf) net: $name_a ($type_a) <-/-> $name_b ($type_b)"
##     }
##     bd_net,newnet -
##     newnet,bd_net {
##       error "ERROR: ad_connect: Cannot connect existing net to new net: $name_a ($type_a) <-/-> $name_b ($type_b)"
##     }
##     const,newnet -
##     newnet,const {
##       error "ERROR: ad_connect: Cannot connect new network to constant, instead you should connect to the constant directly: $name_a ($type_a) <-/-> $name_b ($type_b)"
##     }
## 
##     bd_pin,bd_pin {
##       connect_bd_net $obj_a $obj_b
##       puts "connect_bd_net $obj_a $obj_b"
##       return
##     }
##     bd_net,bd_pin {
##       connect_bd_net -net $obj_a $obj_b
##       puts "connect_bd_net -net $obj_a $obj_b"
##       return
##     }
##     bd_pin,bd_net {
##       connect_bd_net -net $obj_b $obj_a
##       puts "connect_bd_net -net $obj_b $obj_a"
##       return
##     }
##     bd_pin,newnet {
##       connect_bd_net -net $name_b $obj_a
##       puts "connect_bd_net -net $name_b $obj_a"
##       return
##     }
##     newnet,bd_pin {
##       connect_bd_net -net $name_a $obj_b
##       puts "connect_bd_net -net $name_a $obj_b"
##       return
##     }
##     bd_intf_pin,bd_intf_pin {
##       connect_bd_intf_net $obj_a $obj_b
##       puts "connect_bd_intf_net $obj_a $obj_b"
##       return
##     }
##     const,bd_pin -
##     const,bd_net {
##       # Handled after the switch statement
##     }
##     bd_net,const -
##     bd_pin,const {
##       # Swap vars
##       set tmp $obj_a
##       set obj_a $obj_b
##       set obj_b $tmp
##       set tmp $name_a
##       set name_a $name_b
##       set name_b $tmp
##       # Handled after the switch statement
##     }
##     default {
##       error "ERROR: ad_connect: Cannot connect, case unhandled: $name_a ($type_a) <-/-> $name_b ($type_b)"
##     }
##   }
## 
##   # Continue working on nets that connect to constant. obj_b is the net/pin
##   set width [ad_connect_int_width $obj_b]
##   set cell [ad_connect_int_get_const $name_a $width]
##   connect_bd_net [get_bd_pin $cell/dout] $obj_b
##   puts "connect_bd_net [get_bd_pin $cell/dout] $obj_b"
## }
## proc ad_disconnect {p_name_1 p_name_2} {
## 
##   set m_name_1 [ad_connect_type $p_name_1]
##   set m_name_2 [ad_connect_type $p_name_2]
## 
##   if {[get_property CLASS $m_name_1] eq "bd_net"} {
##     disconnect_bd_net $m_name_1 $m_name_2
##     return
##   }
## 
##   if {[get_property CLASS $m_name_1] eq "bd_port"} {
##     delete_bd_objs -quiet [get_bd_nets -quiet -of_objects \
##       [find_bd_objs -relation connected_to $m_name_1]]
##     delete_bd_objs -quiet $m_name_1
##     return
##   }
## 
##   if {[get_property CLASS $m_name_1] eq "bd_pin"} {
##     delete_bd_objs -quiet [get_bd_nets -quiet -of_objects \
##       [find_bd_objs -relation connected_to $m_name_1]]
##     delete_bd_objs -quiet $m_name_1
##     return
##   }
## }
## proc ad_xcvrcon {u_xcvr a_xcvr a_jesd {lane_map {}} {link_clk {}} {device_clk {}} {num_of_max_lanes -1} {partial_lane_map {}} {connect_empty_lanes 1}} {
## 
##   global xcvr_index
##   global xcvr_tx_index
##   global xcvr_rx_index
##   global xcvr_instance
## 
##   set qpll_enable [get_property CONFIG.QPLL_ENABLE [get_bd_cells $a_xcvr]]
##   set tx_or_rx_n [get_property CONFIG.TX_OR_RX_N [get_bd_cells $a_xcvr]]
## 
##   set xcvr_type [get_property CONFIG.XCVR_TYPE [get_bd_cells $u_xcvr]]
## 
##   set link_mode_u [get_property CONFIG.LINK_MODE [get_bd_cells $u_xcvr]]
##   set link_mode_a [get_property CONFIG.LINK_MODE [get_bd_cells $a_xcvr]]
## 
##   if {$link_mode_u != $link_mode_a} {
##      puts "CRITICAL WARNING: LINK_MODE parameter mismatch between $u_xcvr ($link_mode_u) and $a_xcvr ($link_mode_a)"
##   }
##   set link_mode $link_mode_u
## 
##   set jesd204_bd_type [get_property TYPE [get_bd_cells $a_jesd]]
## 
##   if {$jesd204_bd_type == "hier"} {
##     set jesd204_type 0
##   } else {
##     set jesd204_type 1
##   }
## 
##   if {$xcvr_instance ne $u_xcvr} {
##     set xcvr_index [expr ($xcvr_index + 1)]
##     set xcvr_tx_index 0
##     set xcvr_rx_index 0
##     set xcvr_instance $u_xcvr
##   }
## 
##   set txrx "rx"
##   set data_dir "I"
##   set ctrl_dir "O"
##   set index $xcvr_rx_index
## 
##   if {$tx_or_rx_n == 1} {
## 
##     set txrx "tx"
##     set data_dir "O"
##     set ctrl_dir "I"
##     set index $xcvr_tx_index
##   }
## 
##   set m_sysref ${txrx}_sysref_${index}
##   set m_sync ${txrx}_sync_${index}
##   set m_data ${txrx}_data
## 
##   if {$xcvr_index >= 1} {
## 
##     set m_sysref ${txrx}_sysref_${xcvr_index}_${index}
##     set m_sync ${txrx}_sync_${xcvr_index}_${index}
##     set m_data ${txrx}_data_${xcvr_index}
##   }
## 
##   if {$jesd204_type == 0} {
##     set num_of_links [get_property CONFIG.NUM_LINKS [get_bd_cells $a_jesd/$txrx]]
##   } else {
##     set num_of_links 1
##   }
## 
##   set no_of_lanes [get_property CONFIG.NUM_LANES [get_bd_cells $a_jesd/$txrx]]
##   set max_no_of_lanes $no_of_lanes
## 
##   if {$num_of_max_lanes != -1} {
##     set max_no_of_lanes $num_of_max_lanes
##   }
##   create_bd_port -dir I $m_sysref
##   create_bd_port -from [expr $num_of_links - 1] -to 0 -dir ${ctrl_dir} $m_sync
## 
##   set use_2x_clk 0
##   if {$link_clk == {}} {
##     # For 204C modes on GTH a 2x clock is required to drive the PCS
##     # In such case set the xcvr out clock to be the double of the lane rate/66(40)
##     # and use the secondary div2 clock output for the link clock
##     if {$link_mode == 2 && ($xcvr_type == 5 || $xcvr_type == 8)} {
##       set link_clk ${u_xcvr}/${txrx}_out_clk_div2_${index}
##       set link_clk_2x ${u_xcvr}/${txrx}_out_clk_${index}
##       set use_2x_clk 1
##     } else {
##       if {$partial_lane_map != {}} {
##         set cur_index [lindex $partial_lane_map $index]
##         set link_clk ${u_xcvr}/${txrx}_out_clk_${cur_index}
##       } else {
##         set link_clk ${u_xcvr}/${txrx}_out_clk_${index}
##       }
##     }
##     set rst_gen [regsub -all "/" ${a_jesd}_rstgen "_"]
##     set create_rst_gen 1
##   } else {
##     set rst_gen ${link_clk}_rstgen
##     # Only create one reset gen per clock
##     set create_rst_gen [expr {[get_bd_cells -quiet ${rst_gen}] == {}}]
##   }
## 
##   if {$device_clk == {}} {
##     set device_clk $link_clk
##   } else {
##     set rst_gen ${device_clk}_rstgen
##     # Only create one reset gen per clock
##     set create_rst_gen [expr {[get_bd_cells -quiet ${rst_gen}] == {}}]
##   }
## 
##   if {${create_rst_gen}} {
##     ad_ip_instance proc_sys_reset ${rst_gen}
##     ad_connect ${device_clk} ${rst_gen}/slowest_sync_clk
##     ad_connect sys_cpu_resetn ${rst_gen}/ext_reset_in
##   }
## 
##   if {$partial_lane_map != {}} {
##     for {set n 0} {$n < $no_of_lanes} {incr n} {
## 
##       set phys_lane [lindex $partial_lane_map $n]
## 
##       if {$phys_lane != {}} {
##         if {$jesd204_type == 0} {
##           ad_connect  ${u_xcvr}/${txrx}_${phys_lane} ${a_jesd}/${txrx}_phy${n}
##         } else {
##           ad_connect  ${u_xcvr}/${txrx}_${phys_lane} ${a_jesd}/gt${n}_${txrx}
##         }
##       }
## 
##       if {$tx_or_rx_n == 0} {
##         if {$jesd204_type == 0} {
##           if {$link_mode == 1} {
##             ad_connect  ${a_jesd}/phy_en_char_align ${u_xcvr}/${txrx}_calign_${phys_lane}
##           }
##         } else {
##           ad_connect  ${a_jesd}/rxencommaalign_out ${u_xcvr}/${txrx}_calign_${phys_lane}
##         }
##       }
##     }
##     if {$connect_empty_lanes == 1} {
##       for {set n 0} {$n < $max_no_of_lanes} {incr n} {
## 
##         set m [expr ($n + $index)]
## 
##         if {$lane_map != {}} {
##           set phys_lane [lindex $lane_map $n]
##         } else {
##           set phys_lane $m
##         }
## 
##         if {$tx_or_rx_n == 0} {
##           ad_connect  ${a_xcvr}/up_es_${n} ${u_xcvr}/up_es_${phys_lane}
##         }
## 
##         if {(($n%4) == 0) && ($qpll_enable == 1)} {
##           ad_connect  ${a_xcvr}/up_cm_${n} ${u_xcvr}/up_cm_${m}
##         }
##         ad_connect  ${a_xcvr}/up_ch_${n} ${u_xcvr}/up_${txrx}_${phys_lane}
##         ad_connect  ${link_clk} ${u_xcvr}/${txrx}_clk_${phys_lane}
##         if {$use_2x_clk == 1} {
##           ad_connect  ${link_clk_2x} ${u_xcvr}/${txrx}_clk_2x_${phys_lane}
##         }
## 
##         create_bd_port -dir ${data_dir} ${m_data}_${m}_p
##         create_bd_port -dir ${data_dir} ${m_data}_${m}_n
##         ad_connect  ${u_xcvr}/${txrx}_${m}_p ${m_data}_${m}_p
##         ad_connect  ${u_xcvr}/${txrx}_${m}_n ${m_data}_${m}_n
##       }
##     } else {
##       ## Do nothing, the connections will be done manually
##     }
## 
##   } else {
##     for {set n 0} {$n < $no_of_lanes} {incr n} {
## 
##       set m [expr ($n + $index)]
##       if {$lane_map != {}} {
##         set phys_lane [lindex $lane_map $n]
##       } else {
##         set phys_lane $m
##       }
## 
##       if {$tx_or_rx_n == 0} {
##         ad_connect  ${a_xcvr}/up_es_${n} ${u_xcvr}/up_es_${phys_lane}
##         if {$jesd204_type == 0} {
##           if {$link_mode == 1} {
##             ad_connect  ${a_jesd}/phy_en_char_align ${u_xcvr}/${txrx}_calign_${phys_lane}
##           }
##         } else {
##           ad_connect  ${a_jesd}/rxencommaalign_out ${u_xcvr}/${txrx}_calign_${phys_lane}
##         }
##       }
## 
##       if {(($n%4) == 0) && ($qpll_enable == 1)} {
##         ad_connect  ${a_xcvr}/up_cm_${n} ${u_xcvr}/up_cm_${m}
##       }
##       ad_connect  ${a_xcvr}/up_ch_${n} ${u_xcvr}/up_${txrx}_${phys_lane}
##       ad_connect  ${link_clk} ${u_xcvr}/${txrx}_clk_${phys_lane}
##       if {$use_2x_clk == 1} {
##         ad_connect  ${link_clk_2x} ${u_xcvr}/${txrx}_clk_2x_${phys_lane}
##       }
##       if {$phys_lane != {}} {
##         if {$jesd204_type == 0} {
##           ad_connect  ${u_xcvr}/${txrx}_${phys_lane} ${a_jesd}/${txrx}_phy${n}
##         } else {
##           ad_connect  ${u_xcvr}/${txrx}_${phys_lane} ${a_jesd}/gt${n}_${txrx}
##         }
##       }
## 
##       create_bd_port -dir ${data_dir} ${m_data}_${m}_p
##       create_bd_port -dir ${data_dir} ${m_data}_${m}_n
##       ad_connect  ${u_xcvr}/${txrx}_${m}_p ${m_data}_${m}_p
##       ad_connect  ${u_xcvr}/${txrx}_${m}_n ${m_data}_${m}_n
##     }
## 
##     for {set n $no_of_lanes} {$n < $max_no_of_lanes} {incr n} {
## 
##       set m [expr ($n + $index)]
## 
##       if {$lane_map != {}} {
##         set phys_lane [lindex $lane_map $n]
##       } else {
##         set phys_lane $m
##       }
## 
##       create_bd_port -dir ${data_dir} ${m_data}_${m}_p
##       create_bd_port -dir ${data_dir} ${m_data}_${m}_n
##       ad_connect  ${u_xcvr}/${txrx}_${m}_p ${m_data}_${m}_p
##       ad_connect  ${u_xcvr}/${txrx}_${m}_n ${m_data}_${m}_n
##       ad_connect  ${link_clk} ${u_xcvr}/${txrx}_clk_${phys_lane}
## 
##       if {$tx_or_rx_n == 0} {
##         if {$jesd204_type == 0} {
##           if {$link_mode == 1} {
## 	    ad_connect  ${a_jesd}/phy_en_char_align ${u_xcvr}/${txrx}_calign_${phys_lane}
##           }
## 	}
##       }
##     }
##   }
## 
##   if {$jesd204_type == 0} {
##     ad_connect  ${a_jesd}/sysref $m_sysref
##     if {$link_mode == 1} {
##       ad_connect  ${a_jesd}/sync $m_sync
##     }
##     ad_connect  ${device_clk} ${a_jesd}/device_clk
##     ad_connect  ${link_clk} ${a_jesd}/link_clk
##   } else {
##     ad_connect  ${a_jesd}/${txrx}_sysref $m_sysref
##     ad_connect  ${a_jesd}/${txrx}_sync $m_sync
##     ad_connect  ${device_clk} ${a_jesd}/${txrx}_core_clk
##     ad_connect  ${a_xcvr}/up_status ${a_jesd}/${txrx}_reset_done
##     ad_connect  ${rst_gen}/peripheral_reset ${a_jesd}/${txrx}_reset
##   }
## 
##   if {$tx_or_rx_n == 0} {
##     set xcvr_rx_index [expr ($xcvr_rx_index + $max_no_of_lanes)]
##   }
## 
##   if {$tx_or_rx_n == 1} {
##     set xcvr_tx_index [expr ($xcvr_tx_index + $max_no_of_lanes)]
##   }
## }
## proc ad_xcvrpll {m_src m_dst} {
## 
##   foreach p_dst [get_bd_pins -quiet $m_dst] {
##     connect_bd_net [ad_connect_type $m_src] $p_dst
##   }
## }
## proc ad_mem_hpc0_interconnect {p_clk p_name} {
## 
##   global sys_zynq
## 
##   if {$sys_zynq == 2} {ad_mem_hpx_interconnect "HPC0" $p_clk $p_name}
## }
## proc ad_mem_hpc1_interconnect {p_clk p_name} {
## 
##   global sys_zynq
## 
##   if {$sys_zynq == 2} {ad_mem_hpx_interconnect "HPC1" $p_clk $p_name}
## }
## proc ad_mem_hp0_interconnect {p_clk p_name} {
## 
##   global sys_zynq
## 
##   if {($sys_zynq != 1 && $sys_zynq != 2) && ($p_name eq "sys_ps7/S_AXI_HP0")} {return}
##   if {$sys_zynq == -1} {ad_mem_hpx_interconnect "SIM" $p_clk $p_name}
##   if {$sys_zynq == 0} {ad_mem_hpx_interconnect "MEM" $p_clk $p_name}
##   if {$sys_zynq == 1} {ad_mem_hpx_interconnect "HP0" $p_clk $p_name}
##   if {$sys_zynq == 2} {ad_mem_hpx_interconnect "HP0" $p_clk $p_name}
##   if {$sys_zynq == 3} {ad_mem_hpx_interconnect "NOC" $p_clk $p_name}
## }
## proc ad_mem_hp1_interconnect {p_clk p_name} {
## 
##   global sys_zynq
## 
##   if {($sys_zynq != 1 && $sys_zynq != 2) && ($p_name eq "sys_ps7/S_AXI_HP1")} {return}
##   if {$sys_zynq == -1} {ad_mem_hpx_interconnect "SIM" $p_clk $p_name}
##   if {$sys_zynq == 0} {ad_mem_hpx_interconnect "MEM" $p_clk $p_name}
##   if {$sys_zynq == 1} {ad_mem_hpx_interconnect "HP1" $p_clk $p_name}
##   if {$sys_zynq == 2} {ad_mem_hpx_interconnect "HP1" $p_clk $p_name}
##   if {$sys_zynq == 3} {ad_mem_hpx_interconnect "NOC" $p_clk $p_name}
## }
## proc ad_mem_hp2_interconnect {p_clk p_name} {
## 
##   global sys_zynq
## 
##   if {($sys_zynq != 1 && $sys_zynq != 2) && ($p_name eq "sys_ps7/S_AXI_HP2")} {return}
##   if {$sys_zynq == -1} {ad_mem_hpx_interconnect "SIM" $p_clk $p_name}
##   if {$sys_zynq == 0} {ad_mem_hpx_interconnect "MEM" $p_clk $p_name}
##   if {$sys_zynq == 1} {ad_mem_hpx_interconnect "HP2" $p_clk $p_name}
##   if {$sys_zynq == 2} {ad_mem_hpx_interconnect "HP2" $p_clk $p_name}
##   if {$sys_zynq == 3} {ad_mem_hpx_interconnect "NOC" $p_clk $p_name}
## }
## proc ad_mem_hp3_interconnect {p_clk p_name} {
## 
##   global sys_zynq
## 
##   if {($sys_zynq != 1 && $sys_zynq != 2) && ($p_name eq "sys_ps7/S_AXI_HP3")} {return}
##   if {$sys_zynq == -1} {ad_mem_hpx_interconnect "SIM" $p_clk $p_name}
##   if {$sys_zynq == 0} {ad_mem_hpx_interconnect "MEM" $p_clk $p_name}
##   if {$sys_zynq == 1} {ad_mem_hpx_interconnect "HP3" $p_clk $p_name}
##   if {$sys_zynq == 2} {ad_mem_hpx_interconnect "HP3" $p_clk $p_name}
##   if {$sys_zynq == 3} {ad_mem_hpx_interconnect "NOC" $p_clk $p_name}
## }
## proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
## 
##   global sys_zynq
##   global sys_ddr_addr_seg
##   global sys_hpc0_interconnect_index
##   global sys_hpc1_interconnect_index
##   global sys_hp0_interconnect_index
##   global sys_hp1_interconnect_index
##   global sys_hp2_interconnect_index
##   global sys_hp3_interconnect_index
##   global sys_mem_interconnect_index
##   global sys_mem_clk_index
## 
##   set p_name_int $p_name
##   set p_clk_source [get_bd_pins -filter {DIR == O} -of_objects [get_bd_nets $p_clk]]
## 
##   if {$p_sel eq "SIM"} {
##     if {$sys_mem_interconnect_index < 0} {
##       ad_ip_instance smartconnect axi_mem_interconnect
##     }
##     set m_interconnect_index $sys_mem_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_mem_interconnect]
##     set m_addr_seg [get_bd_addr_segs -of_objects [get_bd_cells ddr_axi_vip]]
##   }
## 
##   if {$p_sel eq "MEM"} {
##     if {$sys_mem_interconnect_index < 0} {
##       ad_ip_instance smartconnect axi_mem_interconnect
##     }
##     set m_interconnect_index $sys_mem_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_mem_interconnect]
##     set m_addr_seg [get_bd_addr_segs -of_objects [get_bd_cells axi_ddr_cntrl] -filter "USAGE == memory"]
##   }
## 
##   if {($p_sel eq "HP0") && ($sys_zynq == 1)} {
##     if {$sys_hp0_interconnect_index < 0} {
##       set p_name_int sys_ps7/S_AXI_HP0
##       set_property CONFIG.PCW_USE_S_AXI_HP0 {1} [get_bd_cells sys_ps7]
##       ad_ip_instance smartconnect axi_hp0_interconnect
##     }
##     set m_interconnect_index $sys_hp0_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp0_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps7/S_AXI_HP0/HP0_DDR_LOWOCM]
##   }
## 
##   if {($p_sel eq "HP1") && ($sys_zynq == 1)} {
##     if {$sys_hp1_interconnect_index < 0} {
##       set p_name_int sys_ps7/S_AXI_HP1
##       set_property CONFIG.PCW_USE_S_AXI_HP1 {1} [get_bd_cells sys_ps7]
##       ad_ip_instance smartconnect axi_hp1_interconnect
##     }
##     set m_interconnect_index $sys_hp1_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp1_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps7/S_AXI_HP1/HP1_DDR_LOWOCM]
##   }
## 
##   if {($p_sel eq "HP2") && ($sys_zynq == 1)} {
##     if {$sys_hp2_interconnect_index < 0} {
##       set p_name_int sys_ps7/S_AXI_HP2
##       set_property CONFIG.PCW_USE_S_AXI_HP2 {1} [get_bd_cells sys_ps7]
##       ad_ip_instance smartconnect axi_hp2_interconnect
##     }
##     set m_interconnect_index $sys_hp2_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp2_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps7/S_AXI_HP2/HP2_DDR_LOWOCM]
##   }
## 
##   if {($p_sel eq "HP3") && ($sys_zynq == 1)} {
##     if {$sys_hp3_interconnect_index < 0} {
##       set p_name_int sys_ps7/S_AXI_HP3
##       set_property CONFIG.PCW_USE_S_AXI_HP3 {1} [get_bd_cells sys_ps7]
##       ad_ip_instance smartconnect axi_hp3_interconnect
##     }
##     set m_interconnect_index $sys_hp3_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp3_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps7/S_AXI_HP3/HP3_DDR_LOWOCM]
##   }
## 
##   if {($p_sel eq "HPC0") && ($sys_zynq == 2)} {
##     if {$sys_hpc0_interconnect_index < 0} {
##       set p_name_int sys_ps8/S_AXI_HPC0_FPD
##       set_property CONFIG.PSU__USE__S_AXI_GP0 {1} [get_bd_cells sys_ps8]
##       set_property CONFIG.PSU__AFI0_COHERENCY {1} [get_bd_cells sys_ps8]
##       ad_ip_instance smartconnect axi_hpc0_interconnect
##     }
##     set m_interconnect_index $sys_hpc0_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hpc0_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps8/SAXIGP0/HPC0_DDR_*]
##   }
## 
##   if {($p_sel eq "HPC1") && ($sys_zynq == 2)} {
##     if {$sys_hpc1_interconnect_index < 0} {
##       set p_name_int sys_ps8/S_AXI_HPC1_FPD
##       set_property CONFIG.PSU__USE__S_AXI_GP1 {1} [get_bd_cells sys_ps8]
##       set_property CONFIG.PSU__AFI1_COHERENCY {1} [get_bd_cells sys_ps8]
##       ad_ip_instance smartconnect axi_hpc1_interconnect
##     }
##     set m_interconnect_index $sys_hpc1_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hpc1_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps8/SAXIGP1/HPC1_DDR_*]
##   }
## 
##   if {($p_sel eq "HP0") && ($sys_zynq == 2)} {
##     if {$sys_hp0_interconnect_index < 0} {
##       set p_name_int sys_ps8/S_AXI_HP0_FPD
##       set_property CONFIG.PSU__USE__S_AXI_GP2 {1} [get_bd_cells sys_ps8]
##       ad_ip_instance smartconnect axi_hp0_interconnect
##     }
##     set m_interconnect_index $sys_hp0_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp0_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps8/SAXIGP2/HP0_DDR_*]
##   }
## 
##   if {($p_sel eq "HP1") && ($sys_zynq == 2)} {
##     if {$sys_hp1_interconnect_index < 0} {
##       set p_name_int sys_ps8/S_AXI_HP1_FPD
##       set_property CONFIG.PSU__USE__S_AXI_GP3 {1} [get_bd_cells sys_ps8]
##       ad_ip_instance smartconnect axi_hp1_interconnect
##     }
##     set m_interconnect_index $sys_hp1_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp1_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps8/SAXIGP3/HP1_DDR_*]
##   }
## 
##   if {($p_sel eq "HP2") && ($sys_zynq == 2)} {
##     if {$sys_hp2_interconnect_index < 0} {
##       set p_name_int sys_ps8/S_AXI_HP2_FPD
##       set_property CONFIG.PSU__USE__S_AXI_GP4 {1} [get_bd_cells sys_ps8]
##       ad_ip_instance smartconnect axi_hp2_interconnect
##     }
##     set m_interconnect_index $sys_hp2_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp2_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps8/SAXIGP4/HP2_DDR_*]
##   }
## 
##   if {($p_sel eq "HP3") && ($sys_zynq == 2)} {
##     if {$sys_hp3_interconnect_index < 0} {
##       set p_name_int sys_ps8/S_AXI_HP3_FPD
##       set_property CONFIG.PSU__USE__S_AXI_GP5 {1} [get_bd_cells sys_ps8]
##       ad_ip_instance smartconnect axi_hp3_interconnect
##     }
##     set m_interconnect_index $sys_hp3_interconnect_index
##     set m_interconnect_cell [get_bd_cells axi_hp3_interconnect]
##     set m_addr_seg [get_bd_addr_segs sys_ps8/SAXIGP5/HP3_DDR_*]
##   }
## 
##   if {$p_sel eq "NOC"} {
##     set m_interconnect_index [get_property CONFIG.NUM_SI [get_bd_cells axi_noc_0]]
##     set m_interconnect_cell [get_bd_cells axi_noc_0]
##     set m_addr_seg [get_bd_addr_segs  axi_noc_0/S[format "%02s" [expr $m_interconnect_index +1]]_AXI/C0_DDR_LOW0]
##     set sys_mem_clk_index [expr [get_property CONFIG.NUM_CLKS [get_bd_cells axi_noc_0]]-1]
##   }
## 
##   set i_str "S$m_interconnect_index"
##   if {$m_interconnect_index < 10} {
##     set i_str "S0$m_interconnect_index"
##   }
## 
##   set m_interconnect_index [expr $m_interconnect_index + 1]
## 
##   set p_intf_name [lrange [split $p_name_int "/"] end end]
##   set p_cell_name [lrange [split $p_name_int "/"] 0 0]
##   set p_intf_clock [get_bd_pins -filter "TYPE == clk && (CONFIG.ASSOCIATED_BUSIF == ${p_intf_name} || \
##     CONFIG.ASSOCIATED_BUSIF =~ ${p_intf_name}:* || CONFIG.ASSOCIATED_BUSIF =~ *:${p_intf_name} || \
##     CONFIG.ASSOCIATED_BUSIF =~ *:${p_intf_name}:*)" -quiet -of_objects [get_bd_cells $p_cell_name]]
##   if {[find_bd_objs -quiet -relation connected_to $p_intf_clock] ne "" ||
##       $p_intf_clock eq $p_clk_source} {
##     set p_intf_clock ""
##   }
## 
##   regsub clk $p_clk resetn p_rst
##   if {[get_bd_nets -quiet $p_rst] eq ""} {
##     set p_rst sys_cpu_resetn
##   }
## 
##   if {$m_interconnect_index == 0} {
##     set_property CONFIG.NUM_MI 1 $m_interconnect_cell
##     set_property CONFIG.NUM_SI 1 $m_interconnect_cell
##     ad_connect $p_rst $m_interconnect_cell/ARESETN
##     ad_connect $p_clk $m_interconnect_cell/ACLK
##     ad_connect $m_interconnect_cell/M00_AXI $p_name_int
##     if {$p_intf_clock ne ""} {
##       ad_connect $p_clk $p_intf_clock
##     }
##   } else {
## 
##     set_property CONFIG.NUM_SI $m_interconnect_index $m_interconnect_cell
##     set clk_index [lsearch [get_bd_nets -of_object [get_bd_pins $m_interconnect_cell/ACLK*]] [get_bd_nets $p_clk]]
##     if { $clk_index == -1 } {
##         incr sys_mem_clk_index
##         set_property CONFIG.NUM_CLKS [expr $sys_mem_clk_index +1] $m_interconnect_cell
##         ad_connect $p_clk $m_interconnect_cell/ACLK$sys_mem_clk_index
##         set asocc_clk_pin  $m_interconnect_cell/ACLK$sys_mem_clk_index
##     } else {
##       set asocc_clk_pin [lindex [get_bd_pins $m_interconnect_cell/ACLK*] $clk_index]
##     }
##     ad_connect $m_interconnect_cell/${i_str}_AXI $p_name_int
##     if {$p_intf_clock ne ""} {
##       ad_connect $p_clk $p_intf_clock
##     }
## 
##     if {$p_sel eq "NOC"} {
##       set_property -dict [list CONFIG.CONNECTIONS {MC_0 { read_bw {1720} write_bw {1720} read_avg_burst {4} write_avg_burst {4}} }] [get_bd_intf_pins /axi_noc_0/${i_str}_AXI]
##       # Add the new bus as associated to the clock pin, append new if other exists
##       set clk_asoc_port [get_property CONFIG.ASSOCIATED_BUSIF [get_bd_pins $asocc_clk_pin]]
##       if {$clk_asoc_port != {}} {
##        set clk_asoc_port ${clk_asoc_port}:
##       }
##       set_property -dict [list CONFIG.ASSOCIATED_BUSIF ${clk_asoc_port}${i_str}_AXI] [get_bd_pins $asocc_clk_pin]
##     }
## 
##     set mem_mapped ""
##     if {$p_sel eq "MEM"} {
##       # Search a DDR segment that is at least 16MB
##       set mem_mapped [get_bd_addr_segs -of [get_bd_addr_spaces -of  [get_bd_intf_pins -filter {NAME=~ *DLMB*} -of [get_bd_cells /sys_mb]]] -regexp -filter {NAME=~ ".*ddr.*" && RANGE=~".*0{6}$"}]
##     }
##     if {$p_sel eq "SIM"} {
##       set mem_mapped [get_bd_addr_segs -of [get_bd_addr_spaces -of  [get_bd_intf_pins -filter {NAME=~ *M_AXI*} -of [get_bd_cells /mng_axi_vip]]] -filter {NAME=~ *DDR* || NAME=~ *ddr*}]
##     }
## 
##     if {$mem_mapped eq ""} {
##       assign_bd_address $m_addr_seg
##     } else {
##       assign_bd_address -offset [get_property OFFSET $mem_mapped] \
##                         -range  [get_property RANGE $mem_mapped] $m_addr_seg
##     }
##   }
## 
##   if {$p_sel eq "SIM"} {set sys_mem_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "MEM"} {set sys_mem_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "HPC0"} {set sys_hpc0_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "HPC1"} {set sys_hpc1_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "HP0"} {set sys_hp0_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "HP1"} {set sys_hp1_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "HP2"} {set sys_hp2_interconnect_index $m_interconnect_index}
##   if {$p_sel eq "HP3"} {set sys_hp3_interconnect_index $m_interconnect_index}
## 
## }
## proc ad_cpu_interconnect {p_address p_name {p_intf_name {}}} {
## 
##   global sys_zynq
##   global sys_cpu_interconnect_index
## 
##   set i_str "M$sys_cpu_interconnect_index"
##   if {$sys_cpu_interconnect_index < 10} {
##     set i_str "M0$sys_cpu_interconnect_index"
##   }
## 
##   set use_smart_connect 1
##   # SmartConnect has higher resource utilization and worse timing closure on older families
##   if {$sys_zynq == 1} {
##     set use_smart_connect 0
##   }
## 
##   if {$sys_cpu_interconnect_index == 0} {
## 
##     if {$use_smart_connect == 1} {
##       ad_ip_instance smartconnect axi_cpu_interconnect [ list \
##         NUM_MI 1 \
##         NUM_SI 1 \
##       ]
##       ad_connect sys_cpu_clk axi_cpu_interconnect/aclk
##       ad_connect sys_cpu_resetn axi_cpu_interconnect/aresetn
##     } else {
##       ad_ip_instance axi_interconnect axi_cpu_interconnect
##       ad_connect sys_cpu_clk axi_cpu_interconnect/ACLK
##       ad_connect sys_cpu_clk axi_cpu_interconnect/S00_ACLK
##       ad_connect sys_cpu_resetn axi_cpu_interconnect/ARESETN
##       ad_connect sys_cpu_resetn axi_cpu_interconnect/S00_ARESETN
##     }
## 
##     if {$sys_zynq == 3} {
##       ad_connect sys_cpu_clk sys_cips/m_axi_fpd_aclk
##       ad_connect axi_cpu_interconnect/S00_AXI sys_cips/M_AXI_FPD
##     }
##     if {$sys_zynq == 2} {
##       ad_connect sys_cpu_clk sys_ps8/maxihpm0_lpd_aclk
##       ad_connect axi_cpu_interconnect/S00_AXI sys_ps8/M_AXI_HPM0_LPD
##     }
##     if {$sys_zynq == 1} {
##       ad_connect sys_cpu_clk sys_ps7/M_AXI_GP0_ACLK
##       ad_connect axi_cpu_interconnect/S00_AXI sys_ps7/M_AXI_GP0
##     }
##     if {$sys_zynq == 0} {
##       ad_connect axi_cpu_interconnect/S00_AXI sys_mb/M_AXI_DP
##     }
##     if {$sys_zynq == -1} {
##       ad_connect axi_cpu_interconnect/S00_AXI mng_axi_vip/M_AXI
##     }
##   }
## 
##   if {$sys_zynq == 3} {
##     set sys_addr_cntrl_space [get_bd_addr_spaces /sys_cips/M_AXI_FPD]
##   }
##   if {$sys_zynq == 2} {
##     set sys_addr_cntrl_space [get_bd_addr_spaces sys_ps8/Data]
##   }
##   if {$sys_zynq == 1} {
##     set sys_addr_cntrl_space [get_bd_addr_spaces sys_ps7/Data]
##   }
##   if {$sys_zynq == 0} {
##     set sys_addr_cntrl_space [get_bd_addr_spaces sys_mb/Data]
##   }
##   if {$sys_zynq == -1} {
##     set sys_addr_cntrl_space [get_bd_addr_spaces mng_axi_vip/Master_AXI]
##   }
## 
##   set sys_cpu_interconnect_index [expr $sys_cpu_interconnect_index + 1]
## 
## 
##   set p_cell [get_bd_cells $p_name]
##   set p_intf [get_bd_intf_pins -filter \
##     "MODE == Slave && VLNV == xilinx.com:interface:aximm_rtl:1.0 && NAME =~ *$p_intf_name*"\
##     -of_objects $p_cell]
## 
##   set p_hier_cell $p_cell
##   set p_hier_intf $p_intf
## 
##   while {$p_hier_intf != "" && [get_property TYPE $p_hier_cell] == "hier"} {
##     set p_hier_intf [find_bd_objs -boundary_type lower \
##       -relation connected_to $p_hier_intf]
##     if {$p_hier_intf != {}} {
##       set p_hier_cell [get_bd_cells -of_objects $p_hier_intf]
##     } else {
##       set p_hier_cell {}
##     }
##   }
## 
##   set p_intf_clock ""
##   set p_intf_reset ""
## 
##   if {$p_hier_cell != {}} {
##     set p_intf_name [lrange [split $p_hier_intf "/"] end end]
## 
##     set p_intf_clock [get_bd_pins -filter "TYPE == clk && \
##       (CONFIG.ASSOCIATED_BUSIF == ${p_intf_name} || \
##       CONFIG.ASSOCIATED_BUSIF =~ ${p_intf_name}:* || \
##       CONFIG.ASSOCIATED_BUSIF =~ *:${p_intf_name} || \
##       CONFIG.ASSOCIATED_BUSIF =~ *:${p_intf_name}:*)" \
##       -quiet -of_objects $p_hier_cell]
##     set p_intf_reset [get_bd_pins -filter "TYPE == rst && \
##       (CONFIG.ASSOCIATED_BUSIF == ${p_intf_name} || \
##        CONFIG.ASSOCIATED_BUSIF =~ ${p_intf_name}:* ||
##        CONFIG.ASSOCIATED_BUSIF =~ *:${p_intf_name} || \
##        CONFIG.ASSOCIATED_BUSIF =~ *:${p_intf_name}:*)" \
##        -quiet -of_objects $p_hier_cell]
## 
##     if {($p_intf_clock ne "") && ($p_intf_reset eq "")} {
##       set p_intf_reset [get_property CONFIG.ASSOCIATED_RESET [get_bd_pins ${p_intf_clock}]]
##       if {$p_intf_reset ne ""} {
##         set p_intf_reset [get_bd_pins -filter "NAME == $p_intf_reset" -of_objects $p_hier_cell]
##       }
##     }
## 
##     # Trace back up
##     set p_hier_cell2 $p_hier_cell
## 
##     while {$p_intf_clock != {} && $p_hier_cell2 != $p_cell && $p_hier_cell2 != {}} {
##       puts $p_intf_clock
##       puts $p_hier_cell2
##       set p_intf_clock [find_bd_objs -boundary_type upper \
##         -relation connected_to $p_intf_clock]
##       if {$p_intf_clock != {}} {
##         set p_intf_clock [get_bd_pins [get_property PATH $p_intf_clock]]
##         set p_hier_cell2 [get_bd_cells -of_objects $p_intf_clock]
##       }
##     }
## 
##     set p_hier_cell2 $p_hier_cell
## 
##     while {$p_intf_reset != {} && $p_hier_cell2 != $p_cell && $p_hier_cell2 != {}} {
##       set p_intf_reset [find_bd_objs -boundary_type upper \
##         -relation connected_to $p_intf_reset]
##       if {$p_intf_reset != {}} {
##         set p_intf_reset [get_bd_pins [get_property PATH $p_intf_reset]]
##         set p_hier_cell2 [get_bd_cells -of_objects $p_intf_reset]
##       }
##     }
##   }
## 
## 
##   if {[find_bd_objs -quiet -relation connected_to $p_intf_clock] ne ""} {
##     set p_intf_clock ""
##   }
##   if {$p_intf_reset ne ""} {
##     if {[find_bd_objs -quiet -relation connected_to $p_intf_reset] ne ""} {
##       set p_intf_reset ""
##     }
##   }
## 
##   set_property CONFIG.NUM_MI $sys_cpu_interconnect_index [get_bd_cells axi_cpu_interconnect]
## 
##   if {$use_smart_connect == 0} {
##     ad_connect sys_cpu_clk axi_cpu_interconnect/${i_str}_ACLK
##     ad_connect sys_cpu_resetn axi_cpu_interconnect/${i_str}_ARESETN
##   }
##   if {$p_intf_clock ne ""} {
##     ad_connect sys_cpu_clk ${p_intf_clock}
##   }
##   if {$p_intf_reset ne ""} {
##     ad_connect sys_cpu_resetn ${p_intf_reset}
##   }
##   ad_connect axi_cpu_interconnect/${i_str}_AXI ${p_intf}
## 
##   set p_seg [get_bd_addr_segs -of [get_bd_addr_spaces -of [get_bd_intf_pins -filter "NAME=~ *${p_intf_name}*" -of $p_hier_cell]]]
##   set p_index 0
##   foreach p_seg_name $p_seg {
##     if {$p_index == 0} {
##       set p_seg_range [get_property range $p_seg_name]
##       if {$p_seg_range < 0x1000} {
##         set p_seg_range 0x1000
##       }
##       if {$sys_zynq == 3} {
##         if {($p_address >= 0x44000000) && ($p_address <= 0x4fffffff)} {
##           # place axi peripherics in A400_0000-AFFF_FFFF range
##           set p_address [expr ($p_address + 0x60000000)]
##         } elseif {($p_address >= 0x70000000) && ($p_address <= 0x7fffffff)} {
##           # place axi peripherics in B000_0000-BFFF_FFFF range
##           set p_address [expr ($p_address + 0x40000000)]
##         } else {
##           error "ERROR: ad_cpu_interconnect : Cannot map ($p_address) to aperture, \
##                 Addess out of range 0x4400_0000 - 0X4FFF_FFFF; 0x7000_0000 - 0X7FFF_FFFF !"
##         }
##       }
##       if {$sys_zynq == 2} {
##         if {($p_address >= 0x40000000) && ($p_address <= 0x4fffffff)} {
##           set p_address [expr ($p_address + 0x40000000)]
##         }
##         if {($p_address >= 0x70000000) && ($p_address <= 0x7fffffff)} {
##           set p_address [expr ($p_address + 0x20000000)]
##         }
##       }
##       create_bd_addr_seg -range $p_seg_range \
##         -offset $p_address $sys_addr_cntrl_space \
##         $p_seg_name "SEG_data_${p_name}"
##     } else {
##       assign_bd_address $p_seg_name
##     }
##     incr p_index
##   }
## }
## proc ad_cpu_interrupt {p_ps_index p_mb_index p_name} {
## 
##   global sys_zynq
## 
##   if {$sys_zynq <= 0} {set p_index_int $p_mb_index}
##   if {$sys_zynq >= 1} {set p_index_int $p_ps_index}
## 
##   set p_index [regsub -all {[^0-9]} $p_index_int ""]
##   set m_index [expr ($p_index - 8)]
## 
##   if {$sys_zynq == 3} {
##    if {$p_index < 0 || $p_index > 15} {
##       error "ERROR: ad_cpu_interrupt : Interrupt index ($p_index) out of range 0-15 "
##     }
##     ad_connect $p_name sys_cips/pl_ps_irq$p_index
##   }
## 
##   if {($sys_zynq == 2) && ($p_index <= 7)} {
##     set p_net [get_bd_nets -of_objects [get_bd_pins sys_concat_intc_0/In$p_index]]
##     set p_pin [get_bd_pins sys_concat_intc_0/In$p_index]
## 
##     puts "disconnect_bd_net $p_net $p_pin"
##     disconnect_bd_net $p_net $p_pin
##     ad_connect sys_concat_intc_0/In$p_index $p_name
##   }
## 
##   if {($sys_zynq == 2) && ($p_index >= 8)} {
##     set p_net [get_bd_nets -of_objects [get_bd_pins sys_concat_intc_1/In$m_index]]
##     set p_pin [get_bd_pins sys_concat_intc_1/In$m_index]
## 
##     puts "disconnect_bd_net $p_net $p_pin"
##     disconnect_bd_net $p_net $p_pin
##     ad_connect sys_concat_intc_1/In$m_index $p_name
##   }
## 
##   if {$sys_zynq <= 1} {
## 
##     set p_net [get_bd_nets -of_objects [get_bd_pins sys_concat_intc/In$p_index]]
##     set p_pin [get_bd_pins sys_concat_intc/In$p_index]
## 
##     puts "disconnect_bd_net $p_net $p_pin"
##     disconnect_bd_net $p_net $p_pin
##     ad_connect sys_concat_intc/In$p_index $p_name
##   }
## }
# adi_project ad9081_fmca_ebz_vck190 0 [list \
#   JESD_MODE         [get_env_param JESD_MODE      64B66B ] \
#   RX_LANE_RATE      [get_env_param RX_LANE_RATE     6.7584 ] \
#   TX_LANE_RATE      [get_env_param TX_LANE_RATE     6.7584 ] \
#   REF_CLK_RATE      [get_env_param REF_CLK_RATE     102.4 ] \
#   RX_JESD_M         [get_env_param RX_JESD_M          8 ] \
#   RX_JESD_L         [get_env_param RX_JESD_L          1 ] \
#   RX_JESD_S         [get_env_param RX_JESD_S          1 ] \
#   RX_JESD_NP        [get_env_param RX_JESD_NP        16 ] \
#   RX_NUM_LINKS      [get_env_param RX_NUM_LINKS       1 ] \
#   TX_JESD_M         [get_env_param TX_JESD_M          8 ] \
#   TX_JESD_L         [get_env_param TX_JESD_L          2 ] \
#   TX_JESD_S         [get_env_param TX_JESD_S          1 ] \
#   TX_JESD_NP        [get_env_param TX_JESD_NP        16 ] \
#   TX_NUM_LINKS      [get_env_param TX_NUM_LINKS       1 ] \
#   RX_KS_PER_CHANNEL [get_env_param RX_KS_PER_CHANNEL  32 ] \
#   TX_KS_PER_CHANNEL [get_env_param TX_KS_PER_CHANNEL  32 ] \
# ]
WARNING: [Board 49-26] cannot add Board Part xilinx.com:kc705:part0:1.6 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/kc705/1.6/board.xml as part xc7k325tffg900-2 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:kcu105:part0:1.6 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/kcu105/1.6/board.xml as part xcku040-ffva1156-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:kcu105:part0:1.7 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/kcu105/1.7/board.xml as part xcku040-ffva1156-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:kcu116:part0:1.4 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/kcu116/1.4/board.xml as part xcku5p-ffvb676-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:kcu116:part0:1.5 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/kcu116/1.5/board.xml as part xcku5p-ffvb676-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:sp701:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/sp701/1.0/board.xml as part xc7s100fgga676-2 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:sp701:part0:1.1 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/sp701/1.1/board.xml as part xc7s100fgga676-2 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vc707:part0:1.4 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vc707/1.4/board.xml as part xc7vx485tffg1761-2 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vc709:part0:1.8 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vc709/1.8/board.xml as part xc7vx690tffg1761-2 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vck190_es:part0:1.3 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vck190/es/1.3/board.xml as part xcvc1902-vsva2197-2mp-e-s-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vcu108:part0:1.6 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vcu108/1.6/board.xml as part xcvu095-ffva2104-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vcu108:part0:1.7 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vcu108/1.7/board.xml as part xcvu095-ffva2104-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vcu110:part0:1.4 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vcu110/1.4/board.xml as part xcvu190-flgc2104-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vcu128:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vcu128/production/1.0/board.xml as part xcvu37p-fsvh2892-2l-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vcu129:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vcu129/production/1.0/board.xml as part xcvu29p-fsga2577-2l-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vermeo_t1_rfsoc:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vermeo_t1_rfsoc/1.0/board.xml as part xczu21dr-ffvd1156-2l-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vmk180_es:part0:1.3 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vmk180/es/1.3/board.xml as part xcvm1802-vsva2197-2mp-e-s-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vpk120_es:part0:1.2 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vpk120/es/1.2/board.xml as part xcvp1202-vsva2785-2mp-e-s-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu111:part0:1.2 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu111/1.2/board.xml as part xczu28dr-ffvg1517-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu111:part0:1.3 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu111/1.3/board.xml as part xczu28dr-ffvg1517-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu111:part0:1.4 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu111/1.4/board.xml as part xczu28dr-ffvg1517-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu1275:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu1275/1.0/board.xml as part xczu29dr-ffvf1760-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu1285:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu1285/1.0/board.xml as part xczu39dr-ffvf1760-2-i specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208:part0:2.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208/production/2.0/board.xml as part xczu48dr-fsvg1517-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208_es:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208/es/1.0/board.xml as part xczu48dr-fsvg1517-2-e-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208_es:part0:1.1 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208/es/1.1/board.xml as part xczu48dr-fsvg1517-2-e-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208_es:part0:1.2 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208/es/1.2/board.xml as part xczu48dr-fsvg1517-2-e-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208ld:part0:2.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208ld/production/2.0/board.xml as part xczu58dr-fsvg1517-2-i specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208ld_es:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208ld/es/1.0/board.xml as part xczu58dr-fsvg1517-2-i-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216:part0:2.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216/production/2.0/board.xml as part xczu49dr-ffvf1760-2-e specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216_es:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216/es/1.0/board.xml as part xczu49dr-ffvf1760-2-e-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216_es:part0:1.1 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216/es/1.1/board.xml as part xczu49dr-ffvf1760-2-e-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216_es:part0:1.2 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216/es/1.2/board.xml as part xczu49dr-ffvf1760-2-e-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216ld:part0:2.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216ld/production/2.0/board.xml as part xczu59dr-ffvf1760-2-i specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216ld_es:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216ld/es/1.0/board.xml as part xczu59dr-ffvf1760-2-i-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu670:part0:1.0 available at /home/epics/Vivado/2021.2/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu670/1.0/board.xml as part xczu67dr-fsve1156-2-i specified in board_part file is either invalid or not available
get_board_parts: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 2785.637 ; gain = 0.000 ; free physical = 104032 ; free virtual = 125472
CRITICAL WARNING: vivado version mismatch; expected 2022.2, got 2021.2.
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/epics/adi_2022_R2_master/hdl-master/library'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/epics/Vivado/2021.2/data/ip'.
## set_msg_config -id {Vivado 12-1790} -string "Evaluation features should NOT be used in production systems." -new_severity WARNING
## set_msg_config -id {BD 41-1343} -new_severity WARNING
## set_msg_config -id {BD 41-1306} -new_severity WARNING
## set_msg_config -severity {CRITICAL WARNING} -quiet -id {BD 41-1276} -new_severity ERROR
## set_msg_config -id {IP_Flow 19-3656} -new_severity INFO
## set_msg_config -id {IP_Flow 19-4623} -new_severity INFO
## set_msg_config -id {IP_Flow 19-459} -new_severity INFO
## set_msg_config -id {Synth 8-3331} -new_severity INFO
## set_msg_config -id {Synth 8-2490} -new_severity WARNING
## set_msg_config -id {Designutils 20-3303} -string "HDPYFinalizeIO" -new_severity INFO
## set_msg_config -id {Place 30-73} -string "axi_spi" -new_severity WARNING
## set_msg_config -string "PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY" -new_severity WARNING
Wrote  : </home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.srcs/sources_1/bd/system/system.bd> 
INFO: [BD 41-2613] The output directory /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system for system cannot be found.
create_bd_design: Time (s): cpu = 00:00:04 ; elapsed = 00:00:06 . Memory (MB): peak = 2854.445 ; gain = 25.539 ; free physical = 103485 ; free virtual = 124938
## set adc_fifo_samples_per_converter [expr $ad_project_params(RX_KS_PER_CHANNEL)*1024]
## set dac_fifo_samples_per_converter [expr $ad_project_params(TX_KS_PER_CHANNEL)*1024]
## source $ad_hdl_dir/projects/common/vck190/vck190_system_bd.tcl
### source $ad_hdl_dir/projects/common/vmk180/vmk180_system_bd.tcl
#### create_bd_port -dir O -from 2 -to 0 spi0_csn
#### create_bd_port -dir O spi0_sclk
#### create_bd_port -dir O spi0_mosi
#### create_bd_port -dir I spi0_miso
#### create_bd_port -dir O -from 2 -to 0 spi1_csn
#### create_bd_port -dir O spi1_sclk
#### create_bd_port -dir O spi1_mosi
#### create_bd_port -dir I spi1_miso
#### create_bd_port -dir I -from 31 -to 0 gpio0_i
#### create_bd_port -dir O -from 31 -to 0 gpio0_o
#### create_bd_port -dir O -from 31 -to 0 gpio0_t
#### create_bd_port -dir I -from 31 -to 0 gpio1_i
#### create_bd_port -dir O -from 31 -to 0 gpio1_o
#### create_bd_port -dir O -from 31 -to 0 gpio1_t
#### create_bd_port -dir I -from 31 -to 0 gpio2_i
#### create_bd_port -dir O -from 31 -to 0 gpio2_o
#### create_bd_port -dir O -from 31 -to 0 gpio2_t
#### ad_ip_instance versal_cips sys_cips
INFO: [Device 21-403] Loading part xcvc1902-vsva2197-2MP-e-S
create_bd_cell: Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 3015.914 ; gain = 161.469 ; free physical = 103021 ; free virtual = 124478
#### apply_bd_automation -rule xilinx.com:bd_rule:cips -config { \
####   board_preset {Yes} \
####   boot_config {Custom} \
####   configure_noc {Add new AXI NoC} \
####   debug_config {JTAG} \
####   design_flow {Full System} \
####   mc_type {DDR} \
####   num_mc {1} \
####   pl_clocks {2} \
####   pl_resets {1} \
#### }  [get_bd_cells sys_cips]
apply_bd_automation: Time (s): cpu = 00:00:17 ; elapsed = 00:00:18 . Memory (MB): peak = 3105.453 ; gain = 89.539 ; free physical = 102946 ; free virtual = 124403
#### set_property -dict [list \
####   CONFIG.PS_PMC_CONFIG { \
####     CLOCK_MODE Custom \
####     DDR_MEMORY_MODE {Connectivity to DDR via NOC} \
####     DEBUG_MODE JTAG \
####     DESIGN_MODE 1 \
####     IO_CONFIG_MODE Custom \
####     PCIE_APERTURES_DUAL_ENABLE 0 \
####     PCIE_APERTURES_SINGLE_ENABLE 0 \
####     PMC_CRP_PL0_REF_CTRL_FREQMHZ 100 \
####     PMC_GPIO0_MIO_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 0 .. 25}}} \
####     PMC_GPIO1_MIO_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 26 .. 51}}} \
####     PMC_MIO37 {{AUX_IO 0} {DIRECTION out} {DRIVE_STRENGTH 8mA} {OUTPUT_DATA high} {PULL pullup} {SCHMITT 0} {SLEW slow} {USAGE GPIO}} \
####     PMC_OSPI_PERIPHERAL {{ENABLE 0} {IO {PMC_MIO 0 .. 11}} {MODE Single}} \
####     PMC_QSPI_COHERENCY 0 \
####     PMC_QSPI_FBCLK {{ENABLE 1} {IO {PMC_MIO 6}}} \
####     PMC_QSPI_PERIPHERAL_DATA_MODE x4 \
####     PMC_QSPI_PERIPHERAL_ENABLE 1 \
####     PMC_QSPI_PERIPHERAL_MODE {Dual Parallel} \
####     PMC_REF_CLK_FREQMHZ 33.3333 \
####     PMC_SD1 {{CD_ENABLE 1} {CD_IO {PMC_MIO 28}} {POW_ENABLE 1} {POW_IO {PMC_MIO 51}} {RESET_ENABLE 0} {RESET_IO {PMC_MIO 1}} {WP_ENABLE 0} {WP_IO {PMC_MIO 1}}} \
####     PMC_SD1_COHERENCY 0 \
####     PMC_SD1_DATA_TRANSFER_MODE 8Bit \
####     PMC_SD1_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 26 .. 36}}} \
####     PMC_SD1_SLOT_TYPE {SD 3.0} \
####     PMC_USE_PMC_NOC_AXI0 1 \
####     PS_BOARD_INTERFACE ps_pmc_fixed_io \
####     PS_CAN1_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 40 .. 41}}} \
####     PS_ENET0_MDIO {{ENABLE 1} {IO {PS_MIO 24 .. 25}}} \
####     PS_ENET0_PERIPHERAL {{ENABLE 1} {IO {PS_MIO 0 .. 11}}} \
####     PS_ENET1_PERIPHERAL {{ENABLE 1} {IO {PS_MIO 12 .. 23}}} \
####     PS_GEN_IPI0_ENABLE 1 \
####     PS_GEN_IPI0_MASTER A72 \
####     PS_GEN_IPI1_ENABLE 1 \
####     PS_GEN_IPI2_ENABLE 1 \
####     PS_GEN_IPI3_ENABLE 1 \
####     PS_GEN_IPI4_ENABLE 1 \
####     PS_GEN_IPI5_ENABLE 1 \
####     PS_GEN_IPI6_ENABLE 1 \
####     PS_GPIO_EMIO_PERIPHERAL_ENABLE 1 \
####     PS_HSDP_EGRESS_TRAFFIC JTAG \
####     PS_HSDP_INGRESS_TRAFFIC JTAG \
####     PS_HSDP_MODE None \
####     PS_I2C0_PERIPHERAL {ENABLE 0} \
####     PS_I2C1_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 44 .. 45}}} \
####     PS_MIO19 {{AUX_IO 0} {DIRECTION in} {DRIVE_STRENGTH 8mA} {OUTPUT_DATA default} {PULL disable} {SCHMITT 0} {SLEW slow} {USAGE Reserved}} \
####     PS_MIO21 {{AUX_IO 0} {DIRECTION in} {DRIVE_STRENGTH 8mA} {OUTPUT_DATA default} {PULL disable} {SCHMITT 0} {SLEW slow} {USAGE Reserved}} \
####     PS_MIO7 {{AUX_IO 0} {DIRECTION in} {DRIVE_STRENGTH 8mA} {OUTPUT_DATA default} {PULL disable} {SCHMITT 0} {SLEW slow} {USAGE Reserved}} \
####     PS_MIO9 {{AUX_IO 0} {DIRECTION in} {DRIVE_STRENGTH 8mA} {OUTPUT_DATA default} {PULL disable} {SCHMITT 0} {SLEW slow} {USAGE Reserved}} \
####     PS_NUM_FABRIC_RESETS 1 \
####     PS_PCIE1_PERIPHERAL_ENABLE 0 \
####     PS_PCIE2_PERIPHERAL_ENABLE 0 \
####     PS_PCIE_RESET {{ENABLE 1} {IO {PMC_MIO 38 .. 39}}} \
####     PS_PL_CONNECTIVITY_MODE Custom \
####     PS_SPI0 {{GRP_SS0_ENABLE 1} {GRP_SS0_IO EMIO} {GRP_SS1_ENABLE 1} {GRP_SS1_IO EMIO} {GRP_SS2_ENABLE 1} {GRP_SS2_IO EMIO} {PERIPHERAL_ENABLE 1} {PERIPHERAL_IO EMIO}} \
####     PS_SPI1 {{GRP_SS0_ENABLE 1} {GRP_SS0_IO EMIO} {GRP_SS1_ENABLE 1} {GRP_SS1_IO EMIO} {GRP_SS2_ENABLE 1} {GRP_SS2_IO EMIO} {PERIPHERAL_ENABLE 1} {PERIPHERAL_IO EMIO}} \
####     PS_UART0_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 42 .. 43}}} \
####     PS_USB3_PERIPHERAL {{ENABLE 1} {IO {PMC_MIO 13 .. 25}}} \
####     PS_USE_FPD_CCI_NOC 1 \
####     PS_USE_FPD_CCI_NOC0 1 \
####     PS_USE_M_AXI_FPD 1 \
####     PS_USE_NOC_LPD_AXI0 1 \
####     PS_USE_PMCPL_CLK0 1 \
####     PS_USE_PMCPL_CLK1 1  SMON_ALARMS Set_Alarms_On  SMON_ENABLE_TEMP_AVERAGING 0  SMON_TEMP_AVERAGING_SAMPLES 8 \
####     PS_IRQ_USAGE {{CH0 1} {CH1 1} {CH10 1} {CH11 1} {CH12 1} {CH13 1} {CH14 1} {CH15 1} {CH2 1} {CH3 1} {CH4 1} {CH5 1} {CH6 1} {CH7 1} {CH8 1} {CH9 1}} \
####   } \
####   CONFIG.PS_PMC_CONFIG_APPLIED {1} \
####   CONFIG.CLOCK_MODE {Custom} \
####   CONFIG.IO_CONFIG_MODE {Custom} \
####   CONFIG.PS_PL_CONNECTIVITY_MODE {Custom} \
#### ] [get_bd_cells sys_cips]
#### ad_ip_instance proc_sys_reset sys_rstgen
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
#### ad_ip_parameter sys_rstgen CONFIG.C_EXT_RST_WIDTH 1
#### ad_ip_instance proc_sys_reset sys_350m_rstgen
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
#### ad_ip_parameter sys_350m_rstgen CONFIG.C_EXT_RST_WIDTH 1
#### ad_connect  sys_cpu_clk sys_cips/pl0_ref_clk
connect_bd_net -net sys_cpu_clk /sys_cips/pl0_ref_clk
#### ad_connect  sys_350m_clk sys_cips/pl1_ref_clk
connect_bd_net -net sys_350m_clk /sys_cips/pl1_ref_clk
#### ad_connect  sys_cips/pl0_resetn sys_rstgen/ext_reset_in
connect_bd_net /sys_cips/pl0_resetn /sys_rstgen/ext_reset_in
#### ad_connect  sys_cpu_clk sys_rstgen/slowest_sync_clk
connect_bd_net -net /sys_cpu_clk /sys_rstgen/slowest_sync_clk
#### ad_connect  sys_cips/pl0_resetn sys_350m_rstgen/ext_reset_in
connect_bd_net /sys_cips/pl0_resetn /sys_350m_rstgen/ext_reset_in
#### ad_connect  sys_350m_clk sys_350m_rstgen/slowest_sync_clk
connect_bd_net -net /sys_350m_clk /sys_350m_rstgen/slowest_sync_clk
#### ad_connect  sys_cpu_reset sys_rstgen/peripheral_reset
connect_bd_net -net sys_cpu_reset /sys_rstgen/peripheral_reset
#### ad_connect  sys_cpu_resetn sys_rstgen/peripheral_aresetn
connect_bd_net -net sys_cpu_resetn /sys_rstgen/peripheral_aresetn
#### ad_connect  sys_350m_reset sys_350m_rstgen/peripheral_reset
connect_bd_net -net sys_350m_reset /sys_350m_rstgen/peripheral_reset
#### ad_connect  sys_350m_resetn sys_350m_rstgen/peripheral_aresetn
connect_bd_net -net sys_350m_resetn /sys_350m_rstgen/peripheral_aresetn
#### ad_connect gpio0_i sys_cips/lpd_gpio_i
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/LPD_GPIO_i> is being overridden by the user with net <gpio0_i_1>. This pin will not be connected as a part of interface connection <LPD_GPIO>.
connect_bd_net /gpio0_i /sys_cips/LPD_GPIO_i
#### ad_connect gpio0_o sys_cips/lpd_gpio_o
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/LPD_GPIO_o> is being overridden by the user with net <sys_cips_LPD_GPIO_o>. This pin will not be connected as a part of interface connection <LPD_GPIO>.
connect_bd_net /gpio0_o /sys_cips/LPD_GPIO_o
#### ad_connect gpio0_t sys_cips/lpd_gpio_t
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/LPD_GPIO_t> is being overridden by the user with net <sys_cips_LPD_GPIO_t>. This pin will not be connected as a part of interface connection <LPD_GPIO>.
connect_bd_net /gpio0_t /sys_cips/LPD_GPIO_t
#### ad_ip_instance axi_gpio axi_gpio
#### ad_ip_parameter axi_gpio CONFIG.C_IS_DUAL 1
#### ad_ip_parameter axi_gpio CONFIG.C_GPIO_WIDTH 32
#### ad_ip_parameter axi_gpio CONFIG.C_GPIO2_WIDTH 32
#### ad_ip_parameter axi_gpio CONFIG.C_INTERRUPT_PRESENT 1
#### ad_connect gpio1_i axi_gpio/gpio_io_i
WARNING: [BD 41-1306] The connection to interface pin </axi_gpio/gpio_io_i> is being overridden by the user with net <gpio1_i_1>. This pin will not be connected as a part of interface connection <GPIO>.
connect_bd_net /gpio1_i /axi_gpio/gpio_io_i
#### ad_connect gpio1_o axi_gpio/gpio_io_o
WARNING: [BD 41-1306] The connection to interface pin </axi_gpio/gpio_io_o> is being overridden by the user with net <axi_gpio_gpio_io_o>. This pin will not be connected as a part of interface connection <GPIO>.
connect_bd_net /gpio1_o /axi_gpio/gpio_io_o
#### ad_connect gpio1_t axi_gpio/gpio_io_t
WARNING: [BD 41-1306] The connection to interface pin </axi_gpio/gpio_io_t> is being overridden by the user with net <axi_gpio_gpio_io_t>. This pin will not be connected as a part of interface connection <GPIO>.
connect_bd_net /gpio1_t /axi_gpio/gpio_io_t
#### ad_connect gpio2_i axi_gpio/gpio2_io_i
WARNING: [BD 41-1306] The connection to interface pin </axi_gpio/gpio2_io_i> is being overridden by the user with net <gpio2_i_1>. This pin will not be connected as a part of interface connection <GPIO2>.
connect_bd_net /gpio2_i /axi_gpio/gpio2_io_i
#### ad_connect gpio2_o axi_gpio/gpio2_io_o
WARNING: [BD 41-1306] The connection to interface pin </axi_gpio/gpio2_io_o> is being overridden by the user with net <axi_gpio_gpio2_io_o>. This pin will not be connected as a part of interface connection <GPIO2>.
connect_bd_net /gpio2_o /axi_gpio/gpio2_io_o
#### ad_connect gpio2_t axi_gpio/gpio2_io_t
WARNING: [BD 41-1306] The connection to interface pin </axi_gpio/gpio2_io_t> is being overridden by the user with net <axi_gpio_gpio2_io_t>. This pin will not be connected as a part of interface connection <GPIO2>.
connect_bd_net /gpio2_t /axi_gpio/gpio2_io_t
#### ad_cpu_interconnect 0x44000000 axi_gpio
connect_bd_net -net /sys_cpu_clk /axi_cpu_interconnect/aclk
connect_bd_net -net /sys_cpu_resetn /axi_cpu_interconnect/aresetn
connect_bd_net -net /sys_cpu_clk /sys_cips/m_axi_fpd_aclk
connect_bd_intf_net /axi_cpu_interconnect/S00_AXI /sys_cips/M_AXI_FPD
connect_bd_net -net /sys_cpu_clk /axi_gpio/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /axi_gpio/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M00_AXI /axi_gpio/S_AXI
#### ad_cpu_interrupt ps-0 mb-xx axi_gpio/ip2intc_irpt
connect_bd_net /axi_gpio/ip2intc_irpt /sys_cips/pl_ps_irq0
#### set sys_cpu_clk           [get_bd_nets sys_cpu_clk]
#### set sys_dma_clk           [get_bd_nets sys_350m_clk]
#### set sys_cpu_reset         [get_bd_nets sys_cpu_reset]
#### set sys_cpu_resetn        [get_bd_nets sys_cpu_resetn]
#### set sys_dma_reset         [get_bd_nets sys_350m_reset]
#### set sys_dma_resetn        [get_bd_nets sys_350m_resetn]
#### ad_connect  sys_cips/spi0_sck_o spi0_sclk
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_sck_o> is being overridden by the user with net <sys_cips_SPI0_sck_o>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /sys_cips/SPI0_sck_o /spi0_sclk
#### ad_connect  sys_cips/spi0_sck_i GND
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_sck_i> is being overridden by the user with net <GND_1_dout>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /GND_1/dout /sys_cips/SPI0_sck_i
#### ad_connect  sys_cips/spi0_io0_o spi0_mosi
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_io0_o> is being overridden by the user with net <sys_cips_SPI0_io0_o>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /sys_cips/SPI0_io0_o /spi0_mosi
#### ad_connect  sys_cips/spi0_io0_i spi0_miso
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_io0_i> is being overridden by the user with net <spi0_miso_1>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /sys_cips/SPI0_io0_i /spi0_miso
#### ad_connect  sys_cips/spi0_io1_i GND
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_io1_i> is being overridden by the user with net </GND_1_dout>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /GND_1/dout /sys_cips/SPI0_io1_i
#### ad_connect  sys_cips/spi0_ss_o spi0_csn
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_ss_o> is being overridden by the user with net <sys_cips_SPI0_ss_o>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /sys_cips/SPI0_ss_o /spi0_csn
#### ad_connect  sys_cips/spi0_ss_i VCC
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI0_ss_i> is being overridden by the user with net <VCC_1_dout>. This pin will not be connected as a part of interface connection <SPI0>.
connect_bd_net /VCC_1/dout /sys_cips/SPI0_ss_i
#### ad_connect  sys_cips/spi1_sck_o spi1_sclk
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_sck_o> is being overridden by the user with net <sys_cips_SPI1_sck_o>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /sys_cips/SPI1_sck_o /spi1_sclk
#### ad_connect  sys_cips/spi1_sck_i GND
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_sck_i> is being overridden by the user with net </GND_1_dout>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /GND_1/dout /sys_cips/SPI1_sck_i
#### ad_connect  sys_cips/spi1_io0_o spi1_mosi
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_io0_o> is being overridden by the user with net <sys_cips_SPI1_io0_o>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /sys_cips/SPI1_io0_o /spi1_mosi
#### ad_connect  sys_cips/spi1_io0_i spi1_miso
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_io0_i> is being overridden by the user with net <spi1_miso_1>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /sys_cips/SPI1_io0_i /spi1_miso
#### ad_connect  sys_cips/spi1_io1_i GND
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_io1_i> is being overridden by the user with net </GND_1_dout>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /GND_1/dout /sys_cips/SPI1_io1_i
#### ad_connect  sys_cips/spi1_ss_o spi1_csn
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_ss_o> is being overridden by the user with net <sys_cips_SPI1_ss_o>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /sys_cips/SPI1_ss_o /spi1_csn
#### ad_connect  sys_cips/spi1_ss_i VCC
WARNING: [BD 41-1306] The connection to interface pin </sys_cips/SPI1_ss_i> is being overridden by the user with net </VCC_1_dout>. This pin will not be connected as a part of interface connection <SPI1>.
connect_bd_net /VCC_1/dout /sys_cips/SPI1_ss_i
#### ad_ip_instance axi_sysid axi_sysid_0
#### ad_ip_instance sysid_rom rom_sys_0
#### ad_connect  axi_sysid_0/rom_addr   	    rom_sys_0/rom_addr
connect_bd_net /axi_sysid_0/rom_addr /rom_sys_0/rom_addr
#### ad_connect  axi_sysid_0/sys_rom_data   	rom_sys_0/rom_data
connect_bd_net /axi_sysid_0/sys_rom_data /rom_sys_0/rom_data
#### ad_connect  sys_cpu_clk                 rom_sys_0/clk
connect_bd_net -net /sys_cpu_clk /rom_sys_0/clk
#### ad_cpu_interconnect 0x45000000 axi_sysid_0
connect_bd_net -net /sys_cpu_clk /axi_sysid_0/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /axi_sysid_0/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M01_AXI /axi_sysid_0/s_axi
## source $ad_hdl_dir/projects/common/xilinx/adcfifo_bd.tcl
### proc ad_adcfifo_create {adc_fifo_name adc_data_width adc_dma_data_width adc_fifo_address_width} {
### 
###   ad_ip_instance util_adcfifo $adc_fifo_name
###   ad_ip_parameter $adc_fifo_name CONFIG.ADC_DATA_WIDTH $adc_data_width
###   ad_ip_parameter $adc_fifo_name CONFIG.DMA_DATA_WIDTH $adc_dma_data_width
###   ad_ip_parameter $adc_fifo_name CONFIG.DMA_READY_ENABLE 1
###   ad_ip_parameter $adc_fifo_name CONFIG.DMA_ADDRESS_WIDTH $adc_fifo_address_width
### 
### }
## source $ad_hdl_dir/projects/common/xilinx/dacfifo_bd.tcl
### proc ad_dacfifo_create {dac_fifo_name dac_data_width dac_dma_data_width dac_fifo_address_width} {
### 
###   if {$dac_data_width != $dac_dma_data_width} {
###     return -code error [format "ERROR: util_dacfifo dac/dma widths must be the same!"]
###   }
### 
###   ad_ip_instance util_dacfifo $dac_fifo_name
###   ad_ip_parameter $dac_fifo_name CONFIG.DATA_WIDTH $dac_data_width
###   ad_ip_parameter $dac_fifo_name CONFIG.ADDRESS_WIDTH $dac_fifo_address_width
### 
### }
## set ADI_PHY_SEL 0
## source $ad_hdl_dir/projects/ad9081_fmca_ebz/common/ad9081_fmca_ebz_bd.tcl
### if {![info exists ADI_PHY_SEL]} {
###   set ADI_PHY_SEL 1
### }
### source $ad_hdl_dir/projects/common/xilinx/data_offload_bd.tcl
#### proc ad_data_offload_create {instance_name
####                              datapath_type
####                              mem_type
####                              mem_size
####                              source_dwidth
####                              destination_dwidth
####                              {axi_data_width 256}
####                              {axi_addr_width 32}
####                              {shared_devclk 0}} {
#### 
####   global ad_hdl_dir
####   global sys_cpu_resetn
#### 
####   create_bd_cell -type hier $instance_name
####   current_bd_instance /$instance_name
#### 
####     ###########################################################################
####     ## Sub-system's ports and interface definitions
####     ###########################################################################
#### 
####     create_bd_pin -dir I -type clk s_axi_aclk
####     create_bd_pin -dir I -type rst s_axi_aresetn
####     create_bd_pin -dir I -type clk s_axis_aclk
####     create_bd_pin -dir I -type rst s_axis_aresetn
####     create_bd_pin -dir I -type clk m_axis_aclk
####     create_bd_pin -dir I -type rst m_axis_aresetn
#### 
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis
####     create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis
#### 
####     create_bd_pin -dir I init_req
####     create_bd_pin -dir I sync_ext
#### 
####     set source_addresses [expr ($mem_size * 8) / $source_dwidth]
####     set source_awidth [log2 $source_addresses]
####     set destination_max_address [expr ($mem_size * 8) / $destination_dwidth]
####     set destination_awidth [log2 $destination_max_address]
#### 
####     ###########################################################################
####     # Data offload controller instance
####     ###########################################################################
#### 
####     ad_ip_instance data_offload i_data_offload [list \
####       MEM_TYPE [expr $mem_type == 0 ? 0 : 1] \
####       MEM_SIZE_LOG2 [log2 $mem_size] \
####       TX_OR_RXN_PATH $datapath_type \
####       SRC_DATA_WIDTH $source_dwidth \
####       DST_DATA_WIDTH $destination_dwidth \
####       DST_CYCLIC_EN $datapath_type \
####       SYNC_EXT_ADD_INTERNAL_CDC [expr {!$shared_devclk}] \
####     ]
#### 
####     if {$mem_type == 0} {
####       ###########################################################################
####       # Internal storage instance (BRAMs)
####       ###########################################################################
#### 
####       ad_ip_instance util_do_ram storage_unit [list \
####         SRC_DATA_WIDTH $source_dwidth \
####         DST_DATA_WIDTH $destination_dwidth \
####         LENGTH_WIDTH [log2 $mem_size] \
####       ]
#### 
####     } elseif {$mem_type == 1 || $mem_type == 2} {
####       ###########################################################################
####       # Bridge instance for the external DDR (1) / HBM(2) memory contreller
####       # NOTE: The DDR/HBM instantiation should be in project's system_bd.tcl file
####       ###########################################################################
####       source $ad_hdl_dir/library/util_hbm/scripts/adi_util_hbm.tcl
#### 
####       ad_create_util_hbm storage_unit \
####         $datapath_type \
####         $source_dwidth \
####         $destination_dwidth \
####         $mem_size \
####         $axi_data_width \
####         $mem_type
#### 
####       if {$mem_type == 1} {
####         ad_ip_parameter storage_unit CONFIG.AXI_PROTOCOL 0
####       } else {
####         ad_ip_parameter storage_unit CONFIG.AXI_PROTOCOL 1
####       }
#### 
####     }
#### 
####     ###########################################################################
####     # Connect Storage to Data Offload
####     ###########################################################################
####     ad_connect storage_unit/wr_ctrl i_data_offload/wr_ctrl
####     ad_connect storage_unit/rd_ctrl i_data_offload/rd_ctrl
#### 
####     ad_connect storage_unit/s_axis i_data_offload/m_storage_axis
####     ad_connect storage_unit/m_axis i_data_offload/s_storage_axis
#### 
####     ad_connect storage_unit/s_axis_aclk s_axis_aclk
####     ad_connect storage_unit/s_axis_aresetn s_axis_aresetn
####     ad_connect storage_unit/m_axis_aclk m_axis_aclk
####     ad_connect storage_unit/m_axis_aresetn m_axis_aresetn
#### 
####     ###########################################################################
####     # Internal connections
####     ###########################################################################
#### 
####     ad_connect s_axi_aclk i_data_offload/s_axi_aclk
####     ad_connect s_axi_aresetn i_data_offload/s_axi_aresetn
####     ad_connect s_axis_aclk i_data_offload/s_axis_aclk
####     ad_connect s_axis_aresetn i_data_offload/s_axis_aresetn
####     ad_connect m_axis_aclk i_data_offload/m_axis_aclk
####     ad_connect m_axis_aresetn i_data_offload/m_axis_aresetn
#### 
####     ad_connect s_axi i_data_offload/s_axi
####     ad_connect s_axis i_data_offload/s_axis
####     ad_connect m_axis i_data_offload/m_axis
#### 
####     ad_connect init_req i_data_offload/init_req
####     ad_connect sync_ext i_data_offload/sync_ext
#### 
####   current_bd_instance /
#### 
#### }
#### proc log2 {x} {
####   return [tcl::mathfunc::int [tcl::mathfunc::ceil [expr [tcl::mathfunc::log $x] / [tcl::mathfunc::log 2]]]]
#### }
### source $ad_hdl_dir/library/jesd204/scripts/jesd204.tcl
#### proc adi_axi_jesd204_tx_create {ip_name num_lanes {num_links 1} {link_mode 1}} {
#### 
####   if {$num_lanes < 1 || $num_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
#### 
####   if {$num_links < 1 || $num_links > 8} {
####     return -code 1 "ERROR: Invalid number of JESD204B links. (Supported range 1-8)"
####   }
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     ad_ip_instance axi_jesd204_tx "${ip_name}/tx_axi"
####     ad_ip_instance jesd204_tx "${ip_name}/tx"
#### 
####     ad_ip_parameter "${ip_name}/tx_axi" CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/tx_axi" CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/tx_axi" CONFIG.LINK_MODE $link_mode
####     ad_ip_parameter "${ip_name}/tx"     CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/tx"     CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/tx"     CONFIG.LINK_MODE $link_mode
#### 
####     ad_connect "${ip_name}/tx_axi/core_reset" "${ip_name}/tx/reset"
####     ad_connect "${ip_name}/tx_axi/device_reset" "${ip_name}/tx/device_reset"
####     if {$link_mode == 1} {ad_connect "${ip_name}/tx_axi/tx_ctrl" "${ip_name}/tx/tx_ctrl"}
####     ad_connect "${ip_name}/tx_axi/tx_cfg" "${ip_name}/tx/tx_cfg"
####     ad_connect "${ip_name}/tx/tx_event" "${ip_name}/tx_axi/tx_event"
####     ad_connect "${ip_name}/tx/tx_status" "${ip_name}/tx_axi/tx_status"
####     if {$link_mode == 1} {ad_connect "${ip_name}/tx/tx_ilas_config" "${ip_name}/tx_axi/tx_ilas_config"}
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
####     create_bd_pin -dir O -type intr "${ip_name}/irq"
#### 
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/tx_axi/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/tx_axi/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/tx_axi/s_axi"
####     ad_connect "${ip_name}/tx_axi/irq" "${ip_name}/irq"
#### 
####     # JESD204 processing
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     create_bd_pin -dir I -type clk "${ip_name}/device_clk"
####     if {$link_mode == 1} {create_bd_pin -dir I -from [expr $num_links - 1] -to 0 "${ip_name}/sync"}
####     create_bd_pin -dir I "${ip_name}/sysref"
#### 
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/tx_data"
#### 
####     ad_connect "${ip_name}/link_clk" "${ip_name}/tx_axi/core_clk"
####     ad_connect "${ip_name}/link_clk" "${ip_name}/tx/clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/tx_axi/device_clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/tx/device_clk"
####     if {$link_mode == 1} {ad_connect "${ip_name}/sync" "${ip_name}/tx/sync"}
####     ad_connect "${ip_name}/sysref" "${ip_name}/tx/sysref"
####     ad_connect "${ip_name}/tx_data" "${ip_name}/tx/tx_data"
#### 
####     for {set i 0} {$i < $num_lanes} {incr i} {
####       create_bd_intf_pin -mode Master -vlnv xilinx.com:display_jesd204:jesd204_tx_bus_rtl:1.0 "${ip_name}/tx_phy${i}"
####       ad_connect "${ip_name}/tx/tx_phy${i}" "${ip_name}/tx_phy${i}"
####     }
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_axi_jesd204_rx_create {ip_name num_lanes {num_links 1} {link_mode 1}} {
#### 
####   if {$num_lanes < 1 || $num_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
#### 
####   if {$num_links < 1 || $num_links > 8} {
####     return -code 1 "ERROR: Invalid number of JESD204B links. (Supported range 1-8)"
####   }
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     ad_ip_instance axi_jesd204_rx "${ip_name}/rx_axi"
####     ad_ip_instance jesd204_rx "${ip_name}/rx"
#### 
####     ad_ip_parameter "${ip_name}/rx_axi" CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/rx_axi" CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/rx_axi" CONFIG.LINK_MODE $link_mode
####     ad_ip_parameter "${ip_name}/rx"     CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/rx"     CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/rx"     CONFIG.LINK_MODE $link_mode
#### 
####     ad_connect "${ip_name}/rx_axi/core_reset" "${ip_name}/rx/reset"
####     ad_connect "${ip_name}/rx_axi/device_reset" "${ip_name}/rx/device_reset"
####     ad_connect "${ip_name}/rx_axi/rx_cfg" "${ip_name}/rx/rx_cfg"
####     ad_connect "${ip_name}/rx/rx_event" "${ip_name}/rx_axi/rx_event"
####     ad_connect "${ip_name}/rx/rx_status" "${ip_name}/rx_axi/rx_status"
####     if {$link_mode == 1} {ad_connect "${ip_name}/rx/rx_ilas_config" "${ip_name}/rx_axi/rx_ilas_config"}
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
####     create_bd_pin -dir O -type intr "${ip_name}/irq"
#### 
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/rx_axi/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/rx_axi/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/rx_axi/s_axi"
####     ad_connect "${ip_name}/rx_axi/irq" "${ip_name}/irq"
#### 
####     # JESD204 processing
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     create_bd_pin -dir I -type clk "${ip_name}/device_clk"
####     if {$link_mode == 1} {create_bd_pin -dir O -from [expr $num_links - 1] -to 0 "${ip_name}/sync"}
####     create_bd_pin -dir I "${ip_name}/sysref"
####     if {$link_mode == 1} {create_bd_pin -dir O "${ip_name}/phy_en_char_align"}
#### #    create_bd_pin -dir I "${ip_name}/phy_ready"
####     create_bd_pin -dir O -from 3 -to 0 "${ip_name}/rx_eof"
####     create_bd_pin -dir O -from 3 -to 0 "${ip_name}/rx_sof"
#### 
#### #    create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/rx_data"
####     create_bd_pin -dir O "${ip_name}/rx_data_tvalid"
####     create_bd_pin -dir O -from [expr $num_lanes * 32 - 1] -to 0 "${ip_name}/rx_data_tdata"
#### 
####     ad_connect "${ip_name}/link_clk" "${ip_name}/rx_axi/core_clk"
####     ad_connect "${ip_name}/link_clk" "${ip_name}/rx/clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/rx_axi/device_clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/rx/device_clk"
####     if {$link_mode == 1} {ad_connect "${ip_name}/rx/sync" "${ip_name}/sync"}
####     ad_connect "${ip_name}/sysref" "${ip_name}/rx/sysref"
#### #    ad_connect "${ip_name}/phy_ready" "${ip_name}/rx/phy_ready"
####     if {$link_mode == 1} {ad_connect "${ip_name}/rx/phy_en_char_align" "${ip_name}/phy_en_char_align"}
####     ad_connect "${ip_name}/rx/rx_data" "${ip_name}/rx_data_tdata"
####     ad_connect "${ip_name}/rx/rx_valid" "${ip_name}/rx_data_tvalid"
####     ad_connect "${ip_name}/rx/rx_eof" "${ip_name}/rx_eof"
####     ad_connect "${ip_name}/rx/rx_sof" "${ip_name}/rx_sof"
#### 
####     for {set i 0} {$i < $num_lanes} {incr i} {
####       create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_jesd204:jesd204_rx_bus_rtl:1.0 "${ip_name}/rx_phy${i}"
####       ad_connect "${ip_name}/rx/rx_phy${i}" "${ip_name}/rx_phy${i}"
####     }
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_tpl_jesd204_tx_create {ip_name num_of_lanes num_of_converters samples_per_frame sample_width {link_layer_bytes_per_beat 4} {dma_sample_width 16}} {
#### 
#### 
####   if {$num_of_lanes < 1 || $num_of_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
####   # F = (M * N * S) / (L * 8)
####   set bytes_per_frame [expr ($num_of_converters * $sample_width * $samples_per_frame) / ($num_of_lanes * 8)];
####   # one beat per lane must accommodate at least one frame
####   set tpl_bytes_per_beat [expr max($bytes_per_frame, $link_layer_bytes_per_beat)]
#### 
####   # datapath width = L * 8 * TPL_BYTES_PER_BEAT / (M * N)
####   set samples_per_channel [expr ($num_of_lanes * 8 * $tpl_bytes_per_beat) / ($num_of_converters * $sample_width)];
#### 
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
#### 
####     # Interface to link layer
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/link"
#### 
####     # Interface to application layer
####     create_bd_pin -dir I "${ip_name}/dac_dunf"
####     for {set i 0} {$i < $num_of_converters} {incr i} {
####       create_bd_pin -dir O "${ip_name}/dac_enable_${i}"
####       create_bd_pin -dir O "${ip_name}/dac_valid_${i}"
####       create_bd_pin -dir I "${ip_name}/dac_data_${i}"
####     }
#### 
####     # Generic TPL core
####     ad_ip_instance ad_ip_jesd204_tpl_dac "${ip_name}/dac_tpl_core" [list \
####       NUM_LANES $num_of_lanes \
####       NUM_CHANNELS $num_of_converters \
####       SAMPLES_PER_FRAME $samples_per_frame \
####       CONVERTER_RESOLUTION $sample_width \
####       BITS_PER_SAMPLE $sample_width  \
####       OCTETS_PER_BEAT $tpl_bytes_per_beat \
####       DMA_BITS_PER_SAMPLE $dma_sample_width
####      ]
#### 
####     if {$num_of_converters > 1} {
####       # Concatenation and slicer cores
####       # xconcat limited to 32 input ports
####       for {set i 0} {$i < $num_of_converters} {incr i 32} {
####       ad_ip_instance xlconcat "${ip_name}/data_concat[expr $i/32]" [list \
####         NUM_PORTS [expr min(32,$num_of_converters-$i)] \
####         ]
####       }
####       # main concat
####       if {$num_of_converters > 32} {
####        ad_ip_instance xlconcat "${ip_name}/data_concat" [list \
####         NUM_PORTS [expr int(ceil(double($num_of_converters)/32))] \
####         ]
####       }
#### 
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_ip_instance xlslice "${ip_name}/enable_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####         ad_ip_instance xlslice "${ip_name}/valid_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####       }
####     }
####     # Create connections
####     # TPL configuration interface
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/dac_tpl_core/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/dac_tpl_core/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/dac_tpl_core/s_axi"
#### 
####     # TPL - link layer
####     ad_connect ${ip_name}/dac_tpl_core/link_clk ${ip_name}/link_clk
####     ad_connect ${ip_name}/dac_tpl_core/link ${ip_name}/link
#### 
####     # TPL - app layer
####     if {$num_of_converters > 1} {
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_connect ${ip_name}/dac_tpl_core/enable ${ip_name}/enable_slice_$i/Din
####         ad_connect ${ip_name}/dac_tpl_core/dac_valid ${ip_name}/valid_slice_$i/Din
#### 
####         ad_connect ${ip_name}/enable_slice_$i/Dout ${ip_name}/dac_enable_$i
####         ad_connect ${ip_name}/valid_slice_$i/Dout ${ip_name}/dac_valid_$i
####         ad_connect ${ip_name}/dac_data_$i ${ip_name}/data_concat[expr $i/32]/In[expr $i%32]
#### 
####       }
####       if {$num_of_converters > 32} {
####         # wire all concatenators together
####         for {set i 0} {$i < $num_of_converters} {incr i 32} {
####           ad_connect ${ip_name}/data_concat[expr $i/32]/dout ${ip_name}/data_concat/In[expr $i/32]
####         }
####         ad_connect ${ip_name}/data_concat/dout ${ip_name}/dac_tpl_core/dac_ddata
####       } else {
####         ad_connect ${ip_name}/data_concat0/dout ${ip_name}/dac_tpl_core/dac_ddata
####       }
####     } else {
####       ad_connect ${ip_name}/dac_data_0 ${ip_name}/dac_tpl_core/dac_ddata
####       ad_connect ${ip_name}/dac_tpl_core/enable ${ip_name}/dac_enable_0
####       ad_connect ${ip_name}/dac_tpl_core/dac_valid ${ip_name}/dac_valid_0
####     }
####     ad_connect ${ip_name}/dac_dunf ${ip_name}/dac_tpl_core/dac_dunf
#### 
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_tpl_jesd204_rx_create {ip_name num_of_lanes num_of_converters samples_per_frame sample_width {link_layer_bytes_per_beat 4} {dma_sample_width 16}} {
#### 
#### 
####   if {$num_of_lanes < 1 || $num_of_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
####   # F = (M * N * S) / (L * 8)
####   set bytes_per_frame [expr ($num_of_converters * $sample_width * $samples_per_frame) / ($num_of_lanes * 8)];
####   # one beat per lane must accommodate at least one frame
####   set tpl_bytes_per_beat [expr max($bytes_per_frame, $link_layer_bytes_per_beat)]
#### 
####   # datapath width = L * 8 * TPL_BYTES_PER_BEAT / (M * N)
####   set samples_per_channel [expr ($num_of_lanes * 8 * $tpl_bytes_per_beat) / ($num_of_converters * $sample_width)];
#### 
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
#### 
####     # Interface to link layer
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     #create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/link"
####     create_bd_pin -dir I "${ip_name}/link_sof"
####     create_bd_pin -dir I "${ip_name}/link_valid"
####     create_bd_pin -dir I "${ip_name}/link_data"
#### 
####     # Interface to application layer
####     create_bd_pin -dir I "${ip_name}/adc_dovf"
####     for {set i 0} {$i < $num_of_converters} {incr i} {
####       create_bd_pin -dir O "${ip_name}/adc_enable_${i}"
####       create_bd_pin -dir O "${ip_name}/adc_valid_${i}"
####       create_bd_pin -dir O "${ip_name}/adc_data_${i}"
####     }
#### 
####     # Generic TPL core
####     ad_ip_instance ad_ip_jesd204_tpl_adc "${ip_name}/adc_tpl_core" [list \
####       NUM_LANES $num_of_lanes \
####       NUM_CHANNELS $num_of_converters \
####       SAMPLES_PER_FRAME $samples_per_frame \
####       CONVERTER_RESOLUTION $sample_width \
####       BITS_PER_SAMPLE $sample_width  \
####       OCTETS_PER_BEAT $tpl_bytes_per_beat \
####       DMA_BITS_PER_SAMPLE $dma_sample_width
####      ]
#### 
####     if {$num_of_converters > 1} {
####       # Slicer cores
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_ip_instance xlslice ${ip_name}/data_slice_$i [list \
####           DIN_WIDTH [expr $dma_sample_width*$samples_per_channel*$num_of_converters] \
####           DIN_FROM [expr $dma_sample_width*$samples_per_channel*($i+1)-1] \
####           DIN_TO [expr $dma_sample_width*$samples_per_channel*$i] \
####         ]
#### 
####         ad_ip_instance xlslice "${ip_name}/enable_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####         ad_ip_instance xlslice "${ip_name}/valid_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####       }
####     }
#### 
####     # Create connections
####     # TPL configuration interface
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/adc_tpl_core/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/adc_tpl_core/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/adc_tpl_core/s_axi"
#### 
####     # TPL - link layer
####     ad_connect ${ip_name}/adc_tpl_core/link_clk ${ip_name}/link_clk
####     #ad_connect ${ip_name}/adc_tpl_core/link ${ip_name}/link
####     ad_connect ${ip_name}/adc_tpl_core/link_sof ${ip_name}/link_sof
####     ad_connect ${ip_name}/adc_tpl_core/link_data ${ip_name}/link_data
####     ad_connect ${ip_name}/adc_tpl_core/link_valid ${ip_name}/link_valid
#### 
####     # TPL - app layer
####     if {$num_of_converters > 1} {
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_connect ${ip_name}/adc_tpl_core/adc_data ${ip_name}/data_slice_$i/Din
####         ad_connect ${ip_name}/adc_tpl_core/enable ${ip_name}/enable_slice_$i/Din
####         ad_connect ${ip_name}/adc_tpl_core/adc_valid ${ip_name}/valid_slice_$i/Din
#### 
####         ad_connect ${ip_name}/data_slice_$i/Dout ${ip_name}/adc_data_$i
####         ad_connect ${ip_name}/enable_slice_$i/Dout ${ip_name}/adc_enable_$i
####         ad_connect ${ip_name}/valid_slice_$i/Dout ${ip_name}/adc_valid_$i
#### 
####       }
####     } else {
####       ad_connect ${ip_name}/adc_tpl_core/adc_data ${ip_name}/adc_data_0
####       ad_connect ${ip_name}/adc_tpl_core/enable ${ip_name}/adc_enable_0
####       ad_connect ${ip_name}/adc_tpl_core/adc_valid ${ip_name}/adc_valid_0
####     }
####     ad_connect ${ip_name}/adc_dovf ${ip_name}/adc_tpl_core/adc_dovf
#### 
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_jesd204_calc_tpl_width {link_datapath_width jesd_l jesd_m jesd_s jesd_np {tpl_datapath_width {}}} {
#### 
####   set jesd_f [expr ($jesd_m*$jesd_s*$jesd_np)/(8*$jesd_l)]
#### 
####   if {$tpl_datapath_width != ""} {
####     set tpl_div [expr $tpl_datapath_width / $jesd_f]
####     set tpl_mod [expr $tpl_datapath_width % $jesd_f]
#### 
####     if {$tpl_div < 1 || $tpl_mod != 0 || (($tpl_div > 1) && ([expr $tpl_div % 2] != 0))} {
####       return -code 1 "ERROR: Invalid custom TPL width. Must be a power of 2 multiple of F"
####     } else {
####       return $tpl_datapath_width
####     }
#### 
####   # For F=3,6,12 get first pow 2 multiple of F greater than link_datapath_width
####   } elseif {$jesd_f % 3 == 0} {
####     set np12_datapath_width $jesd_f
####     while {$np12_datapath_width < $link_datapath_width} {
####         set np12_datapath_width [expr 2*$np12_datapath_width]
####     }
####     return $np12_datapath_width
####   } else {
####     return [expr max($jesd_f,$link_datapath_width)]
####   }
#### 
#### }
### source $ad_hdl_dir/library/axi_tdd/scripts/axi_tdd.tcl
#### proc ad_tdd_gen_create {ip_name
####                         num_of_channels
####                         {default_polarity 0}
####                         {reg_counter_width 32}
####                         {burst_counter_width 32}
####                         {sync_counter_width 64}
####                         {sync_internal 1}
####                         {sync_external 0}
####                         {sync_external_cdc 0}} {
#### 
####   create_bd_cell -type hier $ip_name
#### 
####   # Control interface
####   create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####   create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####   create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
#### 
####   # Device interface
####   create_bd_pin -dir I -type clk "${ip_name}/clk"
####   create_bd_pin -dir I -type rst "${ip_name}/resetn"
####   create_bd_pin -dir I "${ip_name}/sync_in"
####   create_bd_pin -dir O "${ip_name}/sync_out"
####   for {set i 0} {$i < $num_of_channels} {incr i} {
####     create_bd_pin -dir O "${ip_name}/tdd_channel_${i}"
####   }
#### 
####   # Generic TDD core
####   ad_ip_instance axi_tdd "${ip_name}/tdd_core" [list \
####     CHANNEL_COUNT $num_of_channels \
####     DEFAULT_POLARITY $default_polarity \
####     REGISTER_WIDTH $reg_counter_width \
####     BURST_COUNT_WIDTH $burst_counter_width \
####     SYNC_COUNT_WIDTH $sync_counter_width \
####     SYNC_INTERNAL $sync_internal \
####     SYNC_EXTERNAL $sync_external \
####     SYNC_EXTERNAL_CDC $sync_external_cdc
####    ]
#### 
####   for {set i 0} {$i < $num_of_channels} {incr i} {
####     ad_ip_instance xlslice "${ip_name}/tdd_ch_slice_${i}" [list \
####       DIN_WIDTH $num_of_channels \
####       DIN_FROM $i \
####       DIN_TO $i \
####     ]
####   }
#### 
####   # Create connections
####   ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/tdd_core/s_axi_aclk"
####   ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/tdd_core/s_axi_aresetn"
####   ad_connect "${ip_name}/s_axi" "${ip_name}/tdd_core/s_axi"
#### 
####   ad_connect ${ip_name}/tdd_core/clk ${ip_name}/clk
####   ad_connect ${ip_name}/tdd_core/resetn ${ip_name}/resetn
####   ad_connect ${ip_name}/tdd_core/sync_in ${ip_name}/sync_in
####   ad_connect ${ip_name}/tdd_core/sync_out ${ip_name}/sync_out
#### 
####   for {set i 0} {$i < $num_of_channels} {incr i} {
####     ad_connect ${ip_name}/tdd_core/tdd_channel ${ip_name}/tdd_ch_slice_$i/Din
####     ad_connect ${ip_name}/tdd_ch_slice_$i/Dout ${ip_name}/tdd_channel_$i
####   }
#### 
#### }
### if {![info exists INTF_CFG]} {
###   set INTF_CFG RXTX
### }
### set JESD_MODE  $ad_project_params(JESD_MODE)
### set RX_LANE_RATE $ad_project_params(RX_LANE_RATE)
### set TX_LANE_RATE $ad_project_params(TX_LANE_RATE)
### set RX_TPL_WIDTH [ expr { [info exists ad_project_params(RX_TPL_WIDTH)] \
###                           ? $ad_project_params(RX_TPL_WIDTH) : {} } ]
### set TX_TPL_WIDTH [ expr { [info exists ad_project_params(TX_TPL_WIDTH)] \
###                           ? $ad_project_params(TX_TPL_WIDTH) : {} } ]
### set TDD_SUPPORT [ expr { [info exists ad_project_params(TDD_SUPPORT)] \
###                           ? $ad_project_params(TDD_SUPPORT) : 0 } ]
### set SHARED_DEVCLK [ expr { [info exists ad_project_params(SHARED_DEVCLK)] \
###                             ? $ad_project_params(SHARED_DEVCLK) : 0 } ]
### if {$TDD_SUPPORT && !$SHARED_DEVCLK} {
###   error "ERROR: Cannot enable TDD support without shared deviceclocks!"
### }
### if {$TDD_SUPPORT && $INTF_CFG != "RXTX"} {
###   error "ERROR: Cannot enable TDD support with INTF_CFG != RXTX!"
### }
### set adc_do_mem_type [ expr { [info exists ad_project_params(ADC_DO_MEM_TYPE)] \
###                           ? $ad_project_params(ADC_DO_MEM_TYPE) : 0 } ]
### set dac_do_mem_type [ expr { [info exists ad_project_params(DAC_DO_MEM_TYPE)] \
###                           ? $ad_project_params(DAC_DO_MEM_TYPE) : 0 } ]
### set do_axi_data_width [ expr { [info exists do_axi_data_width] \
###                           ? $do_axi_data_width : 256 } ]
### if {$JESD_MODE == "8B10B"} {
###   set DATAPATH_WIDTH 4
###   set NP12_DATAPATH_WIDTH 6
###   set ENCODER_SEL 1
### } else {
###   set DATAPATH_WIDTH 8
###   set NP12_DATAPATH_WIDTH 12
###   set ENCODER_SEL 2
### }
### set MAX_RX_LANES_PER_LINK 4
### set MAX_TX_LANES_PER_LINK 4
### set MAX_RX_LINKS 2
### set MAX_TX_LINKS 2
### set MAX_RX_LANES [expr $MAX_RX_LANES_PER_LINK*$MAX_RX_LINKS]
### set MAX_TX_LANES [expr $MAX_TX_LANES_PER_LINK*$MAX_TX_LINKS]
### set RX_NUM_LINKS $ad_project_params(RX_NUM_LINKS)
### set RX_JESD_M     $ad_project_params(RX_JESD_M)
### set RX_JESD_L     $ad_project_params(RX_JESD_L)
### set RX_JESD_S     $ad_project_params(RX_JESD_S)
### set RX_JESD_NP    $ad_project_params(RX_JESD_NP)
### set RX_NUM_OF_LANES      [expr $RX_JESD_L * $RX_NUM_LINKS]
### set RX_NUM_OF_CONVERTERS [expr $RX_JESD_M * $RX_NUM_LINKS]
### set RX_SAMPLES_PER_FRAME $RX_JESD_S
### set RX_SAMPLE_WIDTH      $RX_JESD_NP
### set RX_DMA_SAMPLE_WIDTH $RX_JESD_NP
### if {$RX_DMA_SAMPLE_WIDTH == 12} {
###   set RX_DMA_SAMPLE_WIDTH 16
### }
### set RX_DATAPATH_WIDTH [adi_jesd204_calc_tpl_width $DATAPATH_WIDTH $RX_JESD_L $RX_JESD_M $RX_JESD_S $RX_JESD_NP $RX_TPL_WIDTH]
### set RX_SAMPLES_PER_CHANNEL [expr $RX_NUM_OF_LANES * 8* $RX_DATAPATH_WIDTH / ($RX_NUM_OF_CONVERTERS * $RX_SAMPLE_WIDTH)]
### set TX_NUM_LINKS $ad_project_params(TX_NUM_LINKS)
### set TX_JESD_M     $ad_project_params(TX_JESD_M)
### set TX_JESD_L     $ad_project_params(TX_JESD_L)
### set TX_JESD_S     $ad_project_params(TX_JESD_S)
### set TX_JESD_NP    $ad_project_params(TX_JESD_NP)
### set TX_NUM_OF_LANES      [expr $TX_JESD_L * $TX_NUM_LINKS]
### set TX_NUM_OF_CONVERTERS [expr $TX_JESD_M * $TX_NUM_LINKS]
### set TX_SAMPLES_PER_FRAME $TX_JESD_S
### set TX_SAMPLE_WIDTH      $TX_JESD_NP
### set TX_DMA_SAMPLE_WIDTH $TX_JESD_NP
### if {$TX_DMA_SAMPLE_WIDTH == 12} {
###   set TX_DMA_SAMPLE_WIDTH 16
### }
### set TX_DATAPATH_WIDTH [adi_jesd204_calc_tpl_width $DATAPATH_WIDTH $TX_JESD_L $TX_JESD_M $TX_JESD_S $TX_JESD_NP $TX_TPL_WIDTH]
### set TX_SAMPLES_PER_CHANNEL [expr $TX_NUM_OF_LANES * 8 * $TX_DATAPATH_WIDTH / ($TX_NUM_OF_CONVERTERS * $TX_SAMPLE_WIDTH)]
### set max_num_quads 2
### set num_quads [expr int(round(1.0 * $RX_NUM_OF_LANES / 4))]
### source $ad_hdl_dir/library/jesd204/scripts/jesd204.tcl
#### proc adi_axi_jesd204_tx_create {ip_name num_lanes {num_links 1} {link_mode 1}} {
#### 
####   if {$num_lanes < 1 || $num_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
#### 
####   if {$num_links < 1 || $num_links > 8} {
####     return -code 1 "ERROR: Invalid number of JESD204B links. (Supported range 1-8)"
####   }
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     ad_ip_instance axi_jesd204_tx "${ip_name}/tx_axi"
####     ad_ip_instance jesd204_tx "${ip_name}/tx"
#### 
####     ad_ip_parameter "${ip_name}/tx_axi" CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/tx_axi" CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/tx_axi" CONFIG.LINK_MODE $link_mode
####     ad_ip_parameter "${ip_name}/tx"     CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/tx"     CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/tx"     CONFIG.LINK_MODE $link_mode
#### 
####     ad_connect "${ip_name}/tx_axi/core_reset" "${ip_name}/tx/reset"
####     ad_connect "${ip_name}/tx_axi/device_reset" "${ip_name}/tx/device_reset"
####     if {$link_mode == 1} {ad_connect "${ip_name}/tx_axi/tx_ctrl" "${ip_name}/tx/tx_ctrl"}
####     ad_connect "${ip_name}/tx_axi/tx_cfg" "${ip_name}/tx/tx_cfg"
####     ad_connect "${ip_name}/tx/tx_event" "${ip_name}/tx_axi/tx_event"
####     ad_connect "${ip_name}/tx/tx_status" "${ip_name}/tx_axi/tx_status"
####     if {$link_mode == 1} {ad_connect "${ip_name}/tx/tx_ilas_config" "${ip_name}/tx_axi/tx_ilas_config"}
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
####     create_bd_pin -dir O -type intr "${ip_name}/irq"
#### 
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/tx_axi/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/tx_axi/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/tx_axi/s_axi"
####     ad_connect "${ip_name}/tx_axi/irq" "${ip_name}/irq"
#### 
####     # JESD204 processing
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     create_bd_pin -dir I -type clk "${ip_name}/device_clk"
####     if {$link_mode == 1} {create_bd_pin -dir I -from [expr $num_links - 1] -to 0 "${ip_name}/sync"}
####     create_bd_pin -dir I "${ip_name}/sysref"
#### 
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/tx_data"
#### 
####     ad_connect "${ip_name}/link_clk" "${ip_name}/tx_axi/core_clk"
####     ad_connect "${ip_name}/link_clk" "${ip_name}/tx/clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/tx_axi/device_clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/tx/device_clk"
####     if {$link_mode == 1} {ad_connect "${ip_name}/sync" "${ip_name}/tx/sync"}
####     ad_connect "${ip_name}/sysref" "${ip_name}/tx/sysref"
####     ad_connect "${ip_name}/tx_data" "${ip_name}/tx/tx_data"
#### 
####     for {set i 0} {$i < $num_lanes} {incr i} {
####       create_bd_intf_pin -mode Master -vlnv xilinx.com:display_jesd204:jesd204_tx_bus_rtl:1.0 "${ip_name}/tx_phy${i}"
####       ad_connect "${ip_name}/tx/tx_phy${i}" "${ip_name}/tx_phy${i}"
####     }
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_axi_jesd204_rx_create {ip_name num_lanes {num_links 1} {link_mode 1}} {
#### 
####   if {$num_lanes < 1 || $num_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
#### 
####   if {$num_links < 1 || $num_links > 8} {
####     return -code 1 "ERROR: Invalid number of JESD204B links. (Supported range 1-8)"
####   }
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     ad_ip_instance axi_jesd204_rx "${ip_name}/rx_axi"
####     ad_ip_instance jesd204_rx "${ip_name}/rx"
#### 
####     ad_ip_parameter "${ip_name}/rx_axi" CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/rx_axi" CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/rx_axi" CONFIG.LINK_MODE $link_mode
####     ad_ip_parameter "${ip_name}/rx"     CONFIG.NUM_LANES $num_lanes
####     ad_ip_parameter "${ip_name}/rx"     CONFIG.NUM_LINKS $num_links
####     ad_ip_parameter "${ip_name}/rx"     CONFIG.LINK_MODE $link_mode
#### 
####     ad_connect "${ip_name}/rx_axi/core_reset" "${ip_name}/rx/reset"
####     ad_connect "${ip_name}/rx_axi/device_reset" "${ip_name}/rx/device_reset"
####     ad_connect "${ip_name}/rx_axi/rx_cfg" "${ip_name}/rx/rx_cfg"
####     ad_connect "${ip_name}/rx/rx_event" "${ip_name}/rx_axi/rx_event"
####     ad_connect "${ip_name}/rx/rx_status" "${ip_name}/rx_axi/rx_status"
####     if {$link_mode == 1} {ad_connect "${ip_name}/rx/rx_ilas_config" "${ip_name}/rx_axi/rx_ilas_config"}
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
####     create_bd_pin -dir O -type intr "${ip_name}/irq"
#### 
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/rx_axi/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/rx_axi/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/rx_axi/s_axi"
####     ad_connect "${ip_name}/rx_axi/irq" "${ip_name}/irq"
#### 
####     # JESD204 processing
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     create_bd_pin -dir I -type clk "${ip_name}/device_clk"
####     if {$link_mode == 1} {create_bd_pin -dir O -from [expr $num_links - 1] -to 0 "${ip_name}/sync"}
####     create_bd_pin -dir I "${ip_name}/sysref"
####     if {$link_mode == 1} {create_bd_pin -dir O "${ip_name}/phy_en_char_align"}
#### #    create_bd_pin -dir I "${ip_name}/phy_ready"
####     create_bd_pin -dir O -from 3 -to 0 "${ip_name}/rx_eof"
####     create_bd_pin -dir O -from 3 -to 0 "${ip_name}/rx_sof"
#### 
#### #    create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/rx_data"
####     create_bd_pin -dir O "${ip_name}/rx_data_tvalid"
####     create_bd_pin -dir O -from [expr $num_lanes * 32 - 1] -to 0 "${ip_name}/rx_data_tdata"
#### 
####     ad_connect "${ip_name}/link_clk" "${ip_name}/rx_axi/core_clk"
####     ad_connect "${ip_name}/link_clk" "${ip_name}/rx/clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/rx_axi/device_clk"
####     ad_connect "${ip_name}/device_clk" "${ip_name}/rx/device_clk"
####     if {$link_mode == 1} {ad_connect "${ip_name}/rx/sync" "${ip_name}/sync"}
####     ad_connect "${ip_name}/sysref" "${ip_name}/rx/sysref"
#### #    ad_connect "${ip_name}/phy_ready" "${ip_name}/rx/phy_ready"
####     if {$link_mode == 1} {ad_connect "${ip_name}/rx/phy_en_char_align" "${ip_name}/phy_en_char_align"}
####     ad_connect "${ip_name}/rx/rx_data" "${ip_name}/rx_data_tdata"
####     ad_connect "${ip_name}/rx/rx_valid" "${ip_name}/rx_data_tvalid"
####     ad_connect "${ip_name}/rx/rx_eof" "${ip_name}/rx_eof"
####     ad_connect "${ip_name}/rx/rx_sof" "${ip_name}/rx_sof"
#### 
####     for {set i 0} {$i < $num_lanes} {incr i} {
####       create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_jesd204:jesd204_rx_bus_rtl:1.0 "${ip_name}/rx_phy${i}"
####       ad_connect "${ip_name}/rx/rx_phy${i}" "${ip_name}/rx_phy${i}"
####     }
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_tpl_jesd204_tx_create {ip_name num_of_lanes num_of_converters samples_per_frame sample_width {link_layer_bytes_per_beat 4} {dma_sample_width 16}} {
#### 
#### 
####   if {$num_of_lanes < 1 || $num_of_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
####   # F = (M * N * S) / (L * 8)
####   set bytes_per_frame [expr ($num_of_converters * $sample_width * $samples_per_frame) / ($num_of_lanes * 8)];
####   # one beat per lane must accommodate at least one frame
####   set tpl_bytes_per_beat [expr max($bytes_per_frame, $link_layer_bytes_per_beat)]
#### 
####   # datapath width = L * 8 * TPL_BYTES_PER_BEAT / (M * N)
####   set samples_per_channel [expr ($num_of_lanes * 8 * $tpl_bytes_per_beat) / ($num_of_converters * $sample_width)];
#### 
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
#### 
####     # Interface to link layer
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/link"
#### 
####     # Interface to application layer
####     create_bd_pin -dir I "${ip_name}/dac_dunf"
####     for {set i 0} {$i < $num_of_converters} {incr i} {
####       create_bd_pin -dir O "${ip_name}/dac_enable_${i}"
####       create_bd_pin -dir O "${ip_name}/dac_valid_${i}"
####       create_bd_pin -dir I "${ip_name}/dac_data_${i}"
####     }
#### 
####     # Generic TPL core
####     ad_ip_instance ad_ip_jesd204_tpl_dac "${ip_name}/dac_tpl_core" [list \
####       NUM_LANES $num_of_lanes \
####       NUM_CHANNELS $num_of_converters \
####       SAMPLES_PER_FRAME $samples_per_frame \
####       CONVERTER_RESOLUTION $sample_width \
####       BITS_PER_SAMPLE $sample_width  \
####       OCTETS_PER_BEAT $tpl_bytes_per_beat \
####       DMA_BITS_PER_SAMPLE $dma_sample_width
####      ]
#### 
####     if {$num_of_converters > 1} {
####       # Concatenation and slicer cores
####       # xconcat limited to 32 input ports
####       for {set i 0} {$i < $num_of_converters} {incr i 32} {
####       ad_ip_instance xlconcat "${ip_name}/data_concat[expr $i/32]" [list \
####         NUM_PORTS [expr min(32,$num_of_converters-$i)] \
####         ]
####       }
####       # main concat
####       if {$num_of_converters > 32} {
####        ad_ip_instance xlconcat "${ip_name}/data_concat" [list \
####         NUM_PORTS [expr int(ceil(double($num_of_converters)/32))] \
####         ]
####       }
#### 
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_ip_instance xlslice "${ip_name}/enable_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####         ad_ip_instance xlslice "${ip_name}/valid_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####       }
####     }
####     # Create connections
####     # TPL configuration interface
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/dac_tpl_core/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/dac_tpl_core/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/dac_tpl_core/s_axi"
#### 
####     # TPL - link layer
####     ad_connect ${ip_name}/dac_tpl_core/link_clk ${ip_name}/link_clk
####     ad_connect ${ip_name}/dac_tpl_core/link ${ip_name}/link
#### 
####     # TPL - app layer
####     if {$num_of_converters > 1} {
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_connect ${ip_name}/dac_tpl_core/enable ${ip_name}/enable_slice_$i/Din
####         ad_connect ${ip_name}/dac_tpl_core/dac_valid ${ip_name}/valid_slice_$i/Din
#### 
####         ad_connect ${ip_name}/enable_slice_$i/Dout ${ip_name}/dac_enable_$i
####         ad_connect ${ip_name}/valid_slice_$i/Dout ${ip_name}/dac_valid_$i
####         ad_connect ${ip_name}/dac_data_$i ${ip_name}/data_concat[expr $i/32]/In[expr $i%32]
#### 
####       }
####       if {$num_of_converters > 32} {
####         # wire all concatenators together
####         for {set i 0} {$i < $num_of_converters} {incr i 32} {
####           ad_connect ${ip_name}/data_concat[expr $i/32]/dout ${ip_name}/data_concat/In[expr $i/32]
####         }
####         ad_connect ${ip_name}/data_concat/dout ${ip_name}/dac_tpl_core/dac_ddata
####       } else {
####         ad_connect ${ip_name}/data_concat0/dout ${ip_name}/dac_tpl_core/dac_ddata
####       }
####     } else {
####       ad_connect ${ip_name}/dac_data_0 ${ip_name}/dac_tpl_core/dac_ddata
####       ad_connect ${ip_name}/dac_tpl_core/enable ${ip_name}/dac_enable_0
####       ad_connect ${ip_name}/dac_tpl_core/dac_valid ${ip_name}/dac_valid_0
####     }
####     ad_connect ${ip_name}/dac_dunf ${ip_name}/dac_tpl_core/dac_dunf
#### 
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_tpl_jesd204_rx_create {ip_name num_of_lanes num_of_converters samples_per_frame sample_width {link_layer_bytes_per_beat 4} {dma_sample_width 16}} {
#### 
#### 
####   if {$num_of_lanes < 1 || $num_of_lanes > 32} {
####     return -code 1 "ERROR: Invalid number of JESD204B lanes. (Supported range 1-32)"
####   }
####   # F = (M * N * S) / (L * 8)
####   set bytes_per_frame [expr ($num_of_converters * $sample_width * $samples_per_frame) / ($num_of_lanes * 8)];
####   # one beat per lane must accommodate at least one frame
####   set tpl_bytes_per_beat [expr max($bytes_per_frame, $link_layer_bytes_per_beat)]
#### 
####   # datapath width = L * 8 * TPL_BYTES_PER_BEAT / (M * N)
####   set samples_per_channel [expr ($num_of_lanes * 8 * $tpl_bytes_per_beat) / ($num_of_converters * $sample_width)];
#### 
#### 
####   startgroup
#### 
####   set result [catch {
#### 
####     create_bd_cell -type hier $ip_name
#### 
####     # Control interface
####     create_bd_pin -dir I -type clk "${ip_name}/s_axi_aclk"
####     create_bd_pin -dir I -type rst "${ip_name}/s_axi_aresetn"
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 "${ip_name}/s_axi"
#### 
####     # Interface to link layer
####     create_bd_pin -dir I -type clk "${ip_name}/link_clk"
####     #create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 "${ip_name}/link"
####     create_bd_pin -dir I "${ip_name}/link_sof"
####     create_bd_pin -dir I "${ip_name}/link_valid"
####     create_bd_pin -dir I "${ip_name}/link_data"
#### 
####     # Interface to application layer
####     create_bd_pin -dir I "${ip_name}/adc_dovf"
####     for {set i 0} {$i < $num_of_converters} {incr i} {
####       create_bd_pin -dir O "${ip_name}/adc_enable_${i}"
####       create_bd_pin -dir O "${ip_name}/adc_valid_${i}"
####       create_bd_pin -dir O "${ip_name}/adc_data_${i}"
####     }
#### 
####     # Generic TPL core
####     ad_ip_instance ad_ip_jesd204_tpl_adc "${ip_name}/adc_tpl_core" [list \
####       NUM_LANES $num_of_lanes \
####       NUM_CHANNELS $num_of_converters \
####       SAMPLES_PER_FRAME $samples_per_frame \
####       CONVERTER_RESOLUTION $sample_width \
####       BITS_PER_SAMPLE $sample_width  \
####       OCTETS_PER_BEAT $tpl_bytes_per_beat \
####       DMA_BITS_PER_SAMPLE $dma_sample_width
####      ]
#### 
####     if {$num_of_converters > 1} {
####       # Slicer cores
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_ip_instance xlslice ${ip_name}/data_slice_$i [list \
####           DIN_WIDTH [expr $dma_sample_width*$samples_per_channel*$num_of_converters] \
####           DIN_FROM [expr $dma_sample_width*$samples_per_channel*($i+1)-1] \
####           DIN_TO [expr $dma_sample_width*$samples_per_channel*$i] \
####         ]
#### 
####         ad_ip_instance xlslice "${ip_name}/enable_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####         ad_ip_instance xlslice "${ip_name}/valid_slice_${i}" [list \
####           DIN_WIDTH $num_of_converters \
####           DIN_FROM $i \
####           DIN_TO $i \
####         ]
####       }
####     }
#### 
####     # Create connections
####     # TPL configuration interface
####     ad_connect "${ip_name}/s_axi_aclk" "${ip_name}/adc_tpl_core/s_axi_aclk"
####     ad_connect "${ip_name}/s_axi_aresetn" "${ip_name}/adc_tpl_core/s_axi_aresetn"
####     ad_connect "${ip_name}/s_axi" "${ip_name}/adc_tpl_core/s_axi"
#### 
####     # TPL - link layer
####     ad_connect ${ip_name}/adc_tpl_core/link_clk ${ip_name}/link_clk
####     #ad_connect ${ip_name}/adc_tpl_core/link ${ip_name}/link
####     ad_connect ${ip_name}/adc_tpl_core/link_sof ${ip_name}/link_sof
####     ad_connect ${ip_name}/adc_tpl_core/link_data ${ip_name}/link_data
####     ad_connect ${ip_name}/adc_tpl_core/link_valid ${ip_name}/link_valid
#### 
####     # TPL - app layer
####     if {$num_of_converters > 1} {
####       for {set i 0} {$i < $num_of_converters} {incr i} {
####         ad_connect ${ip_name}/adc_tpl_core/adc_data ${ip_name}/data_slice_$i/Din
####         ad_connect ${ip_name}/adc_tpl_core/enable ${ip_name}/enable_slice_$i/Din
####         ad_connect ${ip_name}/adc_tpl_core/adc_valid ${ip_name}/valid_slice_$i/Din
#### 
####         ad_connect ${ip_name}/data_slice_$i/Dout ${ip_name}/adc_data_$i
####         ad_connect ${ip_name}/enable_slice_$i/Dout ${ip_name}/adc_enable_$i
####         ad_connect ${ip_name}/valid_slice_$i/Dout ${ip_name}/adc_valid_$i
#### 
####       }
####     } else {
####       ad_connect ${ip_name}/adc_tpl_core/adc_data ${ip_name}/adc_data_0
####       ad_connect ${ip_name}/adc_tpl_core/enable ${ip_name}/adc_enable_0
####       ad_connect ${ip_name}/adc_tpl_core/adc_valid ${ip_name}/adc_valid_0
####     }
####     ad_connect ${ip_name}/adc_dovf ${ip_name}/adc_tpl_core/adc_dovf
#### 
####   } resulttext resultoptions]
#### 
####   dict unset resultoptions -level
#### 
####   endgroup
#### 
####   if {$result != 0} {
####     undo -quiet
####   }
#### 
####   return -options $resultoptions $resulttext
#### }
#### proc adi_jesd204_calc_tpl_width {link_datapath_width jesd_l jesd_m jesd_s jesd_np {tpl_datapath_width {}}} {
#### 
####   set jesd_f [expr ($jesd_m*$jesd_s*$jesd_np)/(8*$jesd_l)]
#### 
####   if {$tpl_datapath_width != ""} {
####     set tpl_div [expr $tpl_datapath_width / $jesd_f]
####     set tpl_mod [expr $tpl_datapath_width % $jesd_f]
#### 
####     if {$tpl_div < 1 || $tpl_mod != 0 || (($tpl_div > 1) && ([expr $tpl_div % 2] != 0))} {
####       return -code 1 "ERROR: Invalid custom TPL width. Must be a power of 2 multiple of F"
####     } else {
####       return $tpl_datapath_width
####     }
#### 
####   # For F=3,6,12 get first pow 2 multiple of F greater than link_datapath_width
####   } elseif {$jesd_f % 3 == 0} {
####     set np12_datapath_width $jesd_f
####     while {$np12_datapath_width < $link_datapath_width} {
####         set np12_datapath_width [expr 2*$np12_datapath_width]
####     }
####     return $np12_datapath_width
####   } else {
####     return [expr max($jesd_f,$link_datapath_width)]
####   }
#### 
#### }
### set adc_data_offload_name mxfe_rx_data_offload
### set adc_data_width [expr $RX_DMA_SAMPLE_WIDTH*$RX_NUM_OF_CONVERTERS*$RX_SAMPLES_PER_CHANNEL]
### set adc_dma_data_width $adc_data_width
### set adc_fifo_address_width [expr int(ceil(log(($adc_fifo_samples_per_converter*$RX_NUM_OF_CONVERTERS) / ($adc_data_width/$RX_DMA_SAMPLE_WIDTH))/log(2)))]
### set dac_data_offload_name mxfe_tx_data_offload
### set dac_data_width [expr $TX_DMA_SAMPLE_WIDTH*$TX_NUM_OF_CONVERTERS*$TX_SAMPLES_PER_CHANNEL]
### set dac_dma_data_width $dac_data_width
### set dac_fifo_address_width [expr int(ceil(log(($dac_fifo_samples_per_converter*$TX_NUM_OF_CONVERTERS) / ($dac_data_width/$TX_DMA_SAMPLE_WIDTH))/log(2)))]
### if {$ADI_PHY_SEL == 1} {
###   ad_ip_instance util_adxcvr util_mxfe_xcvr
###   ad_ip_parameter util_mxfe_xcvr CONFIG.CPLL_FBDIV_4_5 5
###   switch $INTF_CFG {
###     "RXTX" {
###       # Rx & Tx
###       ad_ip_parameter util_mxfe_xcvr CONFIG.TX_NUM_OF_LANES $TX_NUM_OF_LANES
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_NUM_OF_LANES $RX_NUM_OF_LANES
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_OUT_DIV 1
###       ad_ip_parameter util_mxfe_xcvr CONFIG.LINK_MODE $ENCODER_SEL
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_LANE_RATE $RX_LANE_RATE
###       ad_ip_parameter util_mxfe_xcvr CONFIG.TX_LANE_RATE $TX_LANE_RATE
###     }
###     "RX" {
###       # Rx only
###       ad_ip_parameter util_mxfe_xcvr CONFIG.TX_NUM_OF_LANES 0
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_NUM_OF_LANES $RX_NUM_OF_LANES
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_OUT_DIV 1
###       ad_ip_parameter util_mxfe_xcvr CONFIG.LINK_MODE $ENCODER_SEL
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_LANE_RATE $RX_LANE_RATE
###       ad_ip_parameter util_mxfe_xcvr CONFIG.TX_LANE_RATE 0
###     }
###     "TX" {
###       # Tx only
###       ad_ip_parameter util_mxfe_xcvr CONFIG.TX_NUM_OF_LANES $TX_NUM_OF_LANES
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_NUM_OF_LANES 0
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_OUT_DIV 1
###       ad_ip_parameter util_mxfe_xcvr CONFIG.LINK_MODE $ENCODER_SEL
###       ad_ip_parameter util_mxfe_xcvr CONFIG.RX_LANE_RATE 0
###       ad_ip_parameter util_mxfe_xcvr CONFIG.TX_LANE_RATE $TX_LANE_RATE
###     }
###   }
### } else {
###   source $ad_hdl_dir/projects/ad9081_fmca_ebz/common/versal_transceiver.tcl
### 
###   set REF_CLK_RATE [ expr { [info exists ad_project_params(REF_CLK_RATE)] \
###                             ? $ad_project_params(REF_CLK_RATE) : 375 } ]
### 
###   create_bd_port -dir I gt_reset
### 
###   switch $INTF_CFG {
###     "RXTX" {
###       # Assumption is that number of Tx and Rx lane is the same
###       create_versal_phy jesd204_phy $TX_NUM_OF_LANES $RX_LANE_RATE $TX_LANE_RATE $REF_CLK_RATE $INTF_CFG
###     }
###     "RX" {
###       create_versal_phy jesd204_phy $RX_NUM_OF_LANES $RX_LANE_RATE $TX_LANE_RATE $REF_CLK_RATE $INTF_CFG
###     }
###     "TX" {
###       create_versal_phy jesd204_phy $TX_NUM_OF_LANES $RX_LANE_RATE $TX_LANE_RATE $REF_CLK_RATE $INTF_CFG
###     }
###   }
### }
#### proc create_versal_phy {
####   {ip_name versal_phy}
####   {num_lanes 4}
####   {rx_lane_rate 24.75}
####   {tx_lane_rate 24.75}
####   {ref_clock 375}
####   {intf_cfg RXTX}
#### } {
#### 
#### set num_quads [expr int(round(1.0 * $num_lanes / 4))]
#### set rx_progdiv_clock [format %.3f [expr $rx_lane_rate * 1000 / 66]]
#### set tx_progdiv_clock [format %.3f [expr $tx_lane_rate * 1000 / 66]]
#### 
#### if {$intf_cfg == "RX"} {
####   set gt_direction "SIMPLEX_RX"
####   set no_lanes_property "CONFIG.IP_NO_OF_RX_LANES"
#### } elseif {$intf_cfg == "TX"} {
####   set gt_direction "SIMPLEX_TX"
####   set no_lanes_property "CONFIG.IP_NO_OF_TX_LANES"
#### } else {
####   set gt_direction "DUPLEX"
####   set no_lanes_property "CONFIG.IP_NO_OF_LANES"
#### }
#### 
#### create_bd_cell -type hier ${ip_name}
#### 
#### # Common interface
#### if {$intf_cfg != "TX"} {
####   create_bd_pin -dir O ${ip_name}/rxusrclk_out -type clk
#### }
#### if {$intf_cfg != "RX"} {
####   create_bd_pin -dir O ${ip_name}/txusrclk_out -type clk
#### }
#### create_bd_pin -dir I ${ip_name}/GT_REFCLK -type clk
#### create_bd_pin -dir I ${ip_name}/apb3clk -type clk
#### create_bd_pin -dir I ${ip_name}/gtreset_in
#### 
#### ad_ip_instance gt_bridge_ip ${ip_name}/gt_bridge_ip_0
#### set_property -dict [list \
####   CONFIG.BYPASS_MODE {true} \
####   CONFIG.IP_PRESET {GTY-JESD204_64B66B} \
####   CONFIG.IP_GT_DIRECTION ${gt_direction} \
####   ${no_lanes_property} ${num_lanes} \
####   CONFIG.IP_LR0_SETTINGS [list \
####      PRESET GTY-JESD204_64B66B \
####      INTERNAL_PRESET JESD204_64B66B \
####      GT_TYPE GTY \
####      GT_DIRECTION $gt_direction \
####      TX_LINE_RATE $tx_lane_rate \
####      TX_PLL_TYPE LCPLL \
####      TX_REFCLK_FREQUENCY $ref_clock \
####      TX_ACTUAL_REFCLK_FREQUENCY $ref_clock \
####      TX_FRACN_ENABLED true \
####      TX_FRACN_NUMERATOR 0 \
####      TX_REFCLK_SOURCE R0 \
####      TX_DATA_ENCODING 64B66B_ASYNC \
####      TX_USER_DATA_WIDTH 64 \
####      TX_INT_DATA_WIDTH 64 \
####      TX_BUFFER_MODE 1 \
####      TX_BUFFER_BYPASS_MODE Fast_Sync \
####      TX_PIPM_ENABLE false \
####      TX_OUTCLK_SOURCE TXPROGDIVCLK \
####      TXPROGDIV_FREQ_ENABLE true \
####      TXPROGDIV_FREQ_SOURCE LCPLL \
####      TXPROGDIV_FREQ_VAL $tx_progdiv_clock \
####      TX_DIFF_SWING_EMPH_MODE CUSTOM \
####      TX_64B66B_SCRAMBLER false \
####      TX_64B66B_ENCODER false \
####      TX_64B66B_CRC false \
####      TX_RATE_GROUP A \
####      RX_LINE_RATE $rx_lane_rate \
####      RX_PLL_TYPE LCPLL \
####      RX_REFCLK_FREQUENCY $ref_clock \
####      RX_ACTUAL_REFCLK_FREQUENCY $ref_clock \
####      RX_FRACN_ENABLED true \
####      RX_FRACN_NUMERATOR 0 \
####      RX_REFCLK_SOURCE R0 \
####      RX_DATA_DECODING 64B66B_ASYNC \
####      RX_USER_DATA_WIDTH 64 \
####      RX_INT_DATA_WIDTH 64 \
####      RX_BUFFER_MODE 1 \
####      RX_OUTCLK_SOURCE RXPROGDIVCLK \
####      RXPROGDIV_FREQ_ENABLE true \
####      RXPROGDIV_FREQ_SOURCE LCPLL \
####      RXPROGDIV_FREQ_VAL $rx_progdiv_clock \
####      INS_LOSS_NYQ 12 \
####      RX_EQ_MODE LPM \
####      RX_COUPLING AC \
####      RX_TERMINATION PROGRAMMABLE \
####      RX_RATE_GROUP A \
####      RX_TERMINATION_PROG_VALUE 800 \
####      RX_PPM_OFFSET 0 \
####      RX_64B66B_DESCRAMBLER false \
####      RX_64B66B_DECODER false \
####      RX_64B66B_CRC false \
####      OOB_ENABLE false \
####      RX_COMMA_ALIGN_WORD 1 \
####      RX_COMMA_SHOW_REALIGN_ENABLE true \
####      PCIE_ENABLE false \
####      RX_COMMA_P_ENABLE false \
####      RX_COMMA_M_ENABLE false \
####      RX_COMMA_DOUBLE_ENABLE false \
####      RX_COMMA_P_VAL 0101111100 \
####      RX_COMMA_M_VAL 1010000011 \
####      RX_COMMA_MASK 0000000000 \
####      RX_SLIDE_MODE OFF \
####      RX_SSC_PPM 0 \
####      RX_CB_NUM_SEQ 0 \
####      RX_CB_LEN_SEQ 1 \
####      RX_CB_MAX_SKEW 1 \
####      RX_CB_MAX_LEVEL 1 \
####      RX_CB_MASK_0_0 false \
####      RX_CB_VAL_0_0 00000000 \
####      RX_CB_K_0_0 false \
####      RX_CB_DISP_0_0 false \
####      RX_CB_MASK_0_1 false \
####      RX_CB_VAL_0_1 00000000 \
####      RX_CB_K_0_1 false \
####      RX_CB_DISP_0_1 false \
####      RX_CB_MASK_0_2 false \
####      RX_CB_VAL_0_2 00000000 \
####      RX_CB_K_0_2 false \
####      RX_CB_DISP_0_2 false \
####      RX_CB_MASK_0_3 false \
####      RX_CB_VAL_0_3 00000000 \
####      RX_CB_K_0_3 false \
####      RX_CB_DISP_0_3 false \
####      RX_CB_MASK_1_0 false \
####      RX_CB_VAL_1_0 00000000 \
####      RX_CB_K_1_0 false \
####      RX_CB_DISP_1_0 false \
####      RX_CB_MASK_1_1 false \
####      RX_CB_VAL_1_1 00000000 \
####      RX_CB_K_1_1 false \
####      RX_CB_DISP_1_1 false \
####      RX_CB_MASK_1_2 false \
####      RX_CB_VAL_1_2 00000000 \
####      RX_CB_K_1_2 false \
####      RX_CB_DISP_1_2 false \
####      RX_CB_MASK_1_3 false \
####      RX_CB_VAL_1_3 00000000 \
####      RX_CB_K_1_3 false \
####      RX_CB_DISP_1_3 false \
####      RX_CC_NUM_SEQ 0 \
####      RX_CC_LEN_SEQ 1 \
####      RX_CC_PERIODICITY 5000 \
####      RX_CC_KEEP_IDLE DISABLE \
####      RX_CC_PRECEDENCE ENABLE \
####      RX_CC_REPEAT_WAIT 0 \
####      RX_CC_VAL 00000000000000000000000000000000000000000000000000000000000000000000000000000000 \
####      RX_CC_MASK_0_0 false \
####      RX_CC_VAL_0_0 00000000 \
####      RX_CC_K_0_0 false \
####      RX_CC_DISP_0_0 false \
####      RX_CC_MASK_0_1 false \
####      RX_CC_VAL_0_1 00000000 \
####      RX_CC_K_0_1 false \
####      RX_CC_DISP_0_1 false \
####      RX_CC_MASK_0_2 false \
####      RX_CC_VAL_0_2 00000000 \
####      RX_CC_K_0_2 false \
####      RX_CC_DISP_0_2 false \
####      RX_CC_MASK_0_3 false \
####      RX_CC_VAL_0_3 00000000 \
####      RX_CC_K_0_3 false \
####      RX_CC_DISP_0_3 false \
####      RX_CC_MASK_1_0 false \
####      RX_CC_VAL_1_0 00000000 \
####      RX_CC_K_1_0 false \
####      RX_CC_DISP_1_0 false \
####      RX_CC_MASK_1_1 false \
####      RX_CC_VAL_1_1 00000000 \
####      RX_CC_K_1_1 false \
####      RX_CC_DISP_1_1 false \
####      RX_CC_MASK_1_2 false \
####      RX_CC_VAL_1_2 00000000 \
####      RX_CC_K_1_2 false \
####      RX_CC_DISP_1_2 false \
####      RX_CC_MASK_1_3 false \
####      RX_CC_VAL_1_3 00000000 \
####      RX_CC_K_1_3 false \
####      RX_CC_DISP_1_3 false \
####      PCIE_USERCLK2_FREQ 250 \
####      PCIE_USERCLK_FREQ 250 \
####      RX_JTOL_FC 10 \
####      RX_JTOL_LF_SLOPE -20 \
####      RX_BUFFER_BYPASS_MODE Fast_Sync \
####      RX_BUFFER_BYPASS_MODE_LANE MULTI \
####      RX_BUFFER_RESET_ON_CB_CHANGE ENABLE \
####      RX_BUFFER_RESET_ON_COMMAALIGN DISABLE \
####      RX_BUFFER_RESET_ON_RATE_CHANGE ENABLE \
####      TX_BUFFER_RESET_ON_RATE_CHANGE ENABLE \
####      RESET_SEQUENCE_INTERVAL 0 \
####      RX_COMMA_PRESET NONE \
####      RX_COMMA_VALID_ONLY 0 \
####      ] \
#### ] [get_bd_cells ${ip_name}/gt_bridge_ip_0]
#### 
#### for {set j 0} {$j < $num_quads} {incr j} {
####   ad_ip_instance gt_quad_base ${ip_name}/gt_quad_base_${j}
####   set_property -dict [list \
####     CONFIG.PROT0_GT_DIRECTION ${gt_direction} \
####   ] [get_bd_cells ${ip_name}/gt_quad_base_${j}]
#### 
####   if {$intf_cfg != "TX"} {
####     ad_ip_instance bufg_gt ${ip_name}/bufg_gt_rx_${j}
####     ad_connect ${ip_name}/gt_quad_base_${j}/ch0_rxoutclk ${ip_name}/bufg_gt_rx_${j}/outclk
####   }
####   if {$intf_cfg != "RX"} {
####     ad_ip_instance bufg_gt ${ip_name}/bufg_gt_tx_${j}
####     ad_connect ${ip_name}/gt_quad_base_${j}/ch0_txoutclk ${ip_name}/bufg_gt_tx_${j}/outclk
####   }
#### 
####   create_bd_intf_pin -mode Master -vlnv	xilinx.com:interface:gt_rtl:1.0 ${ip_name}/GT_Serial_${j}
####   ad_connect ${ip_name}/gt_quad_base_${j}/GT_Serial ${ip_name}/GT_Serial_${j}
#### }
#### 
#### if {$intf_cfg != "TX"} {
####   ad_connect ${ip_name}/bufg_gt_rx_0/usrclk ${ip_name}/gt_bridge_ip_0/gt_rxusrclk
####   ad_connect ${ip_name}/gt_bridge_ip_0/rxusrclk_out ${ip_name}/rxusrclk_out
#### 
####   for {set j 0} {$j < $num_lanes} {incr j} {
####     set quad_index [expr int($j / 4)]
####     set rx_index [expr $j % 4]
#### 
####     ad_ip_instance jesd204_versal_gt_adapter_rx ${ip_name}/rx_adapt_${j}
####     ad_connect ${ip_name}/rx_adapt_${j}/RX_GT_IP_Interface ${ip_name}/gt_bridge_ip_0/GT_RX${j}_EXT
####     ad_connect ${ip_name}/gt_bridge_ip_0/GT_RX${j} ${ip_name}/gt_quad_base_${quad_index}/RX${rx_index}_GT_IP_Interface
#### 
####     create_bd_intf_pin -mode Master -vlnv xilinx.com:display_jesd204:jesd204_rx_bus_rtl:1.0 ${ip_name}/rx${j}
####     ad_connect ${ip_name}/rx${j} ${ip_name}/rx_adapt_${j}/RX
#### 
####     ad_connect ${ip_name}/bufg_gt_rx_${quad_index}/usrclk ${ip_name}/rx_adapt_${j}/usr_clk
####   }
#### }
#### if {$intf_cfg != "RX"} {
####   ad_connect ${ip_name}/bufg_gt_tx_0/usrclk ${ip_name}/gt_bridge_ip_0/gt_txusrclk
####   ad_connect ${ip_name}/gt_bridge_ip_0/txusrclk_out ${ip_name}/txusrclk_out
#### 
####   for {set j 0} {$j < $num_lanes} {incr j} {
####     set quad_index [expr int($j / 4)]
####     set tx_index [expr $j % 4]
#### 
####     ad_ip_instance jesd204_versal_gt_adapter_tx ${ip_name}/tx_adapt_${j}
####     ad_connect ${ip_name}/tx_adapt_${j}/TX_GT_IP_Interface ${ip_name}/gt_bridge_ip_0/GT_TX${j}_EXT
####     ad_connect ${ip_name}/gt_bridge_ip_0/GT_TX${j} ${ip_name}/gt_quad_base_${quad_index}/TX${tx_index}_GT_IP_Interface
#### 
####     create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_jesd204:jesd204_tx_bus_rtl:1.0 ${ip_name}/tx${j}
####     ad_connect ${ip_name}/tx${j} ${ip_name}/tx_adapt_${j}/TX
#### 
####     ad_connect ${ip_name}/bufg_gt_tx_${quad_index}/usrclk ${ip_name}/tx_adapt_${j}/usr_clk
####   }
#### }
#### 
#### for {set i 0} {$i < $num_quads} {incr i} {
####   for {set j 0} {$j < 4} {incr j} {
####     if {$intf_cfg != "TX"} {
####       ad_connect ${ip_name}/bufg_gt_rx_${i}/usrclk ${ip_name}/gt_quad_base_${i}/ch${j}_rxusrclk
####     }
####     if {$intf_cfg != "RX"} {
####       ad_connect ${ip_name}/bufg_gt_tx_${i}/usrclk ${ip_name}/gt_quad_base_${i}/ch${j}_txusrclk
####     }
####   }
#### }
#### 
#### # Clocks and gtpowergood
#### ad_connect ${ip_name}/apb3clk ${ip_name}/gt_bridge_ip_0/apb3clk
#### 
#### ad_ip_instance xlconcat ${ip_name}/xlconcat_0 [list \
####    NUM_PORTS $num_quads \
####  ]
#### ad_ip_instance util_reduced_logic ${ip_name}/util_reduced_logic_0 [list \
####    C_SIZE $num_quads \
####  ]
#### 
#### for {set j 0} {$j < $num_quads} {incr j} {
####   ad_connect ${ip_name}/xlconcat_0/In${j} ${ip_name}/gt_quad_base_${j}/gtpowergood
####   ad_connect ${ip_name}/apb3clk ${ip_name}/gt_quad_base_${j}/apb3clk
####   ad_connect ${ip_name}/GT_REFCLK ${ip_name}/gt_quad_base_${j}/GT_REFCLK0
#### }
#### 
#### ad_connect ${ip_name}/xlconcat_0/dout ${ip_name}/util_reduced_logic_0/Op1
#### ad_connect ${ip_name}/util_reduced_logic_0/Res ${ip_name}/gt_bridge_ip_0/gtpowergood
#### 
#### # Reset
#### ad_connect ${ip_name}/gtreset_in ${ip_name}/gt_bridge_ip_0/gtreset_in
#### 
#### for {set j 0} {$j < ${num_lanes}} {incr j} {
####   set quad_index [expr int($j / 4)]
####   set ch_index [expr $j % 4]
####   ad_connect ${ip_name}/gt_bridge_ip_0/gt_ilo_reset ${ip_name}/gt_quad_base_${quad_index}/ch${ch_index}_iloreset
#### }
#### ad_ip_instance xlconcat ${ip_name}/xlconcat_iloresetdone [list \
####     NUM_PORTS ${num_lanes} \
####  ]
#### ad_ip_instance util_reduced_logic ${ip_name}/util_reduced_logic_iloresetdone [list \
####     C_SIZE ${num_lanes} \
####  ]
#### for {set j 0} {$j < ${num_lanes}} {incr j} {
####   set quad_index [expr int($j / 4)]
####   set ch_index [expr $j % 4]
####   ad_connect ${ip_name}/xlconcat_iloresetdone/In${j} ${ip_name}/gt_quad_base_${quad_index}/ch${ch_index}_iloresetdone
#### }
#### ad_connect ${ip_name}/xlconcat_iloresetdone/dout ${ip_name}/util_reduced_logic_iloresetdone/Op1
#### ad_connect ${ip_name}/util_reduced_logic_iloresetdone/Res ${ip_name}/gt_bridge_ip_0/ilo_resetdone
#### 
#### for {set j 0} {$j < ${num_quads}} {incr j} {
####   ad_connect ${ip_name}/gt_bridge_ip_0/gt_pll_reset ${ip_name}/gt_quad_base_${j}/hsclk0_lcpllreset
####   ad_connect ${ip_name}/gt_bridge_ip_0/gt_pll_reset ${ip_name}/gt_quad_base_${j}/hsclk1_lcpllreset
#### }
#### 
#### set num_cplllocks [expr 2 * ${num_quads}]
#### ad_ip_instance xlconcat ${ip_name}/xlconcat_cplllock [list \
####     NUM_PORTS ${num_cplllocks} \
####  ]
#### ad_ip_instance util_reduced_logic ${ip_name}/util_reduced_logic_cplllock [list \
####     C_SIZE ${num_cplllocks} \
####  ]
#### 
#### for {set j 0} {$j < ${num_quads}} {incr j} {
####   set in_index_0 [expr $j * 2 + 0]
####   set in_index_1 [expr $j * 2 + 1]
####   ad_connect ${ip_name}/xlconcat_cplllock/In${in_index_0} ${ip_name}/gt_quad_base_${j}/hsclk0_lcplllock
####   ad_connect ${ip_name}/xlconcat_cplllock/In${in_index_1} ${ip_name}/gt_quad_base_${j}/hsclk1_lcplllock
#### }
#### 
#### ad_connect ${ip_name}/xlconcat_cplllock/dout ${ip_name}/util_reduced_logic_cplllock/Op1
#### ad_connect ${ip_name}/util_reduced_logic_cplllock/Res ${ip_name}/gt_bridge_ip_0/gt_lcpll_lock
#### 
#### ad_ip_instance xlconcat ${ip_name}/xlconcat_ch [list \
####    NUM_PORTS ${num_lanes} \
####  ]
#### for {set j 0} {$j < ${num_lanes}} {incr j} {
####   set quad_index [expr int($j / 4)]
####   set ch_index [expr $j % 4]
####   ad_ip_instance xlslice ${ip_name}/slice_ch${j} [list \
####     DIN_WIDTH 16 \
####   ]
####   ad_connect ${ip_name}/slice_ch${j}/Din ${ip_name}/gt_quad_base_${quad_index}/ch${ch_index}_pcsrsvdout
#### 
####   ad_connect ${ip_name}/slice_ch${j}/Dout ${ip_name}/xlconcat_ch/In${j}
#### }
#### ad_connect ${ip_name}/xlconcat_ch/dout ${ip_name}/gt_bridge_ip_0/ch_phystatus_in
#### 
#### }
connect_bd_net /jesd204_phy/gt_quad_base_0/ch0_rxoutclk /jesd204_phy/bufg_gt_rx_0/outclk
connect_bd_net /jesd204_phy/gt_quad_base_0/ch0_txoutclk /jesd204_phy/bufg_gt_tx_0/outclk
connect_bd_intf_net /jesd204_phy/gt_quad_base_0/GT_Serial /jesd204_phy/GT_Serial_0
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/gt_bridge_ip_0/gt_rxusrclk
connect_bd_net /jesd204_phy/gt_bridge_ip_0/rxusrclk_out /jesd204_phy/rxusrclk_out
connect_bd_intf_net /jesd204_phy/rx_adapt_0/RX_GT_IP_Interface /jesd204_phy/gt_bridge_ip_0/GT_RX0_EXT
connect_bd_intf_net /jesd204_phy/gt_bridge_ip_0/GT_RX0 /jesd204_phy/gt_quad_base_0/RX0_GT_IP_Interface
connect_bd_intf_net /jesd204_phy/rx0 /jesd204_phy/rx_adapt_0/RX
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/rx_adapt_0/usr_clk
connect_bd_intf_net /jesd204_phy/rx_adapt_1/RX_GT_IP_Interface /jesd204_phy/gt_bridge_ip_0/GT_RX1_EXT
connect_bd_intf_net /jesd204_phy/gt_bridge_ip_0/GT_RX1 /jesd204_phy/gt_quad_base_0/RX1_GT_IP_Interface
connect_bd_intf_net /jesd204_phy/rx1 /jesd204_phy/rx_adapt_1/RX
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/rx_adapt_1/usr_clk
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/gt_bridge_ip_0/gt_txusrclk
connect_bd_net /jesd204_phy/gt_bridge_ip_0/txusrclk_out /jesd204_phy/txusrclk_out
connect_bd_intf_net /jesd204_phy/tx_adapt_0/TX_GT_IP_Interface /jesd204_phy/gt_bridge_ip_0/GT_TX0_EXT
connect_bd_intf_net /jesd204_phy/gt_bridge_ip_0/GT_TX0 /jesd204_phy/gt_quad_base_0/TX0_GT_IP_Interface
connect_bd_intf_net /jesd204_phy/tx0 /jesd204_phy/tx_adapt_0/TX
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/tx_adapt_0/usr_clk
connect_bd_intf_net /jesd204_phy/tx_adapt_1/TX_GT_IP_Interface /jesd204_phy/gt_bridge_ip_0/GT_TX1_EXT
connect_bd_intf_net /jesd204_phy/gt_bridge_ip_0/GT_TX1 /jesd204_phy/gt_quad_base_0/TX1_GT_IP_Interface
connect_bd_intf_net /jesd204_phy/tx1 /jesd204_phy/tx_adapt_1/TX
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/tx_adapt_1/usr_clk
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/gt_quad_base_0/ch0_rxusrclk
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/gt_quad_base_0/ch0_txusrclk
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/gt_quad_base_0/ch1_rxusrclk
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/gt_quad_base_0/ch1_txusrclk
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/gt_quad_base_0/ch2_rxusrclk
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/gt_quad_base_0/ch2_txusrclk
connect_bd_net /jesd204_phy/bufg_gt_rx_0/usrclk /jesd204_phy/gt_quad_base_0/ch3_rxusrclk
connect_bd_net /jesd204_phy/bufg_gt_tx_0/usrclk /jesd204_phy/gt_quad_base_0/ch3_txusrclk
connect_bd_net /jesd204_phy/apb3clk /jesd204_phy/gt_bridge_ip_0/apb3clk
connect_bd_net /jesd204_phy/xlconcat_0/In0 /jesd204_phy/gt_quad_base_0/gtpowergood
connect_bd_net /jesd204_phy/apb3clk /jesd204_phy/gt_quad_base_0/apb3clk
connect_bd_net /jesd204_phy/GT_REFCLK /jesd204_phy/gt_quad_base_0/GT_REFCLK0
connect_bd_net /jesd204_phy/xlconcat_0/dout /jesd204_phy/util_reduced_logic_0/Op1
connect_bd_net /jesd204_phy/util_reduced_logic_0/Res /jesd204_phy/gt_bridge_ip_0/gtpowergood
connect_bd_net /jesd204_phy/gtreset_in /jesd204_phy/gt_bridge_ip_0/gtreset_in
connect_bd_net /jesd204_phy/gt_bridge_ip_0/gt_ilo_reset /jesd204_phy/gt_quad_base_0/ch0_iloreset
connect_bd_net /jesd204_phy/gt_bridge_ip_0/gt_ilo_reset /jesd204_phy/gt_quad_base_0/ch1_iloreset
WARNING: [BD 41-1753] The name 'util_reduced_logic_iloresetdone' you have specified is long. The Windows OS has path length limitations. It is recommended you use shorter names(less than 25 characters) to reduce the likelihood of issues when/if running on windows OS.
connect_bd_net /jesd204_phy/xlconcat_iloresetdone/In0 /jesd204_phy/gt_quad_base_0/ch0_iloresetdone
connect_bd_net /jesd204_phy/xlconcat_iloresetdone/In1 /jesd204_phy/gt_quad_base_0/ch1_iloresetdone
connect_bd_net /jesd204_phy/xlconcat_iloresetdone/dout /jesd204_phy/util_reduced_logic_iloresetdone/Op1
connect_bd_net /jesd204_phy/util_reduced_logic_iloresetdone/Res /jesd204_phy/gt_bridge_ip_0/ilo_resetdone
connect_bd_net /jesd204_phy/gt_bridge_ip_0/gt_pll_reset /jesd204_phy/gt_quad_base_0/hsclk0_lcpllreset
connect_bd_net /jesd204_phy/gt_bridge_ip_0/gt_pll_reset /jesd204_phy/gt_quad_base_0/hsclk1_lcpllreset
WARNING: [BD 41-1753] The name 'util_reduced_logic_cplllock' you have specified is long. The Windows OS has path length limitations. It is recommended you use shorter names(less than 25 characters) to reduce the likelihood of issues when/if running on windows OS.
connect_bd_net /jesd204_phy/xlconcat_cplllock/In0 /jesd204_phy/gt_quad_base_0/hsclk0_lcplllock
connect_bd_net /jesd204_phy/xlconcat_cplllock/In1 /jesd204_phy/gt_quad_base_0/hsclk1_lcplllock
connect_bd_net /jesd204_phy/xlconcat_cplllock/dout /jesd204_phy/util_reduced_logic_cplllock/Op1
connect_bd_net /jesd204_phy/util_reduced_logic_cplllock/Res /jesd204_phy/gt_bridge_ip_0/gt_lcpll_lock
WARNING: [BD 41-1306] The connection to interface pin </jesd204_phy/gt_quad_base_0/ch0_pcsrsvdout> is being overridden by the user with net <gt_quad_base_0_ch0_pcsrsvdout>. This pin will not be connected as a part of interface connection <CH0_DEBUG>.
connect_bd_net /jesd204_phy/slice_ch0/Din /jesd204_phy/gt_quad_base_0/ch0_pcsrsvdout
connect_bd_net /jesd204_phy/slice_ch0/Dout /jesd204_phy/xlconcat_ch/In0
WARNING: [BD 41-1306] The connection to interface pin </jesd204_phy/gt_quad_base_0/ch1_pcsrsvdout> is being overridden by the user with net <gt_quad_base_0_ch1_pcsrsvdout>. This pin will not be connected as a part of interface connection <CH1_DEBUG>.
connect_bd_net /jesd204_phy/slice_ch1/Din /jesd204_phy/gt_quad_base_0/ch1_pcsrsvdout
connect_bd_net /jesd204_phy/slice_ch1/Dout /jesd204_phy/xlconcat_ch/In1
connect_bd_net /jesd204_phy/xlconcat_ch/dout /jesd204_phy/gt_bridge_ip_0/ch_phystatus_in
### if {$INTF_CFG != "TX"} {
###   create_bd_port -dir I rx_device_clk
### 
###   if {$ADI_PHY_SEL == 1} {
###     ad_ip_instance axi_adxcvr axi_mxfe_rx_xcvr
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.ID 0
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.LINK_MODE $ENCODER_SEL
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.NUM_OF_LANES $RX_NUM_OF_LANES
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.TX_OR_RX_N 0
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.QPLL_ENABLE 0
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.LPM_OR_DFE_N 1
###     ad_ip_parameter axi_mxfe_rx_xcvr CONFIG.SYS_CLK_SEL 0x3 ; # QPLL0
###   }
###   if {$ADI_PHY_SEL == 0} {
###     # reset generator
###     ad_ip_instance proc_sys_reset rx_device_clk_rstgen
###     ad_connect  rx_device_clk rx_device_clk_rstgen/slowest_sync_clk
###     ad_connect  $sys_cpu_resetn rx_device_clk_rstgen/ext_reset_in
###   }
### 
###   adi_axi_jesd204_rx_create axi_mxfe_rx_jesd $RX_NUM_OF_LANES $RX_NUM_LINKS $ENCODER_SEL
###   ad_ip_parameter axi_mxfe_rx_jesd/rx CONFIG.TPL_DATA_PATH_WIDTH $RX_DATAPATH_WIDTH
### 
###   ad_ip_parameter axi_mxfe_rx_jesd/rx CONFIG.SYSREF_IOB false
###   ad_ip_parameter axi_mxfe_rx_jesd/rx CONFIG.NUM_INPUT_PIPELINE 1
### 
###   adi_tpl_jesd204_rx_create rx_mxfe_tpl_core $RX_NUM_OF_LANES \
###                                             $RX_NUM_OF_CONVERTERS \
###                                             $RX_SAMPLES_PER_FRAME \
###                                             $RX_SAMPLE_WIDTH \
###                                             $RX_DATAPATH_WIDTH \
###                                             $RX_DMA_SAMPLE_WIDTH
### 
###   ad_ip_instance util_cpack2 util_mxfe_cpack [list \
###     NUM_OF_CHANNELS $RX_NUM_OF_CONVERTERS \
###     SAMPLES_PER_CHANNEL $RX_SAMPLES_PER_CHANNEL \
###     SAMPLE_DATA_WIDTH $RX_DMA_SAMPLE_WIDTH \
###   ]
### 
###   set adc_data_offload_size [expr $adc_data_width / 8 * 2**$adc_fifo_address_width]
###   ad_data_offload_create $adc_data_offload_name \
###                         0 \
###                         $adc_do_mem_type \
###                         $adc_data_offload_size \
###                         $adc_data_width \
###                         $adc_data_width \
###                         $do_axi_data_width \
###                         $SHARED_DEVCLK
### 
###   ad_ip_instance axi_dmac axi_mxfe_rx_dma
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.DMA_TYPE_SRC 1
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.DMA_TYPE_DEST 0
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.ID 0
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.AXI_SLICE_SRC 1
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.AXI_SLICE_DEST 1
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.SYNC_TRANSFER_START 0
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.DMA_LENGTH_WIDTH 24
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.DMA_2D_TRANSFER 0
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.MAX_BYTES_PER_BURST 4096
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.CYCLIC 0
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.DMA_DATA_WIDTH_SRC $adc_dma_data_width
###   ad_ip_parameter axi_mxfe_rx_dma CONFIG.DMA_DATA_WIDTH_DEST [expr min(512, $adc_dma_data_width)]
### }
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
connect_bd_net /rx_device_clk /rx_device_clk_rstgen/slowest_sync_clk
connect_bd_net -net /sys_cpu_resetn /rx_device_clk_rstgen/ext_reset_in
connect_bd_net /axi_mxfe_rx_jesd/rx_axi/core_reset /axi_mxfe_rx_jesd/rx/reset
connect_bd_net /axi_mxfe_rx_jesd/rx_axi/device_reset /axi_mxfe_rx_jesd/rx/device_reset
connect_bd_intf_net /axi_mxfe_rx_jesd/rx_axi/rx_cfg /axi_mxfe_rx_jesd/rx/rx_cfg
connect_bd_intf_net /axi_mxfe_rx_jesd/rx/rx_event /axi_mxfe_rx_jesd/rx_axi/rx_event
connect_bd_intf_net /axi_mxfe_rx_jesd/rx/rx_status /axi_mxfe_rx_jesd/rx_axi/rx_status
connect_bd_net /axi_mxfe_rx_jesd/s_axi_aclk /axi_mxfe_rx_jesd/rx_axi/s_axi_aclk
connect_bd_net /axi_mxfe_rx_jesd/s_axi_aresetn /axi_mxfe_rx_jesd/rx_axi/s_axi_aresetn
connect_bd_intf_net /axi_mxfe_rx_jesd/s_axi /axi_mxfe_rx_jesd/rx_axi/s_axi
connect_bd_net /axi_mxfe_rx_jesd/rx_axi/irq /axi_mxfe_rx_jesd/irq
connect_bd_net /axi_mxfe_rx_jesd/link_clk /axi_mxfe_rx_jesd/rx_axi/core_clk
connect_bd_net /axi_mxfe_rx_jesd/link_clk /axi_mxfe_rx_jesd/rx/clk
connect_bd_net /axi_mxfe_rx_jesd/device_clk /axi_mxfe_rx_jesd/rx_axi/device_clk
connect_bd_net /axi_mxfe_rx_jesd/device_clk /axi_mxfe_rx_jesd/rx/device_clk
connect_bd_net /axi_mxfe_rx_jesd/sysref /axi_mxfe_rx_jesd/rx/sysref
connect_bd_net /axi_mxfe_rx_jesd/rx/rx_data /axi_mxfe_rx_jesd/rx_data_tdata
connect_bd_net /axi_mxfe_rx_jesd/rx/rx_valid /axi_mxfe_rx_jesd/rx_data_tvalid
connect_bd_net /axi_mxfe_rx_jesd/rx/rx_eof /axi_mxfe_rx_jesd/rx_eof
connect_bd_net /axi_mxfe_rx_jesd/rx/rx_sof /axi_mxfe_rx_jesd/rx_sof
connect_bd_intf_net /axi_mxfe_rx_jesd/rx/rx_phy0 /axi_mxfe_rx_jesd/rx_phy0
connect_bd_net /rx_mxfe_tpl_core/s_axi_aclk /rx_mxfe_tpl_core/adc_tpl_core/s_axi_aclk
connect_bd_net /rx_mxfe_tpl_core/s_axi_aresetn /rx_mxfe_tpl_core/adc_tpl_core/s_axi_aresetn
connect_bd_intf_net /rx_mxfe_tpl_core/s_axi /rx_mxfe_tpl_core/adc_tpl_core/s_axi
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/link_clk /rx_mxfe_tpl_core/link_clk
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/link_sof /rx_mxfe_tpl_core/link_sof
WARNING: [BD 41-1306] The connection to interface pin </rx_mxfe_tpl_core/adc_tpl_core/link_data> is being overridden by the user with net <link_data_1>. This pin will not be connected as a part of interface connection <link>.
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/link_data /rx_mxfe_tpl_core/link_data
WARNING: [BD 41-1306] The connection to interface pin </rx_mxfe_tpl_core/adc_tpl_core/link_valid> is being overridden by the user with net <link_valid_1>. This pin will not be connected as a part of interface connection <link>.
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/link_valid /rx_mxfe_tpl_core/link_valid
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_0/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_0/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_0/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_0/Dout /rx_mxfe_tpl_core/adc_data_0
connect_bd_net /rx_mxfe_tpl_core/enable_slice_0/Dout /rx_mxfe_tpl_core/adc_enable_0
connect_bd_net /rx_mxfe_tpl_core/valid_slice_0/Dout /rx_mxfe_tpl_core/adc_valid_0
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_1/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_1/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_1/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_1/Dout /rx_mxfe_tpl_core/adc_data_1
connect_bd_net /rx_mxfe_tpl_core/enable_slice_1/Dout /rx_mxfe_tpl_core/adc_enable_1
connect_bd_net /rx_mxfe_tpl_core/valid_slice_1/Dout /rx_mxfe_tpl_core/adc_valid_1
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_2/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_2/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_2/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_2/Dout /rx_mxfe_tpl_core/adc_data_2
connect_bd_net /rx_mxfe_tpl_core/enable_slice_2/Dout /rx_mxfe_tpl_core/adc_enable_2
connect_bd_net /rx_mxfe_tpl_core/valid_slice_2/Dout /rx_mxfe_tpl_core/adc_valid_2
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_3/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_3/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_3/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_3/Dout /rx_mxfe_tpl_core/adc_data_3
connect_bd_net /rx_mxfe_tpl_core/enable_slice_3/Dout /rx_mxfe_tpl_core/adc_enable_3
connect_bd_net /rx_mxfe_tpl_core/valid_slice_3/Dout /rx_mxfe_tpl_core/adc_valid_3
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_4/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_4/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_4/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_4/Dout /rx_mxfe_tpl_core/adc_data_4
connect_bd_net /rx_mxfe_tpl_core/enable_slice_4/Dout /rx_mxfe_tpl_core/adc_enable_4
connect_bd_net /rx_mxfe_tpl_core/valid_slice_4/Dout /rx_mxfe_tpl_core/adc_valid_4
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_5/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_5/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_5/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_5/Dout /rx_mxfe_tpl_core/adc_data_5
connect_bd_net /rx_mxfe_tpl_core/enable_slice_5/Dout /rx_mxfe_tpl_core/adc_enable_5
connect_bd_net /rx_mxfe_tpl_core/valid_slice_5/Dout /rx_mxfe_tpl_core/adc_valid_5
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_6/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_6/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_6/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_6/Dout /rx_mxfe_tpl_core/adc_data_6
connect_bd_net /rx_mxfe_tpl_core/enable_slice_6/Dout /rx_mxfe_tpl_core/adc_enable_6
connect_bd_net /rx_mxfe_tpl_core/valid_slice_6/Dout /rx_mxfe_tpl_core/adc_valid_6
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_data /rx_mxfe_tpl_core/data_slice_7/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/enable /rx_mxfe_tpl_core/enable_slice_7/Din
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_valid /rx_mxfe_tpl_core/valid_slice_7/Din
connect_bd_net /rx_mxfe_tpl_core/data_slice_7/Dout /rx_mxfe_tpl_core/adc_data_7
connect_bd_net /rx_mxfe_tpl_core/enable_slice_7/Dout /rx_mxfe_tpl_core/adc_enable_7
connect_bd_net /rx_mxfe_tpl_core/valid_slice_7/Dout /rx_mxfe_tpl_core/adc_valid_7
connect_bd_net /rx_mxfe_tpl_core/adc_dovf /rx_mxfe_tpl_core/adc_tpl_core/adc_dovf
WARNING: [IP_Flow 19-3374] An attempt to modify the value of disabled parameter 'DST_CYCLIC_EN' from '"0"' to '0' has been ignored for IP 'mxfe_rx_data_offload/i_data_offload'
connect_bd_intf_net /mxfe_rx_data_offload/storage_unit/wr_ctrl /mxfe_rx_data_offload/i_data_offload/wr_ctrl
connect_bd_intf_net /mxfe_rx_data_offload/storage_unit/rd_ctrl /mxfe_rx_data_offload/i_data_offload/rd_ctrl
connect_bd_intf_net /mxfe_rx_data_offload/storage_unit/s_axis /mxfe_rx_data_offload/i_data_offload/m_storage_axis
connect_bd_intf_net /mxfe_rx_data_offload/storage_unit/m_axis /mxfe_rx_data_offload/i_data_offload/s_storage_axis
connect_bd_net /mxfe_rx_data_offload/storage_unit/s_axis_aclk /mxfe_rx_data_offload/s_axis_aclk
connect_bd_net /mxfe_rx_data_offload/storage_unit/s_axis_aresetn /mxfe_rx_data_offload/s_axis_aresetn
connect_bd_net /mxfe_rx_data_offload/storage_unit/m_axis_aclk /mxfe_rx_data_offload/m_axis_aclk
connect_bd_net /mxfe_rx_data_offload/storage_unit/m_axis_aresetn /mxfe_rx_data_offload/m_axis_aresetn
connect_bd_net /mxfe_rx_data_offload/s_axi_aclk /mxfe_rx_data_offload/i_data_offload/s_axi_aclk
connect_bd_net /mxfe_rx_data_offload/s_axi_aresetn /mxfe_rx_data_offload/i_data_offload/s_axi_aresetn
connect_bd_net /mxfe_rx_data_offload/s_axis_aclk /mxfe_rx_data_offload/i_data_offload/s_axis_aclk
connect_bd_net /mxfe_rx_data_offload/s_axis_aresetn /mxfe_rx_data_offload/i_data_offload/s_axis_aresetn
connect_bd_net /mxfe_rx_data_offload/m_axis_aclk /mxfe_rx_data_offload/i_data_offload/m_axis_aclk
connect_bd_net /mxfe_rx_data_offload/m_axis_aresetn /mxfe_rx_data_offload/i_data_offload/m_axis_aresetn
connect_bd_intf_net /mxfe_rx_data_offload/s_axi /mxfe_rx_data_offload/i_data_offload/s_axi
connect_bd_intf_net /mxfe_rx_data_offload/s_axis /mxfe_rx_data_offload/i_data_offload/s_axis
connect_bd_intf_net /mxfe_rx_data_offload/m_axis /mxfe_rx_data_offload/i_data_offload/m_axis
connect_bd_net /mxfe_rx_data_offload/init_req /mxfe_rx_data_offload/i_data_offload/init_req
connect_bd_net /mxfe_rx_data_offload/sync_ext /mxfe_rx_data_offload/i_data_offload/sync_ext
### if {$INTF_CFG != "RX"} {
###   create_bd_port -dir I tx_device_clk
### 
###   if {$ADI_PHY_SEL == 1} {
###     ad_ip_instance axi_adxcvr axi_mxfe_tx_xcvr
###     ad_ip_parameter axi_mxfe_tx_xcvr CONFIG.ID 0
###     ad_ip_parameter axi_mxfe_tx_xcvr CONFIG.LINK_MODE $ENCODER_SEL
###     ad_ip_parameter axi_mxfe_tx_xcvr CONFIG.NUM_OF_LANES $TX_NUM_OF_LANES
###     ad_ip_parameter axi_mxfe_tx_xcvr CONFIG.TX_OR_RX_N 1
###     ad_ip_parameter axi_mxfe_tx_xcvr CONFIG.QPLL_ENABLE 1
###     ad_ip_parameter axi_mxfe_tx_xcvr CONFIG.SYS_CLK_SEL 0x3 ; # QPLL0
###   }
###   if {$ADI_PHY_SEL == 0} {
###     # reset generator
###     ad_ip_instance proc_sys_reset tx_device_clk_rstgen
###     ad_connect  tx_device_clk tx_device_clk_rstgen/slowest_sync_clk
###     ad_connect  $sys_cpu_resetn tx_device_clk_rstgen/ext_reset_in
###   }
### 
###   adi_axi_jesd204_tx_create axi_mxfe_tx_jesd $TX_NUM_OF_LANES $TX_NUM_LINKS $ENCODER_SEL
###   ad_ip_parameter axi_mxfe_tx_jesd/tx CONFIG.TPL_DATA_PATH_WIDTH $TX_DATAPATH_WIDTH
### 
###   ad_ip_parameter axi_mxfe_tx_jesd/tx CONFIG.SYSREF_IOB false
###   #ad_ip_parameter axi_mxfe_tx_jesd/tx CONFIG.NUM_OUTPUT_PIPELINE 1
### 
###   adi_tpl_jesd204_tx_create tx_mxfe_tpl_core $TX_NUM_OF_LANES \
###                                             $TX_NUM_OF_CONVERTERS \
###                                             $TX_SAMPLES_PER_FRAME \
###                                             $TX_SAMPLE_WIDTH \
###                                             $TX_DATAPATH_WIDTH \
###                                             $TX_DMA_SAMPLE_WIDTH
### 
###   ad_ip_parameter tx_mxfe_tpl_core/dac_tpl_core CONFIG.IQCORRECTION_DISABLE 0
### 
###   ad_ip_instance util_upack2 util_mxfe_upack [list \
###     NUM_OF_CHANNELS $TX_NUM_OF_CONVERTERS \
###     SAMPLES_PER_CHANNEL $TX_SAMPLES_PER_CHANNEL \
###     SAMPLE_DATA_WIDTH $TX_DMA_SAMPLE_WIDTH \
###   ]
### 
###   set dac_data_offload_size [expr $dac_data_width / 8 * 2**$dac_fifo_address_width]
###   ad_data_offload_create $dac_data_offload_name \
###                         1 \
###                         $dac_do_mem_type \
###                         $dac_data_offload_size \
###                         $dac_data_width \
###                         $dac_data_width \
###                         $do_axi_data_width \
###                         $SHARED_DEVCLK
### 
###   ad_ip_instance axi_dmac axi_mxfe_tx_dma
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.DMA_TYPE_SRC 0
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.DMA_TYPE_DEST 1
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.ID 0
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.AXI_SLICE_SRC 1
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.AXI_SLICE_DEST 1
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.SYNC_TRANSFER_START 0
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.DMA_LENGTH_WIDTH 24
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.DMA_2D_TRANSFER 0
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.CYCLIC 1
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.MAX_BYTES_PER_BURST 4096
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.DMA_DATA_WIDTH_SRC [expr min(512, $dac_dma_data_width)]
###   ad_ip_parameter axi_mxfe_tx_dma CONFIG.DMA_DATA_WIDTH_DEST $dac_dma_data_width
### }
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
connect_bd_net /tx_device_clk /tx_device_clk_rstgen/slowest_sync_clk
connect_bd_net -net /sys_cpu_resetn /tx_device_clk_rstgen/ext_reset_in
connect_bd_net /axi_mxfe_tx_jesd/tx_axi/core_reset /axi_mxfe_tx_jesd/tx/reset
connect_bd_net /axi_mxfe_tx_jesd/tx_axi/device_reset /axi_mxfe_tx_jesd/tx/device_reset
connect_bd_intf_net /axi_mxfe_tx_jesd/tx_axi/tx_cfg /axi_mxfe_tx_jesd/tx/tx_cfg
connect_bd_intf_net /axi_mxfe_tx_jesd/tx/tx_event /axi_mxfe_tx_jesd/tx_axi/tx_event
connect_bd_intf_net /axi_mxfe_tx_jesd/tx/tx_status /axi_mxfe_tx_jesd/tx_axi/tx_status
connect_bd_net /axi_mxfe_tx_jesd/s_axi_aclk /axi_mxfe_tx_jesd/tx_axi/s_axi_aclk
connect_bd_net /axi_mxfe_tx_jesd/s_axi_aresetn /axi_mxfe_tx_jesd/tx_axi/s_axi_aresetn
connect_bd_intf_net /axi_mxfe_tx_jesd/s_axi /axi_mxfe_tx_jesd/tx_axi/s_axi
connect_bd_net /axi_mxfe_tx_jesd/tx_axi/irq /axi_mxfe_tx_jesd/irq
connect_bd_net /axi_mxfe_tx_jesd/link_clk /axi_mxfe_tx_jesd/tx_axi/core_clk
connect_bd_net /axi_mxfe_tx_jesd/link_clk /axi_mxfe_tx_jesd/tx/clk
connect_bd_net /axi_mxfe_tx_jesd/device_clk /axi_mxfe_tx_jesd/tx_axi/device_clk
connect_bd_net /axi_mxfe_tx_jesd/device_clk /axi_mxfe_tx_jesd/tx/device_clk
connect_bd_net /axi_mxfe_tx_jesd/sysref /axi_mxfe_tx_jesd/tx/sysref
connect_bd_intf_net /axi_mxfe_tx_jesd/tx_data /axi_mxfe_tx_jesd/tx/tx_data
connect_bd_intf_net /axi_mxfe_tx_jesd/tx/tx_phy0 /axi_mxfe_tx_jesd/tx_phy0
connect_bd_intf_net /axi_mxfe_tx_jesd/tx/tx_phy1 /axi_mxfe_tx_jesd/tx_phy1
connect_bd_net /tx_mxfe_tpl_core/s_axi_aclk /tx_mxfe_tpl_core/dac_tpl_core/s_axi_aclk
connect_bd_net /tx_mxfe_tpl_core/s_axi_aresetn /tx_mxfe_tpl_core/dac_tpl_core/s_axi_aresetn
connect_bd_intf_net /tx_mxfe_tpl_core/s_axi /tx_mxfe_tpl_core/dac_tpl_core/s_axi
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/link_clk /tx_mxfe_tpl_core/link_clk
connect_bd_intf_net /tx_mxfe_tpl_core/dac_tpl_core/link /tx_mxfe_tpl_core/link
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_0/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_0/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_0/Dout /tx_mxfe_tpl_core/dac_enable_0
connect_bd_net /tx_mxfe_tpl_core/valid_slice_0/Dout /tx_mxfe_tpl_core/dac_valid_0
connect_bd_net /tx_mxfe_tpl_core/dac_data_0 /tx_mxfe_tpl_core/data_concat0/In0
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_1/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_1/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_1/Dout /tx_mxfe_tpl_core/dac_enable_1
connect_bd_net /tx_mxfe_tpl_core/valid_slice_1/Dout /tx_mxfe_tpl_core/dac_valid_1
connect_bd_net /tx_mxfe_tpl_core/dac_data_1 /tx_mxfe_tpl_core/data_concat0/In1
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_2/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_2/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_2/Dout /tx_mxfe_tpl_core/dac_enable_2
connect_bd_net /tx_mxfe_tpl_core/valid_slice_2/Dout /tx_mxfe_tpl_core/dac_valid_2
connect_bd_net /tx_mxfe_tpl_core/dac_data_2 /tx_mxfe_tpl_core/data_concat0/In2
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_3/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_3/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_3/Dout /tx_mxfe_tpl_core/dac_enable_3
connect_bd_net /tx_mxfe_tpl_core/valid_slice_3/Dout /tx_mxfe_tpl_core/dac_valid_3
connect_bd_net /tx_mxfe_tpl_core/dac_data_3 /tx_mxfe_tpl_core/data_concat0/In3
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_4/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_4/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_4/Dout /tx_mxfe_tpl_core/dac_enable_4
connect_bd_net /tx_mxfe_tpl_core/valid_slice_4/Dout /tx_mxfe_tpl_core/dac_valid_4
connect_bd_net /tx_mxfe_tpl_core/dac_data_4 /tx_mxfe_tpl_core/data_concat0/In4
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_5/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_5/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_5/Dout /tx_mxfe_tpl_core/dac_enable_5
connect_bd_net /tx_mxfe_tpl_core/valid_slice_5/Dout /tx_mxfe_tpl_core/dac_valid_5
connect_bd_net /tx_mxfe_tpl_core/dac_data_5 /tx_mxfe_tpl_core/data_concat0/In5
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_6/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_6/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_6/Dout /tx_mxfe_tpl_core/dac_enable_6
connect_bd_net /tx_mxfe_tpl_core/valid_slice_6/Dout /tx_mxfe_tpl_core/dac_valid_6
connect_bd_net /tx_mxfe_tpl_core/dac_data_6 /tx_mxfe_tpl_core/data_concat0/In6
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/enable /tx_mxfe_tpl_core/enable_slice_7/Din
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_valid /tx_mxfe_tpl_core/valid_slice_7/Din
connect_bd_net /tx_mxfe_tpl_core/enable_slice_7/Dout /tx_mxfe_tpl_core/dac_enable_7
connect_bd_net /tx_mxfe_tpl_core/valid_slice_7/Dout /tx_mxfe_tpl_core/dac_valid_7
connect_bd_net /tx_mxfe_tpl_core/dac_data_7 /tx_mxfe_tpl_core/data_concat0/In7
connect_bd_net /tx_mxfe_tpl_core/data_concat0/dout /tx_mxfe_tpl_core/dac_tpl_core/dac_ddata
connect_bd_net /tx_mxfe_tpl_core/dac_dunf /tx_mxfe_tpl_core/dac_tpl_core/dac_dunf
connect_bd_intf_net /mxfe_tx_data_offload/storage_unit/wr_ctrl /mxfe_tx_data_offload/i_data_offload/wr_ctrl
connect_bd_intf_net /mxfe_tx_data_offload/storage_unit/rd_ctrl /mxfe_tx_data_offload/i_data_offload/rd_ctrl
connect_bd_intf_net /mxfe_tx_data_offload/storage_unit/s_axis /mxfe_tx_data_offload/i_data_offload/m_storage_axis
connect_bd_intf_net /mxfe_tx_data_offload/storage_unit/m_axis /mxfe_tx_data_offload/i_data_offload/s_storage_axis
connect_bd_net /mxfe_tx_data_offload/storage_unit/s_axis_aclk /mxfe_tx_data_offload/s_axis_aclk
connect_bd_net /mxfe_tx_data_offload/storage_unit/s_axis_aresetn /mxfe_tx_data_offload/s_axis_aresetn
connect_bd_net /mxfe_tx_data_offload/storage_unit/m_axis_aclk /mxfe_tx_data_offload/m_axis_aclk
connect_bd_net /mxfe_tx_data_offload/storage_unit/m_axis_aresetn /mxfe_tx_data_offload/m_axis_aresetn
connect_bd_net /mxfe_tx_data_offload/s_axi_aclk /mxfe_tx_data_offload/i_data_offload/s_axi_aclk
connect_bd_net /mxfe_tx_data_offload/s_axi_aresetn /mxfe_tx_data_offload/i_data_offload/s_axi_aresetn
connect_bd_net /mxfe_tx_data_offload/s_axis_aclk /mxfe_tx_data_offload/i_data_offload/s_axis_aclk
connect_bd_net /mxfe_tx_data_offload/s_axis_aresetn /mxfe_tx_data_offload/i_data_offload/s_axis_aresetn
connect_bd_net /mxfe_tx_data_offload/m_axis_aclk /mxfe_tx_data_offload/i_data_offload/m_axis_aclk
connect_bd_net /mxfe_tx_data_offload/m_axis_aresetn /mxfe_tx_data_offload/i_data_offload/m_axis_aresetn
connect_bd_intf_net /mxfe_tx_data_offload/s_axi /mxfe_tx_data_offload/i_data_offload/s_axi
connect_bd_intf_net /mxfe_tx_data_offload/s_axis /mxfe_tx_data_offload/i_data_offload/s_axis
connect_bd_intf_net /mxfe_tx_data_offload/m_axis /mxfe_tx_data_offload/i_data_offload/m_axis
connect_bd_net /mxfe_tx_data_offload/init_req /mxfe_tx_data_offload/i_data_offload/init_req
connect_bd_net /mxfe_tx_data_offload/sync_ext /mxfe_tx_data_offload/i_data_offload/sync_ext
WARNING: [BD 41-721] Attempt to set value '0' on disabled parameter 'SYNC_TRANSFER_START' of cell '/axi_mxfe_tx_dma' is ignored
### create_bd_port -dir I ref_clk_q0
### create_bd_port -dir I ref_clk_q1
### if {$ADI_PHY_SEL == 1} {
###   for {set i 0} {$i < [expr max($TX_NUM_OF_LANES,$RX_NUM_OF_LANES)]} {incr i} {
###     set quad_index [expr int($i / 4)]
###     ad_xcvrpll  ref_clk_q$quad_index  util_mxfe_xcvr/cpll_ref_clk_$i
###     if {[expr $i % 4] == 0} {
###       ad_xcvrpll  ref_clk_q$quad_index  util_mxfe_xcvr/qpll_ref_clk_$i
###     }
###   }
###   ad_connect  $sys_cpu_resetn util_mxfe_xcvr/up_rstn
###   ad_connect  $sys_cpu_clk util_mxfe_xcvr/up_clk
### 
###   if {$INTF_CFG != "TX"} {
###     ad_xcvrpll  axi_mxfe_rx_xcvr/up_pll_rst util_mxfe_xcvr/up_cpll_rst_*
###     ad_xcvrcon  util_mxfe_xcvr axi_mxfe_rx_xcvr axi_mxfe_rx_jesd {} {} rx_device_clk
###   }
###   if {$INTF_CFG != "RX"} {
###     ad_xcvrpll  axi_mxfe_tx_xcvr/up_pll_rst util_mxfe_xcvr/up_qpll_rst_*
###     ad_xcvrcon  util_mxfe_xcvr axi_mxfe_tx_xcvr axi_mxfe_tx_jesd {} {} tx_device_clk
###   }
### } else {
###   ad_connect ref_clk_q0 jesd204_phy/GT_REFCLK
###   ad_connect gt_reset jesd204_phy/gtreset_in
###   if {$INTF_CFG != "TX"} {
###     set rx_link_clock  jesd204_phy/rxusrclk_out
###     # Connect PHY to Link Layer
###     for {set j 0}  {$j < $RX_NUM_OF_LANES} {incr j} {
###       ad_connect  axi_mxfe_rx_jesd/rx_phy${j} jesd204_phy/rx${j}
###     }
###     ad_connect  $rx_link_clock /axi_mxfe_rx_jesd/link_clk
###     ad_connect  rx_device_clk /axi_mxfe_rx_jesd/device_clk
### 
###     create_bd_port -dir I rx_sysref_0
###     ad_connect axi_mxfe_rx_jesd/sysref rx_sysref_0
### 
###     create_bd_port -dir O rx_sync_0
###   }
###   if {$INTF_CFG != "RX"} {
###     set tx_link_clock  jesd204_phy/txusrclk_out
###     # Connect PHY to Link Layer
###     for {set j 0}  {$j < $TX_NUM_OF_LANES} {incr j} {
###       ad_connect  axi_mxfe_tx_jesd/tx_phy${j} jesd204_phy/tx${j}
###     }
###     ad_connect  $tx_link_clock /axi_mxfe_tx_jesd/link_clk
###     ad_connect  tx_device_clk /axi_mxfe_tx_jesd/device_clk
### 
###     create_bd_port -dir I tx_sysref_0
###     ad_connect axi_mxfe_tx_jesd/sysref tx_sysref_0
### 
###     create_bd_port -dir I tx_sync_0
###   }
### 
###   ad_connect $sys_cpu_clk jesd204_phy/apb3clk
### }
connect_bd_net /ref_clk_q0 /jesd204_phy/GT_REFCLK
connect_bd_net /gt_reset /jesd204_phy/gtreset_in
connect_bd_intf_net /axi_mxfe_rx_jesd/rx_phy0 /jesd204_phy/rx0
connect_bd_net /jesd204_phy/rxusrclk_out /axi_mxfe_rx_jesd/link_clk
connect_bd_net /rx_device_clk /axi_mxfe_rx_jesd/device_clk
connect_bd_net /axi_mxfe_rx_jesd/sysref /rx_sysref_0
connect_bd_intf_net /axi_mxfe_tx_jesd/tx_phy0 /jesd204_phy/tx0
connect_bd_intf_net /axi_mxfe_tx_jesd/tx_phy1 /jesd204_phy/tx1
connect_bd_net /jesd204_phy/txusrclk_out /axi_mxfe_tx_jesd/link_clk
connect_bd_net /tx_device_clk /axi_mxfe_tx_jesd/device_clk
connect_bd_net /axi_mxfe_tx_jesd/sysref /tx_sysref_0
connect_bd_net -net /sys_cpu_clk /jesd204_phy/apb3clk
### if {$INTF_CFG != "TX"} {
###   # RX connections
###   # Device clock domain
###   ad_connect  rx_device_clk rx_mxfe_tpl_core/link_clk
###   ad_connect  rx_device_clk util_mxfe_cpack/clk
###   ad_connect  rx_device_clk $adc_data_offload_name/s_axis_aclk
### 
###   # Clocks
###   ad_connect  $sys_dma_clk $adc_data_offload_name/m_axis_aclk
###   ad_connect  $sys_dma_clk axi_mxfe_rx_dma/s_axis_aclk
### 
###   # Resets
###   ad_connect  rx_device_clk_rstgen/peripheral_aresetn $adc_data_offload_name/s_axis_aresetn
###   ad_connect  $sys_dma_resetn $adc_data_offload_name/m_axis_aresetn
###   ad_connect  $sys_dma_resetn axi_mxfe_rx_dma/m_dest_axi_aresetn
###   ad_connect  $sys_cpu_resetn $adc_data_offload_name/s_axi_aresetn
### 
###   # Link Layer to Transport Layer
###   ad_connect  axi_mxfe_rx_jesd/rx_sof rx_mxfe_tpl_core/link_sof
###   ad_connect  axi_mxfe_rx_jesd/rx_data_tdata rx_mxfe_tpl_core/link_data
###   ad_connect  axi_mxfe_rx_jesd/rx_data_tvalid rx_mxfe_tpl_core/link_valid
### 
###   ad_connect rx_mxfe_tpl_core/adc_valid_0 util_mxfe_cpack/fifo_wr_en
###   for {set i 0} {$i < $RX_NUM_OF_CONVERTERS} {incr i} {
###     ad_connect  rx_mxfe_tpl_core/adc_enable_$i util_mxfe_cpack/enable_$i
###     ad_connect  rx_mxfe_tpl_core/adc_data_$i util_mxfe_cpack/fifo_wr_data_$i
###   }
###   ad_connect rx_mxfe_tpl_core/adc_dovf util_mxfe_cpack/fifo_wr_overflow
### 
###   ad_connect  util_mxfe_cpack/packed_fifo_wr_data $adc_data_offload_name/s_axis_tdata
###   ad_connect  util_mxfe_cpack/packed_fifo_wr_en $adc_data_offload_name/s_axis_tvalid
###   ad_connect  $adc_data_offload_name/s_axis_tlast GND
###   ad_connect  $adc_data_offload_name/s_axis_tkeep VCC
### 
###   ad_connect $adc_data_offload_name/m_axis axi_mxfe_rx_dma/s_axis
### 
###   ad_connect $adc_data_offload_name/init_req axi_mxfe_rx_dma/s_axis_xfer_req
### 
###   # Interconnect
###   # CPU
###   if {$ADI_PHY_SEL == 1} {
###     ad_cpu_interconnect 0x44a60000 axi_mxfe_rx_xcvr
###   }
###   ad_cpu_interconnect 0x44a10000 rx_mxfe_tpl_core
###   ad_cpu_interconnect 0x44a90000 axi_mxfe_rx_jesd
###   ad_cpu_interconnect 0x7c420000 axi_mxfe_rx_dma
###   ad_cpu_interconnect 0x7c450000 $adc_data_offload_name
###   # GT / ADC
###   if {$ADI_PHY_SEL == 1} {
###     ad_mem_hp0_interconnect $sys_cpu_clk axi_mxfe_rx_xcvr/m_axi
###   }
###   ad_mem_hp1_interconnect $sys_cpu_clk sys_ps7/S_AXI_HP1
###   ad_mem_hp1_interconnect $sys_dma_clk axi_mxfe_rx_dma/m_dest_axi
### 
###   # Interrupts
###   ad_cpu_interrupt ps-13 mb-12 axi_mxfe_rx_dma/irq
###   ad_cpu_interrupt ps-11 mb-14 axi_mxfe_rx_jesd/irq
### }
connect_bd_net /rx_device_clk /rx_mxfe_tpl_core/link_clk
connect_bd_net /rx_device_clk /util_mxfe_cpack/clk
connect_bd_net /rx_device_clk /mxfe_rx_data_offload/s_axis_aclk
connect_bd_net -net /sys_350m_clk /mxfe_rx_data_offload/m_axis_aclk
connect_bd_net -net /sys_350m_clk /axi_mxfe_rx_dma/s_axis_aclk
connect_bd_net /rx_device_clk_rstgen/peripheral_aresetn /mxfe_rx_data_offload/s_axis_aresetn
connect_bd_net -net /sys_350m_resetn /mxfe_rx_data_offload/m_axis_aresetn
connect_bd_net -net /sys_350m_resetn /axi_mxfe_rx_dma/m_dest_axi_aresetn
connect_bd_net -net /sys_cpu_resetn /mxfe_rx_data_offload/s_axi_aresetn
connect_bd_net /axi_mxfe_rx_jesd/rx_sof /rx_mxfe_tpl_core/link_sof
connect_bd_net /axi_mxfe_rx_jesd/rx_data_tdata /rx_mxfe_tpl_core/link_data
connect_bd_net /axi_mxfe_rx_jesd/rx_data_tvalid /rx_mxfe_tpl_core/link_valid
connect_bd_net /rx_mxfe_tpl_core/adc_valid_0 /util_mxfe_cpack/fifo_wr_en
connect_bd_net /rx_mxfe_tpl_core/adc_enable_0 /util_mxfe_cpack/enable_0
connect_bd_net /rx_mxfe_tpl_core/adc_data_0 /util_mxfe_cpack/fifo_wr_data_0
connect_bd_net /rx_mxfe_tpl_core/adc_enable_1 /util_mxfe_cpack/enable_1
connect_bd_net /rx_mxfe_tpl_core/adc_data_1 /util_mxfe_cpack/fifo_wr_data_1
connect_bd_net /rx_mxfe_tpl_core/adc_enable_2 /util_mxfe_cpack/enable_2
connect_bd_net /rx_mxfe_tpl_core/adc_data_2 /util_mxfe_cpack/fifo_wr_data_2
connect_bd_net /rx_mxfe_tpl_core/adc_enable_3 /util_mxfe_cpack/enable_3
connect_bd_net /rx_mxfe_tpl_core/adc_data_3 /util_mxfe_cpack/fifo_wr_data_3
connect_bd_net /rx_mxfe_tpl_core/adc_enable_4 /util_mxfe_cpack/enable_4
connect_bd_net /rx_mxfe_tpl_core/adc_data_4 /util_mxfe_cpack/fifo_wr_data_4
connect_bd_net /rx_mxfe_tpl_core/adc_enable_5 /util_mxfe_cpack/enable_5
connect_bd_net /rx_mxfe_tpl_core/adc_data_5 /util_mxfe_cpack/fifo_wr_data_5
connect_bd_net /rx_mxfe_tpl_core/adc_enable_6 /util_mxfe_cpack/enable_6
connect_bd_net /rx_mxfe_tpl_core/adc_data_6 /util_mxfe_cpack/fifo_wr_data_6
connect_bd_net /rx_mxfe_tpl_core/adc_enable_7 /util_mxfe_cpack/enable_7
connect_bd_net /rx_mxfe_tpl_core/adc_data_7 /util_mxfe_cpack/fifo_wr_data_7
connect_bd_net /rx_mxfe_tpl_core/adc_dovf /util_mxfe_cpack/fifo_wr_overflow
WARNING: [BD 41-1306] The connection to interface pin </util_mxfe_cpack/packed_fifo_wr_data> is being overridden by the user with net <util_mxfe_cpack_packed_fifo_wr_data>. This pin will not be connected as a part of interface connection <packed_fifo_wr>.
WARNING: [BD 41-1306] The connection to interface pin </mxfe_rx_data_offload/s_axis_tdata> is being overridden by the user with net <util_mxfe_cpack_packed_fifo_wr_data>. This pin will not be connected as a part of interface connection <s_axis>.
connect_bd_net /util_mxfe_cpack/packed_fifo_wr_data /mxfe_rx_data_offload/s_axis_tdata
WARNING: [BD 41-1306] The connection to interface pin </util_mxfe_cpack/packed_fifo_wr_en> is being overridden by the user with net <util_mxfe_cpack_packed_fifo_wr_en>. This pin will not be connected as a part of interface connection <packed_fifo_wr>.
WARNING: [BD 41-1306] The connection to interface pin </mxfe_rx_data_offload/s_axis_tvalid> is being overridden by the user with net <util_mxfe_cpack_packed_fifo_wr_en>. This pin will not be connected as a part of interface connection <s_axis>.
connect_bd_net /util_mxfe_cpack/packed_fifo_wr_en /mxfe_rx_data_offload/s_axis_tvalid
WARNING: [BD 41-1306] The connection to interface pin </mxfe_rx_data_offload/s_axis_tlast> is being overridden by the user with net </GND_1_dout>. This pin will not be connected as a part of interface connection <s_axis>.
connect_bd_net /GND_1/dout /mxfe_rx_data_offload/s_axis_tlast
WARNING: [BD 41-1306] The connection to interface pin </mxfe_rx_data_offload/s_axis_tkeep> is being overridden by the user with net </VCC_1_dout>. This pin will not be connected as a part of interface connection <s_axis>.
connect_bd_net /VCC_1/dout /mxfe_rx_data_offload/s_axis_tkeep
connect_bd_intf_net /mxfe_rx_data_offload/m_axis /axi_mxfe_rx_dma/s_axis
connect_bd_net /mxfe_rx_data_offload/init_req /axi_mxfe_rx_dma/s_axis_xfer_req
/rx_mxfe_tpl_core/adc_tpl_core/s_axi_aclk
/rx_mxfe_tpl_core/adc_tpl_core
connect_bd_net -net /sys_cpu_clk /rx_mxfe_tpl_core/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /rx_mxfe_tpl_core/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M02_AXI /rx_mxfe_tpl_core/s_axi
/axi_mxfe_rx_jesd/rx_axi/s_axi_aclk
/axi_mxfe_rx_jesd/rx_axi
connect_bd_net -net /sys_cpu_clk /axi_mxfe_rx_jesd/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /axi_mxfe_rx_jesd/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M03_AXI /axi_mxfe_rx_jesd/s_axi
connect_bd_net -net /sys_cpu_clk /axi_mxfe_rx_dma/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /axi_mxfe_rx_dma/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M04_AXI /axi_mxfe_rx_dma/s_axi
/mxfe_rx_data_offload/i_data_offload/s_axi_aclk
/mxfe_rx_data_offload/i_data_offload
connect_bd_net -net /sys_cpu_clk /mxfe_rx_data_offload/s_axi_aclk
connect_bd_intf_net /axi_cpu_interconnect/M05_AXI /mxfe_rx_data_offload/s_axi
WARNING: [BD 5-699] No address segments matched 'get_bd_addr_segs axi_noc_0/S07_AXI/C0_DDR_LOW0'
connect_bd_net -net /sys_350m_clk /axi_noc_0/aclk6
connect_bd_intf_net /axi_noc_0/S06_AXI /axi_mxfe_rx_dma/m_dest_axi
connect_bd_net -net /sys_350m_clk /axi_mxfe_rx_dma/m_dest_axi_aclk
WARNING: [BD 41-1743] Cannot assign slave segment '/axi_noc_0/S06_AXI/C0_DDR_LOW1' into address space '/axi_mxfe_rx_dma/m_dest_axi' because no valid addressing path exists. The addressing path from slave segment '/axi_noc_0/S06_AXI/C0_DDR_LOW1' to address space '/axi_mxfe_rx_dma/m_dest_axi' terminates at master interface '/axi_mxfe_rx_dma/m_dest_axi'. The apertures for this interface {<0x0_0000_0000 [ 4G ]>} do not intersect with previous path apertures {<0x8_0000_0000 [ 32G ]>}. This assignment will be automatically excluded.
Slave segment '/axi_noc_0/S06_AXI/C0_DDR_LOW0' is being assigned into address space '/axi_mxfe_rx_dma/m_dest_axi' at <0x0000_0000 [ 2G ]>.
Excluding slave segment /axi_noc_0/S06_AXI/C0_DDR_LOW1 from address space /axi_mxfe_rx_dma/m_dest_axi.
connect_bd_net /axi_mxfe_rx_dma/irq /sys_cips/pl_ps_irq13
connect_bd_net /axi_mxfe_rx_jesd/irq /sys_cips/pl_ps_irq11
### if {$INTF_CFG != "RX"} {
###   # TX connections
###   # Device clock domain
###   ad_connect  tx_device_clk tx_mxfe_tpl_core/link_clk
###   ad_connect  tx_device_clk util_mxfe_upack/clk
###   ad_connect  tx_device_clk $dac_data_offload_name/m_axis_aclk
### 
###   # Clocks
###   ad_connect  $sys_dma_clk $dac_data_offload_name/s_axis_aclk
###   ad_connect  $sys_dma_clk axi_mxfe_tx_dma/m_axis_aclk
### 
###   # Resets
###   ad_connect  tx_device_clk_rstgen/peripheral_aresetn $dac_data_offload_name/m_axis_aresetn
###   ad_connect  $sys_dma_resetn $dac_data_offload_name/s_axis_aresetn
###   ad_connect  $sys_dma_resetn axi_mxfe_tx_dma/m_src_axi_aresetn
###   ad_connect  $sys_cpu_resetn $dac_data_offload_name/s_axi_aresetn
### 
###   # Link Layer to Transport Layer
###   ad_connect  tx_mxfe_tpl_core/link axi_mxfe_tx_jesd/tx_data
### 
###   ad_connect  tx_mxfe_tpl_core/dac_valid_0 util_mxfe_upack/fifo_rd_en
###   for {set i 0} {$i < $TX_NUM_OF_CONVERTERS} {incr i} {
###     ad_connect  util_mxfe_upack/fifo_rd_data_$i tx_mxfe_tpl_core/dac_data_$i
###     ad_connect  tx_mxfe_tpl_core/dac_enable_$i  util_mxfe_upack/enable_$i
###   }
### 
###   ad_connect $dac_data_offload_name/s_axis axi_mxfe_tx_dma/m_axis
### 
###   ad_connect  util_mxfe_upack/s_axis $dac_data_offload_name/m_axis
### 
###   ad_connect $dac_data_offload_name/init_req axi_mxfe_tx_dma/m_axis_xfer_req
###   ad_connect tx_mxfe_tpl_core/dac_dunf GND
### 
###   # Interconnect
###   if {$ADI_PHY_SEL == 1} {
###     # CPU
###     ad_cpu_interconnect 0x44b60000 axi_mxfe_tx_xcvr
###   }
###   # CPU
###   ad_cpu_interconnect 0x44b10000 tx_mxfe_tpl_core
###   ad_cpu_interconnect 0x44b90000 axi_mxfe_tx_jesd
###   ad_cpu_interconnect 0x7c430000 axi_mxfe_tx_dma
###   ad_cpu_interconnect 0x7c440000 $dac_data_offload_name
###   # GT / ADC
###   ad_mem_hp2_interconnect $sys_dma_clk sys_ps7/S_AXI_HP2
###   ad_mem_hp2_interconnect $sys_dma_clk axi_mxfe_tx_dma/m_src_axi
### 
###   # Interrupts
###   ad_cpu_interrupt ps-12 mb-13 axi_mxfe_tx_dma/irq
###   ad_cpu_interrupt ps-10 mb-15 axi_mxfe_tx_jesd/irq
### }
connect_bd_net /tx_device_clk /tx_mxfe_tpl_core/link_clk
connect_bd_net /tx_device_clk /util_mxfe_upack/clk
connect_bd_net /tx_device_clk /mxfe_tx_data_offload/m_axis_aclk
connect_bd_net -net /sys_350m_clk /mxfe_tx_data_offload/s_axis_aclk
connect_bd_net -net /sys_350m_clk /axi_mxfe_tx_dma/m_axis_aclk
connect_bd_net /tx_device_clk_rstgen/peripheral_aresetn /mxfe_tx_data_offload/m_axis_aresetn
connect_bd_net -net /sys_350m_resetn /mxfe_tx_data_offload/s_axis_aresetn
connect_bd_net -net /sys_350m_resetn /axi_mxfe_tx_dma/m_src_axi_aresetn
connect_bd_net -net /sys_cpu_resetn /mxfe_tx_data_offload/s_axi_aresetn
connect_bd_intf_net /tx_mxfe_tpl_core/link /axi_mxfe_tx_jesd/tx_data
connect_bd_net /tx_mxfe_tpl_core/dac_valid_0 /util_mxfe_upack/fifo_rd_en
connect_bd_net /util_mxfe_upack/fifo_rd_data_0 /tx_mxfe_tpl_core/dac_data_0
connect_bd_net /tx_mxfe_tpl_core/dac_enable_0 /util_mxfe_upack/enable_0
connect_bd_net /util_mxfe_upack/fifo_rd_data_1 /tx_mxfe_tpl_core/dac_data_1
connect_bd_net /tx_mxfe_tpl_core/dac_enable_1 /util_mxfe_upack/enable_1
connect_bd_net /util_mxfe_upack/fifo_rd_data_2 /tx_mxfe_tpl_core/dac_data_2
connect_bd_net /tx_mxfe_tpl_core/dac_enable_2 /util_mxfe_upack/enable_2
connect_bd_net /util_mxfe_upack/fifo_rd_data_3 /tx_mxfe_tpl_core/dac_data_3
connect_bd_net /tx_mxfe_tpl_core/dac_enable_3 /util_mxfe_upack/enable_3
connect_bd_net /util_mxfe_upack/fifo_rd_data_4 /tx_mxfe_tpl_core/dac_data_4
connect_bd_net /tx_mxfe_tpl_core/dac_enable_4 /util_mxfe_upack/enable_4
connect_bd_net /util_mxfe_upack/fifo_rd_data_5 /tx_mxfe_tpl_core/dac_data_5
connect_bd_net /tx_mxfe_tpl_core/dac_enable_5 /util_mxfe_upack/enable_5
connect_bd_net /util_mxfe_upack/fifo_rd_data_6 /tx_mxfe_tpl_core/dac_data_6
connect_bd_net /tx_mxfe_tpl_core/dac_enable_6 /util_mxfe_upack/enable_6
connect_bd_net /util_mxfe_upack/fifo_rd_data_7 /tx_mxfe_tpl_core/dac_data_7
connect_bd_net /tx_mxfe_tpl_core/dac_enable_7 /util_mxfe_upack/enable_7
connect_bd_intf_net /mxfe_tx_data_offload/s_axis /axi_mxfe_tx_dma/m_axis
connect_bd_intf_net /util_mxfe_upack/s_axis /mxfe_tx_data_offload/m_axis
connect_bd_net /mxfe_tx_data_offload/init_req /axi_mxfe_tx_dma/m_axis_xfer_req
connect_bd_net /GND_1/dout /tx_mxfe_tpl_core/dac_dunf
/tx_mxfe_tpl_core/dac_tpl_core/s_axi_aclk
/tx_mxfe_tpl_core/dac_tpl_core
connect_bd_net -net /sys_cpu_clk /tx_mxfe_tpl_core/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /tx_mxfe_tpl_core/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M06_AXI /tx_mxfe_tpl_core/s_axi
/axi_mxfe_tx_jesd/tx_axi/s_axi_aclk
/axi_mxfe_tx_jesd/tx_axi
connect_bd_net -net /sys_cpu_clk /axi_mxfe_tx_jesd/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /axi_mxfe_tx_jesd/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M07_AXI /axi_mxfe_tx_jesd/s_axi
connect_bd_net -net /sys_cpu_clk /axi_mxfe_tx_dma/s_axi_aclk
connect_bd_net -net /sys_cpu_resetn /axi_mxfe_tx_dma/s_axi_aresetn
connect_bd_intf_net /axi_cpu_interconnect/M08_AXI /axi_mxfe_tx_dma/s_axi
/mxfe_tx_data_offload/i_data_offload/s_axi_aclk
/mxfe_tx_data_offload/i_data_offload
connect_bd_net -net /sys_cpu_clk /mxfe_tx_data_offload/s_axi_aclk
connect_bd_intf_net /axi_cpu_interconnect/M09_AXI /mxfe_tx_data_offload/s_axi
WARNING: [BD 5-699] No address segments matched 'get_bd_addr_segs axi_noc_0/S08_AXI/C0_DDR_LOW0'
connect_bd_intf_net /axi_noc_0/S07_AXI /axi_mxfe_tx_dma/m_src_axi
connect_bd_net -net /sys_350m_clk /axi_mxfe_tx_dma/m_src_axi_aclk
WARNING: [BD 41-1743] Cannot assign slave segment '/axi_noc_0/S07_AXI/C0_DDR_LOW1' into address space '/axi_mxfe_tx_dma/m_src_axi' because no valid addressing path exists. The addressing path from slave segment '/axi_noc_0/S07_AXI/C0_DDR_LOW1' to address space '/axi_mxfe_tx_dma/m_src_axi' terminates at master interface '/axi_mxfe_tx_dma/m_src_axi'. The apertures for this interface {<0x0_0000_0000 [ 4G ]>} do not intersect with previous path apertures {<0x8_0000_0000 [ 32G ]>}. This assignment will be automatically excluded.
Slave segment '/axi_noc_0/S07_AXI/C0_DDR_LOW0' is being assigned into address space '/axi_mxfe_tx_dma/m_src_axi' at <0x0000_0000 [ 2G ]>.
Excluding slave segment /axi_noc_0/S07_AXI/C0_DDR_LOW1 from address space /axi_mxfe_tx_dma/m_src_axi.
connect_bd_net /axi_mxfe_tx_dma/irq /sys_cips/pl_ps_irq12
connect_bd_net /axi_mxfe_tx_jesd/irq /sys_cips/pl_ps_irq10
### if {$ADI_PHY_SEL == 1} {
###   if {$INTF_CFG != "TX"} {
###     # Unused Rx lanes
###     for {set i $RX_NUM_OF_LANES} {$i < 8} {incr i} {
###       create_bd_port -dir I rx_data_${i}_n
###       create_bd_port -dir I rx_data_${i}_p
###     }
###   }
###   if {$INTF_CFG != "RX"} {
###     # Unused Tx lanes
###     for {set i $TX_NUM_OF_LANES} {$i < 8} {incr i} {
###       create_bd_port -dir O tx_data_${i}_n
###       create_bd_port -dir O tx_data_${i}_p
###     }
###   }
### } else {
###   for {set j 0} {$j < $num_quads} {incr j} {
###     make_bd_intf_pins_external  [get_bd_intf_pins jesd204_phy/GT_Serial_${j}]
###   }
###   # Unused serial lanes
###   for {set i $num_quads} {$i < $max_num_quads} {incr i} {
###     if {$INTF_CFG != "TX"} {
###       create_bd_port -dir I -from 3 -to 0 GT_Serial_${i}_0_grx_p
###       create_bd_port -dir I -from 3 -to 0 GT_Serial_${i}_0_grx_n
###     }
###     if {$INTF_CFG != "RX"} {
###       create_bd_port -dir O -from 3 -to 0 GT_Serial_${i}_0_gtx_p
###       create_bd_port -dir O -from 3 -to 0 GT_Serial_${i}_0_gtx_n
###     }
###   }
### }
### create_bd_port -dir I ext_sync_in
### if {$INTF_CFG != "TX"} {
###   # ADC (Rx) external sync
###   ad_ip_parameter rx_mxfe_tpl_core/adc_tpl_core CONFIG.EXT_SYNC 1
###   ad_connect ext_sync_in rx_mxfe_tpl_core/adc_tpl_core/adc_sync_in
###   if {$INTF_CFG == "RXTX"} {
###     # Rx & Tx
###     ad_ip_instance util_vector_logic manual_sync_or [list \
###       C_SIZE 1 \
###       C_OPERATION {or} \
###     ]
###     ad_connect rx_mxfe_tpl_core/adc_tpl_core/adc_sync_manual_req_out manual_sync_or/Op1
###     ad_connect manual_sync_or/Res rx_mxfe_tpl_core/adc_tpl_core/adc_sync_manual_req_in
###   } else {
###     # Only Rx
###     ad_connect rx_mxfe_tpl_core/adc_tpl_core/adc_sync_manual_req_out rx_mxfe_tpl_core/adc_tpl_core/adc_sync_manual_req_in
###   }
###   # Reset pack cores
###   ad_ip_instance util_reduced_logic cpack_rst_logic
###   ad_ip_parameter cpack_rst_logic config.c_operation {or}
###   ad_ip_parameter cpack_rst_logic config.c_size {3}
### 
###   ad_ip_instance util_vector_logic rx_do_rstout_logic
###   ad_ip_parameter rx_do_rstout_logic config.c_operation {not}
###   ad_ip_parameter rx_do_rstout_logic config.c_size {1}
### 
###   ad_connect $adc_data_offload_name/s_axis_tready rx_do_rstout_logic/Op1
### 
###   ad_ip_instance xlconcat cpack_reset_sources
###   ad_ip_parameter cpack_reset_sources config.num_ports {3}
###   ad_connect rx_device_clk_rstgen/peripheral_reset cpack_reset_sources/in0
###   ad_connect rx_mxfe_tpl_core/adc_tpl_core/adc_rst cpack_reset_sources/in1
###   ad_connect rx_do_rstout_logic/res cpack_reset_sources/in2
### 
###   ad_connect cpack_reset_sources/dout cpack_rst_logic/op1
###   ad_connect cpack_rst_logic/res util_mxfe_cpack/reset
### }
connect_bd_net /ext_sync_in /rx_mxfe_tpl_core/adc_tpl_core/adc_sync_in
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_sync_manual_req_out /manual_sync_or/Op1
connect_bd_net /manual_sync_or/Res /rx_mxfe_tpl_core/adc_tpl_core/adc_sync_manual_req_in
WARNING: [BD 41-1306] The connection to interface pin </mxfe_rx_data_offload/s_axis_tready> is being overridden by the user with net <mxfe_rx_data_offload_s_axis_tready>. This pin will not be connected as a part of interface connection <s_axis>.
connect_bd_net /mxfe_rx_data_offload/s_axis_tready /rx_do_rstout_logic/Op1
connect_bd_net /rx_device_clk_rstgen/peripheral_reset /cpack_reset_sources/In0
connect_bd_net /rx_mxfe_tpl_core/adc_tpl_core/adc_rst /cpack_reset_sources/In1
connect_bd_net /rx_do_rstout_logic/Res /cpack_reset_sources/In2
connect_bd_net /cpack_reset_sources/dout /cpack_rst_logic/Op1
connect_bd_net /cpack_rst_logic/Res /util_mxfe_cpack/reset
### if {$INTF_CFG != "RX"} {
###   # DAC (Tx) external sync
###   ad_ip_parameter tx_mxfe_tpl_core/dac_tpl_core CONFIG.EXT_SYNC 1
###   ad_connect ext_sync_in tx_mxfe_tpl_core/dac_tpl_core/dac_sync_in
###   if {$INTF_CFG == "RXTX"} {
###     # Rx & Tx
###     ad_connect tx_mxfe_tpl_core/dac_tpl_core/dac_sync_manual_req_out manual_sync_or/Op2
###     ad_connect manual_sync_or/Res tx_mxfe_tpl_core/dac_tpl_core/dac_sync_manual_req_in
###   } else {
###     # Only Tx
###     ad_connect tx_mxfe_tpl_core/dac_tpl_core/dac_sync_manual_req_out tx_mxfe_tpl_core/dac_tpl_core/dac_sync_manual_req_in
###   }
###   # Reset upack cores
###   ad_ip_instance util_reduced_logic upack_rst_logic
###   ad_ip_parameter upack_rst_logic config.c_operation {or}
###   ad_ip_parameter upack_rst_logic config.c_size {2}
### 
###   ad_ip_instance xlconcat upack_reset_sources
###   ad_ip_parameter upack_reset_sources config.num_ports {2}
###   ad_connect tx_device_clk_rstgen/peripheral_reset upack_reset_sources/in0
###   ad_connect tx_mxfe_tpl_core/dac_tpl_core/dac_rst upack_reset_sources/in1
### 
###   ad_connect upack_reset_sources/dout upack_rst_logic/op1
###   ad_connect upack_rst_logic/res util_mxfe_upack/reset
### }
connect_bd_net /ext_sync_in /tx_mxfe_tpl_core/dac_tpl_core/dac_sync_in
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_sync_manual_req_out /manual_sync_or/Op2
connect_bd_net /manual_sync_or/Res /tx_mxfe_tpl_core/dac_tpl_core/dac_sync_manual_req_in
connect_bd_net /tx_device_clk_rstgen/peripheral_reset /upack_reset_sources/In0
connect_bd_net /tx_mxfe_tpl_core/dac_tpl_core/dac_rst /upack_reset_sources/In1
connect_bd_net /upack_reset_sources/dout /upack_rst_logic/Op1
connect_bd_net /upack_rst_logic/Res /util_mxfe_upack/reset
### if {$TDD_SUPPORT} {
###   set TDD_CHANNEL_CNT $ad_project_params(TDD_CHANNEL_CNT)
### 
###   set TDD_DEFAULT_POL [ expr { [info exists ad_project_params(TDD_DEFAULT_POL)] \
###                                ? $ad_project_params(TDD_DEFAULT_POL) : 0 } ]
###   set TDD_REG_WIDTH [ expr { [info exists ad_project_params(TDD_REG_WIDTH)] \
###                              ? $ad_project_params(TDD_REG_WIDTH) : 32 } ]
###   set TDD_BURST_WIDTH [ expr { [info exists ad_project_params(TDD_BURST_WIDTH)] \
###                                ? $ad_project_params(TDD_BURST_WIDTH) : 32 } ]
###   set TDD_SYNC_WIDTH [ expr { [info exists ad_project_params(TDD_SYNC_WIDTH)] \
###                               ? $ad_project_params(TDD_SYNC_WIDTH) : 64 } ]
### 
###   set TDD_SYNC_INT $ad_project_params(TDD_SYNC_INT)
###   set TDD_SYNC_EXT $ad_project_params(TDD_SYNC_EXT)
###   set TDD_SYNC_EXT_CDC $ad_project_params(TDD_SYNC_EXT_CDC)
### 
###   ad_tdd_gen_create axi_tdd_0 $TDD_CHANNEL_CNT \
###                               $TDD_DEFAULT_POL \
###                               $TDD_REG_WIDTH \
###                               $TDD_BURST_WIDTH \
###                               $TDD_SYNC_WIDTH \
###                               $TDD_SYNC_INT \
###                               $TDD_SYNC_EXT \
###                               $TDD_SYNC_EXT_CDC
### 
###   ad_connect tx_device_clk axi_tdd_0/clk
###   ad_connect tx_device_clk_rstgen/peripheral_aresetn axi_tdd_0/resetn
###   ad_connect $sys_cpu_clk axi_tdd_0/s_axi_aclk
###   ad_connect $sys_cpu_resetn axi_tdd_0/s_axi_aresetn
###   ad_connect axi_tdd_0/sync_in GND
###   ad_cpu_interconnect 0x7c460000 axi_tdd_0
### 
###   ad_connect axi_tdd_0/tdd_channel_0 $dac_data_offload_name/sync_ext
###   ad_connect axi_tdd_0/tdd_channel_1 $adc_data_offload_name/sync_ext
### } else {
###   if {$INTF_CFG != "TX"} {
###     ad_connect GND $adc_data_offload_name/sync_ext
###   }
###   if {$INTF_CFG != "RX"} {
###     ad_connect GND $dac_data_offload_name/sync_ext
###   }
### }
connect_bd_net /GND_1/dout /mxfe_rx_data_offload/sync_ext
connect_bd_net /GND_1/dout /mxfe_tx_data_offload/sync_ext
## source $ad_hdl_dir/projects/scripts/adi_pd.tcl
### proc stringtohex {str blocksize} {
### 
###   binary scan $str H* hex;
###   return [format %0-[expr $blocksize * 2]s $hex];
### }
### proc checksum8bit {hex} {
### 
###   set byte {};
###   set chks 0;
###   for {set i 0} {$i < [string length $hex]} {incr i} {
###     if { ($i+1) % 2 == 0} {
###       append byte [string index $hex $i];
###       set chks [expr $chks + "0x$byte"];
###     } else {
###       set byte [string index $hex $i];
###       }
###   };
###   return [format %0.2x [expr 255 - [expr "0x[string range [format %0.2x $chks] [expr [string length [format %0.2x $chks]] -2] [expr [string length [format %0.2x $chks]] -1]]"] +1]];
### }
### proc hexstr_flip {str} {
### 
###   set line {};
###   set fstr {};
###   set byte {};
###   for {set i 0} {$i < [string length $str]} {incr i} {
###     if {[expr ($i+1) % 8] == 0} {
###       append line [string index $str $i];
###       set line_d $line;
###       set fline {};
###       for {set j 0} {$j < [string length $line]} {incr j} {
###         if {[expr ($j+1) % 2] == 0} {
###           append fline [rev_by_string [append byte [string index $line $j]]];
###         } else {
###           set byte [string index $line $j];
###         }
###       };
###       append fstr [rev_by_string $fline];
###       set line {};
###     } else {
###       append line [string index $str $i];
###     }
###   };
###   return $fstr;
### }
### proc rev_by_string {str} {
### 
###   set rev "";
###   set length [string length $str];
###   for {set i 0} {$i < $length} {incr i} {
###     set rev "[string index $str $i]$rev";
###   };
###   return $rev;
### }
### proc sysid_gen_sys_init_file {{custom_string {}}} {
### 
###   global project_name;
###   if {[info exists project_name]} {
###     puts "project_name: $project_name";
###   } else {
###     set project_name [current_project];
###     puts "project_name: $project_name";
###   }
### 
###   if {[catch {exec git rev-parse HEAD} gitsha_string] != 0} {
###     set gitsha_string 0;
###   }
###   set gitsha_hex [hexstr_flip [stringtohex $gitsha_string 44]];
###   puts "gitsha_string: $gitsha_string";
###   puts "gitsha_hex: $gitsha_hex";
### 
###   set git_clean_string "f";
###   if {$gitsha_string != 0} {
###     if {[catch {exec git status} gitstat_string] == 0} {
###       if [expr [string match *modified* $gitstat_string] == 0] {
###         set git_clean_string "t";
###       }
###     }
###     if {[catch {exec git branch --no-color} gitbranch_string] != 0} {
###       set gitbranch_string "";
###     } else {
###       set gitbranch_string [lindex $gitbranch_string [expr [lsearch -exact $gitbranch_string "*"] + 1]];
### 	}
###   } else {
###     set gitbranch_string "";
###   }
### 
###   set git_clean_hex [hexstr_flip [stringtohex $git_clean_string 4]];
###   puts "git_clean_string: $git_clean_string";
###   puts "git_clean_hex: $git_clean_hex";
### 
###   set git_branch_hex [hexstr_flip [stringtohex $gitbranch_string 28]];
###   puts "gitbranch_string: $gitbranch_string";
###   puts "git_branch_hex: $git_branch_hex";
### 
###   set vadj_check_string "vadj";
###   set vadj_check_hex [hexstr_flip [stringtohex $vadj_check_string 4]];
###   puts "vadj_check_string: $vadj_check_string";
###   puts "vadj_check_hex: $vadj_check_hex";
### 
###   set thetime [clock seconds];
###   set timedate_hex [hexstr_flip [stringtohex $thetime 12]];
###   puts "thetime: $thetime";
###   puts "timedate_hex: $timedate_hex";
### 
###   set verh_hex {};
###   set verh_size 448;
### 
###   append verh_hex $git_branch_hex $gitsha_hex $git_clean_hex $vadj_check_hex $timedate_hex;
###   append verh_hex "00000000" [checksum8bit $verh_hex] "000000";
### 
###   set verh_hex [format %0-[expr [expr $verh_size] * 8]s $verh_hex];
###   set table_size 16;
###   set comh_size [expr 8 * $table_size];
###   set comh_ver_hex "00000002";
### 
###   set boardname_string [lindex [split $project_name _] [expr [llength [split $project_name _]] - 1]];
###   set boardname_hex [hexstr_flip [stringtohex $boardname_string 32]];
### 
###   puts "boardname_string: $boardname_string";
###   puts "boardname_hex: $boardname_hex";
### 
###   set projname_string [string trimright [string trimright $project_name $boardname_string] _]
###   set projname_hex [hexstr_flip [stringtohex $projname_string 32]];
### 
###   puts "projname_string: $projname_string";
###   puts "projname_hex: $projname_hex";
### 
###   set custom_hex [hexstr_flip [stringtohex $custom_string 64]];
### 
###   puts "custom_string: $custom_string";
###   puts "custom_hex: $custom_hex";
### 
###   set pr_offset "00000000";
### 
###   set comh_hex {};
###   append comh_hex $comh_ver_hex;
### 
###   set offset $table_size;
###   append comh_hex [format %08s [format %0.2x $offset]];
### 
###   set offset [expr $table_size + $verh_size];
###   append comh_hex [format %08s [format %0.2x $offset]];
### 
###   set offset [expr $offset + [expr [string length $projname_hex] / 8]];
###   append comh_hex [format %08s [format %0.2x $offset]];
### 
###   set offset [expr $offset + [expr [string length $boardname_hex] / 8]];
###   append comh_hex [format %08s [format %0.2x $offset]];
### 
###   set offset $pr_offset;
###   append comh_hex [format %08s $offset];
### 
###   set comh_hex [format %0-[expr [expr $table_size - 2] * 8]s $comh_hex];
###   append comh_hex "00000000" [checksum8bit $comh_hex] "000000";
### 
###   set sys_mem_hex [format %0-[expr 512 * 8]s [concat $comh_hex$verh_hex$projname_hex$boardname_hex$custom_hex]];
### 
###   if {[info exists ::env(ADI_PROJECT_DIR)]} {
###     set mem_init_sys_file_path "$::env(ADI_PROJECT_DIR)mem_init_sys.txt";
###   } else {
###     set mem_init_sys_file_path "mem_init_sys.txt";
###   }
### 
###   set sys_mem_file [open $mem_init_sys_file_path "w"];
### 
###   for {set i 0} {$i < [string length $sys_mem_hex]} {incr i} {
###     if { ($i+1) % 8 == 0} {
###       puts $sys_mem_file [string index $sys_mem_hex $i];
###     } else {
###       puts -nonewline $sys_mem_file [string index $sys_mem_hex $i];
###     }
###   };
###   close $sys_mem_file;
### }
### proc sysid_gen_pr_init_file {custom_string} {
### 
###   set custom_hex [stringtohex $custom_string 64];
###   set pr_mem_file [open "mem_init_pr.txt" "w"];
###   for {set i 0} {$i < [string length $custom_hex]} {incr i} {
###     if { ($i+1) % 8 == 0} {
###       puts $pr_mem_file [string index $custom_hex $i];
###     } else {
###       puts -nonewline $pr_mem_file [string index $custom_hex $i];
###     }
###   };
###   close $pr_mem_file;
### }
## set mem_init_sys_path [get_env_param ADI_PROJECT_DIR ""]mem_init_sys.txt;
## ad_ip_parameter axi_sysid_0 CONFIG.ROM_ADDR_BITS 9
## ad_ip_parameter rom_sys_0 CONFIG.PATH_TO_FILE "[pwd]/$mem_init_sys_path"
## ad_ip_parameter rom_sys_0 CONFIG.ROM_ADDR_BITS 9
## sysid_gen_sys_init_file
project_name: ad9081_fmca_ebz_vck190
gitsha_string: 0
gitsha_hex: 0000003000000000000000000000000000000000000000000000000000000000000000000000000000000000
git_clean_string: f
git_clean_hex: 00000066
gitbranch_string: 
git_branch_hex: 00000000000000000000000000000000000000000000000000000000
vadj_check_string: vadj
vadj_check_hex: 6a646176
thetime: 1711532932
timedate_hex: 313137313932333500003233
boardname_string: vck190
boardname_hex: 316b637600003039000000000000000000000000000000000000000000000000
projname_string: ad9081_fmca_ebz
projname_hex: 30396461665f31385f61636d007a626500000000000000000000000000000000
custom_string: 
custom_hex: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Wrote  : </home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.srcs/sources_1/bd/system/system.bd> 
Generating placement and routing for NoC components
NoC TrafficSpec | Checksum: c920de8
NoC Constraints | Checksum: bf5a286d
NoC Incremental Solution | Checksum: 8cee98bf
INFO: [Ipconfig 75-92] Running NOC Placement
INFO: [Ipconfig 75-122] Detailed placement phase
INFO: [Ipconfig 75-133] Running NOC Routing
NoC Compiler Finished Successfully
NoC Solution | Checksum: 2c519447
INFO: [Ipconfig 75-108] Writing file /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/common/nsln/NOC_Power.xpe.
INFO: [xilinx.com:ip:smartconnect:1.0-1] system_axi_cpu_interconnect_0: SmartConnect system_axi_cpu_interconnect_0 is in Low-Area Mode.
WARNING: [xilinx.com:ip:smartconnect:1.0-1] system_axi_cpu_interconnect_0: IP system_axi_cpu_interconnect_0 is configured in Low-area mode as all propagated traffic is low-bandwidth (AXI4LITE). SI S00_AXI has property HAS_BURST == 1. WRAP bursts are not supported in Low-area mode and will result in DECERR if received.
WARNING: [xilinx.com:ip:smartconnect:1.0-1] system_axi_cpu_interconnect_0: If WRAP transactions are required then turn off Low-area mode using ADVANCED_PROPERTIES. Execute following: set_property CONFIG.ADVANCED_PROPERTIES {__experimental_features__ {disable_low_area_mode 1}} [get_bd_cells /system_axi_cpu_interconnect_0]
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
WARNING: [BD 41-237] Bus Interface property RUSER_WIDTH does not match between /axi_noc_0/S00_AXI(17) and /sys_cips/FPD_CCI_NOC_0(0)
WARNING: [BD 41-237] Bus Interface property RUSER_WIDTH does not match between /axi_noc_0/S01_AXI(17) and /sys_cips/FPD_CCI_NOC_1(0)
WARNING: [BD 41-237] Bus Interface property RUSER_WIDTH does not match between /axi_noc_0/S02_AXI(17) and /sys_cips/FPD_CCI_NOC_2(0)
WARNING: [BD 41-237] Bus Interface property RUSER_WIDTH does not match between /axi_noc_0/S03_AXI(17) and /sys_cips/FPD_CCI_NOC_3(0)
WARNING: [BD 41-237] Bus Interface property WUSER_WIDTH does not match between /axi_noc_0/S04_AXI(17) and /sys_cips/LPD_AXI_NOC_0(0)
WARNING: [BD 41-237] Bus Interface property RUSER_WIDTH does not match between /axi_noc_0/S04_AXI(17) and /sys_cips/LPD_AXI_NOC_0(0)
WARNING: [BD 41-927] Following properties on pin /axi_sysid_0/s_axi_aclk have been updated from connected ip, but BD cell '/axi_sysid_0' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </axi_sysid_0> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /rom_sys_0/clk have been updated from connected ip, but BD cell '/rom_sys_0' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </rom_sys_0> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /axi_mxfe_rx_jesd/rx_axi/s_axi_aclk have been updated from connected ip, but BD cell '/axi_mxfe_rx_jesd/rx_axi' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </axi_mxfe_rx_jesd/rx_axi> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /rx_mxfe_tpl_core/adc_tpl_core/s_axi_aclk have been updated from connected ip, but BD cell '/rx_mxfe_tpl_core/adc_tpl_core' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </rx_mxfe_tpl_core/adc_tpl_core> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /mxfe_rx_data_offload/i_data_offload/s_axi_aclk have been updated from connected ip, but BD cell '/mxfe_rx_data_offload/i_data_offload' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </mxfe_rx_data_offload/i_data_offload> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /mxfe_rx_data_offload/i_data_offload/m_axis_aclk have been updated from connected ip, but BD cell '/mxfe_rx_data_offload/i_data_offload' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 333333008 
Please resolve any mismatches by directly setting properties on BD cell </mxfe_rx_data_offload/i_data_offload> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /mxfe_rx_data_offload/storage_unit/m_axis_aclk have been updated from connected ip, but BD cell '/mxfe_rx_data_offload/storage_unit' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 333333008 
Please resolve any mismatches by directly setting properties on BD cell </mxfe_rx_data_offload/storage_unit> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /axi_mxfe_tx_jesd/tx_axi/s_axi_aclk have been updated from connected ip, but BD cell '/axi_mxfe_tx_jesd/tx_axi' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </axi_mxfe_tx_jesd/tx_axi> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /tx_mxfe_tpl_core/dac_tpl_core/s_axi_aclk have been updated from connected ip, but BD cell '/tx_mxfe_tpl_core/dac_tpl_core' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </tx_mxfe_tpl_core/dac_tpl_core> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /mxfe_tx_data_offload/i_data_offload/s_axi_aclk have been updated from connected ip, but BD cell '/mxfe_tx_data_offload/i_data_offload' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 99999901 
Please resolve any mismatches by directly setting properties on BD cell </mxfe_tx_data_offload/i_data_offload> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /mxfe_tx_data_offload/i_data_offload/s_axis_aclk have been updated from connected ip, but BD cell '/mxfe_tx_data_offload/i_data_offload' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 333333008 
Please resolve any mismatches by directly setting properties on BD cell </mxfe_tx_data_offload/i_data_offload> to completely resolve these warnings.
WARNING: [BD 41-927] Following properties on pin /mxfe_tx_data_offload/storage_unit/s_axis_aclk have been updated from connected ip, but BD cell '/mxfe_tx_data_offload/storage_unit' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 333333008 
Please resolve any mismatches by directly setting properties on BD cell </mxfe_tx_data_offload/storage_unit> to completely resolve these warnings.
validate_bd_design: Time (s): cpu = 00:00:29 ; elapsed = 00:00:30 . Memory (MB): peak = 3471.723 ; gain = 240.488 ; free physical = 102570 ; free virtual = 124049
INFO: [BD 41-1662] The design 'system.bd' is already validated. Therefore parameter propagation will not be re-run.
Wrote  : </home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.srcs/sources_1/bd/system/system.bd> 
VHDL Output written to : /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/synth/system.v
VHDL Output written to : /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/sim/system.v
VHDL Output written to : /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/hdl/system_wrapper.v
INFO: [xilinx.com:ip:pspmc:1.1-2] bd_cc32_pspmc_0_0: XDC Generation
INFO: [xilinx.com:ip:pspmc:1.1-2] bd_cc32_pspmc_0_0: Time taken by generate_ps_data 2774 ms
INFO: [xilinx.com:ip:pspmc:1.1-2] bd_cc32_pspmc_0_0: Time taken by XDC_generate is 2775 ms
INFO: [xilinx.com:ip:pspmc:1.1-2] bd_cc32_pspmc_0_0: REG Generation
INFO: [xilinx.com:ip:pspmc:1.1-2] bd_cc32_pspmc_0_0: Time taken by generate_ps_data 933 ms
INFO: [xilinx.com:ip:pspmc:1.1-2] bd_cc32_pspmc_0_0: Time taken by reg_generate is 933 ms
Exporting to file /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/ip/system_sys_cips_0/bd_0/hw_handoff/system_sys_cips_0.hwh
Generated Hardware Definition File /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/ip/system_sys_cips_0/bd_0/synth/system_sys_cips_0.hwdef
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_cips .
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S07_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S07_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S05_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S05_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S00_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S00_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S04_AXI_rpu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S04_AXI_rpu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S01_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S01_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S06_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S06_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S02_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S02_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S03_AXI_nmu_0: device = xcvc1902
INFO: [xilinx.com:ip:noc_nmu:1.0-1] bd_04bc_S03_AXI_nmu_0: device = xcvc1902
Calling reg_generate
Exporting to file /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/ip/system_axi_noc_0_0/bd_0/hw_handoff/system_axi_noc_0_0.hwh
Generated Hardware Definition File /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/ip/system_axi_noc_0_0/bd_0/synth/system_axi_noc_0_0.hwdef
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_noc_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_rstgen .
INFO: [BD 41-1029] Generation completed for the IP Integrator block sys_350m_rstgen .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_gpio .
Exporting to file /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/ip/system_axi_cpu_interconnect_0/bd_0/hw_handoff/system_axi_cpu_interconnect_0.hwh
Generated Hardware Definition File /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/ip/system_axi_cpu_interconnect_0/bd_0/synth/system_axi_cpu_interconnect_0.hwdef
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_cpu_interconnect .
INFO: [BD 41-1029] Generation completed for the IP Integrator block GND_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block VCC_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_sysid_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rom_sys_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/gt_bridge_ip_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/gt_quad_base_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/bufg_gt_rx_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/bufg_gt_tx_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/rx_adapt_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/rx_adapt_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/tx_adapt_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/tx_adapt_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/xlconcat_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/util_reduced_logic_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/xlconcat_iloresetdone .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/util_reduced_logic_iloresetdone .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/xlconcat_cplllock .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/util_reduced_logic_cplllock .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/xlconcat_ch .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/slice_ch0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block jesd204_phy/slice_ch1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_device_clk_rstgen .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_mxfe_rx_jesd/rx_axi .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_mxfe_rx_jesd/rx .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/adc_tpl_core .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_2 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_2 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_2 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_3 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_3 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_3 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_4 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_4 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_4 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_5 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_5 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_5 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_6 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_6 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_6 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/data_slice_7 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/enable_slice_7 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_mxfe_tpl_core/valid_slice_7 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block util_mxfe_cpack .
INFO: [BD 41-1029] Generation completed for the IP Integrator block mxfe_rx_data_offload/i_data_offload .
INFO: [BD 41-1029] Generation completed for the IP Integrator block mxfe_rx_data_offload/storage_unit .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_mxfe_rx_dma .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_device_clk_rstgen .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_mxfe_tx_jesd/tx_axi .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_mxfe_tx_jesd/tx .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/dac_tpl_core .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/data_concat0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_1 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_2 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_2 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_3 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_3 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_4 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_4 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_5 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_5 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_6 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_6 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/enable_slice_7 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block tx_mxfe_tpl_core/valid_slice_7 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block util_mxfe_upack .
INFO: [BD 41-1029] Generation completed for the IP Integrator block mxfe_tx_data_offload/i_data_offload .
INFO: [BD 41-1029] Generation completed for the IP Integrator block mxfe_tx_data_offload/storage_unit .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_mxfe_tx_dma .
INFO: [BD 41-1029] Generation completed for the IP Integrator block manual_sync_or .
INFO: [BD 41-1029] Generation completed for the IP Integrator block cpack_rst_logic .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rx_do_rstout_logic .
INFO: [BD 41-1029] Generation completed for the IP Integrator block cpack_reset_sources .
INFO: [BD 41-1029] Generation completed for the IP Integrator block upack_rst_logic .
INFO: [BD 41-1029] Generation completed for the IP Integrator block upack_reset_sources .
Exporting to file /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/hw_handoff/system.hwh
Generated Hardware Definition File /home/epics/adi_2022_R2_master/hdl-master/projects/ad9081_fmca_ebz/vck190/ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/synth/system.hwdef
generate_target: Time (s): cpu = 00:01:05 ; elapsed = 00:01:16 . Memory (MB): peak = 3609.184 ; gain = 137.461 ; free physical = 102414 ; free virtual = 123948
INFO: [Project 1-1716] Could not find the wrapper file ad9081_fmca_ebz_vck190.srcs/sources_1/bd/system/hdl/system_wrapper.v, checking in project .gen location instead.
INFO: [Vivado 12-12391] Found file ad9081_fmca_ebz_vck190.gen/sources_1/bd/system/hdl/system_wrapper.v, importing it to Project
# adi_project_files ad9081_fmca_ebz_vck190 [list \
#   "system_top.v" \
#   "system_constr.xdc"\
#   "timing_constr.xdc"\
#   "../../../library/common/ad_3w_spi.v"\
#   "$ad_hdl_dir/library/common/ad_iobuf.v" \
#   "$ad_hdl_dir/projects/common/vck190/vck190_system_constr.xdc" ]
# set_property strategy Performance_Explore [get_runs impl_1]
INFO: [Common 17-206] Exiting Vivado at Wed Mar 27 10:50:41 2024...
